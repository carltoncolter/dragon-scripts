# COMMAND SET: Visual Studio
#
# DESCRIPTION: This is an adaptation of Mark Kristensen's Voice Commands that leverage the Speech API.
# A lot of people that have problems typing use Dragon Naturally Speaking because of its ability to
# learn and recognize your specific speech patterns to reduce errors converting the speech to text.
#
# Some of those people are developers and need the ability to use their voice when working in Visual Studio.
# Mark Kristensen's Voice Commands were a great start to enabling the speech to command conversion.  I took
# his code and leveraged the work he did to create a python script compatible with DragonFly, which is typically
# used with NatLink and Dragon Naturally Speaking.  This code provides the ability to turn on Visual Studio
# Shortcuts and send commands to the active Visual Studio instance.
# 
# ENABLE COMMAND: enable (vs|visual studio) (shortcuts|short cuts)
# DISABLE COMMAND: disable (vs|visual studio) (shortcuts|short cuts)
# COMMAND LIST: See commands starting at line 105

from dragonfly import Grammar, CompoundRule, Dictation, Text, Key, AppContext, MappingRule, Integer, Function, ActionError, DynStrActionBase
# from .action_base           import DynStrActionBase, ActionError
from comtypes.client import GetActiveObject
from win32com.client import GetObject # (GetActiveObject, GetObject)
from win32api import (GetFileVersionInfo, HIWORD)
from win32gui import (GetWindowText, GetForegroundWindow)
from win32process import GetWindowThreadProcessId
import os

class VSShortcutEnabler(CompoundRule):
    spec = "enable (vs|visual studio) (shortcuts|short cuts)"                  # Spoken form of command.
    
    def _process_recognition(self, node, extras):   # Callback when command is spoken.
        vsBootstrap.disable()
        vsGrammar.enable()
        print "Visual Studio Shortcuts Enabled"

class VSShortcutDisabler(CompoundRule):
    spec = "disable (vs|visual studio) (shortcuts|short cuts)"                  # Spoken form of command.
    
    def _process_recognition(self, node, extras):   # Callback when command is spoken.
        vsGrammar.disable()
        vsBootstrap.enable()
        print "Visual Studio Shortcuts Disabled"       


class VSExecuteCommand(DynStrActionBase):
    """
        Action that sends visual studio commands to the visual studio dte.

        Arguments:
         - *spec* (*str*) -- the text to send to Executecommand

    """

    _default_version = 15
    _pause_default = 0.02

    def __init__(self, spec=None, static=False, pause=_pause_default,
                 autofmt=False):
        self._dte = ""
        DynStrActionBase.__init__(self, spec=spec, static=static)

    def _get_process_path(self, pid):
        WMI = GetObject('winmgmts:')
        processes = WMI.InstancesOf('Win32_Process')                
        for p in processes :                                
            if p.Properties_("ProcessID").Value == pid: 
                return p.Properties_[7].Value               
        return "no such process"

    def _get_version_number(self, filename):
        # filename_w_ext = os.path.basename(filename)
        # filename2, file_extension = os.path.splitext(filename_w_ext)
        # print(filename2)
        # print(file_extension)
        try:
            info = GetFileVersionInfo (filename, "\\")
            ms = info['FileVersionMS']
            ls = info['FileVersionLS']
            return HIWORD (ms)
        except:
            return self._default_version

    def _get_vs_dte(self):
        hwnd = GetForegroundWindow()
        name = GetWindowText(hwnd)
        tid, pid = GetWindowThreadProcessId(hwnd)

        path = self._get_process_path(pid)
        version = self._get_version_number(path)

        return "VisualStudio.DTE.%s.0" % version

    def _parse_spec(self, spec):
        # spec is the command to execute
        return spec

    def _execute_events(self, events):
        command = events
        try:    
            self._dte = self._get_vs_dte()
            print("Sending Visual Studio Command [%s] to %s" % (command, self._dte))
            ao_dte = GetActiveObject(unicode(self._dte))
        except Exception, e: 
            print("Unable to get DTE, Error: %s" % str(e))
        try:
            ao_dte.ExecuteCommand(unicode(command))
            ao_dte = None
        except Exception, e: 
            print("The following error prevented the command %s from being sent to Visual Studio(DTE:%s).\r\nError: %s" % (command, self._dte, str(e)))
        return True


class VSShortcutMap(MappingRule):

    mapping = {
        "next error":                            VSExecuteCommand("View.NextError"),
        "previous error":                        VSExecuteCommand("View.PreviousError"),
        "next task":                             VSExecuteCommand("View.NextTask"),
        "previous task":                         VSExecuteCommand("View.PreviousTask"),
        "show task help":                        VSExecuteCommand("Help.ShowTaskHelp"),
        "align bottoms":                         VSExecuteCommand("Format.AlignBottoms"),
        "align middles":                         VSExecuteCommand("Format.AlignMiddles"),
        "align lefts":                           VSExecuteCommand("Format.AlignLefts"),
        "align rights":                          VSExecuteCommand("Format.AlignRights"),
        "align to grid":                         VSExecuteCommand("Format.AligntoGrid"),
        "align tops":                            VSExecuteCommand("Format.AlignTops"),
        "align centers":                         VSExecuteCommand("Format.AligillusnCenters"),
        "bring to front":                        VSExecuteCommand("Format.BringtoFront"),
        "center horizontally":                   VSExecuteCommand("Format.CenterHorizontally"),
        "center vertically":                     VSExecuteCommand("Format.CenterVertically"),
        "view code":                             VSExecuteCommand("OtherContextMenus.MenuDesigner.ViewCode"),
        "copy":                                  VSExecuteCommand("Edit.Copy"),
        "cut":                                   VSExecuteCommand("Edit.Cut"),
        "delete":                                VSExecuteCommand("Edit.Delete"),
        "remove horizontal spacing":             VSExecuteCommand("Format.RemoveHorizontalSpacing"),
        "decrease horizontal spacing":           VSExecuteCommand("Format.DecreaseHorizontalSpacing"),
        "increase horizontal spacing":           VSExecuteCommand("Format.IncreaseHorizontalSpacing"),
        "make horizontal spacing equal":         VSExecuteCommand("Format.MakeHorizontalSpacingEqual"),
        "paste":                                 VSExecuteCommand("Edit.Paste"),
        "print":                                 VSExecuteCommand("File.Print"),
        "redo":                                  VSExecuteCommand("Edit.Redo"),
        "select all":                            VSExecuteCommand("Edit.SelectAll"),
        "send to back":                          VSExecuteCommand("Format.SendtoBack"),
        "make same size":                        VSExecuteCommand("Format.MakeSameSize"),
        "make same height":                      VSExecuteCommand("Format.MakeSameHeight"),
        "make same width":                       VSExecuteCommand("Format.MakeSameWidth"),
        "size to grid":                          VSExecuteCommand("Format.SizetoGrid"),
        "tab order":                             VSExecuteCommand("View.TabOrder"),
        "toolbox":                               VSExecuteCommand("View.Toolbox"),
        "undo":                                  VSExecuteCommand("Edit.Undo"),
        "remove vertical spacing":               VSExecuteCommand("Format.RemoveVerticalSpacing"),
        "decrease vertical spacing":             VSExecuteCommand("Format.DecreaseVerticalSpacing"),
        "increase vertical spacing":             VSExecuteCommand("Format.IncreaseVerticalSpacing"),
        "make vertical spacing equal":           VSExecuteCommand("Format.MakeVerticalSpacingEqual"),
        "background color":                      VSExecuteCommand("Format.BackgroundColor"),
        "bold":                                  VSExecuteCommand("Format.Bold"),
        "foreground color":                      VSExecuteCommand("Format.ForegroundColor"),
        "italic":                                VSExecuteCommand("Format.Italic"),
        "justify center":                        VSExecuteCommand("Format.JustifyCenter"),
        "justify":                               VSExecuteCommand("Format.Justify"),
        "justify left":                          VSExecuteCommand("Format.JustifyLeft"),
        "justify right":                         VSExecuteCommand("Format.JustifyRight"),
        "underline":                             VSExecuteCommand("Format.Underline"),
        "find":                                  VSExecuteCommand("Edit.Find"),
        "new table":                             VSExecuteCommand("DatabaseDiagram.NewTable"),
        "verify s q l syntax":                   VSExecuteCommand("QueryDesigner.VerifySQLSyntax"),
        "set primary key":                       VSExecuteCommand("TableDesigner.SetPrimaryKey"),
        "sort ascending":                        VSExecuteCommand("QueryDesigner.SortAscending"),
        "sort descending":                       VSExecuteCommand("QueryDesigner.SortDescending"),
        "insert results":                        VSExecuteCommand("QueryDesigner.InsertResults"),
        "make table":                            VSExecuteCommand("QueryDesigner.MakeTable"),
        "select":                                VSExecuteCommand("QueryDesigner.Select"),
        "update":                                VSExecuteCommand("QueryDesigner.Update"),
        "add group by":                          VSExecuteCommand("QueryDesigner.AddGroupBy"),
        "name only":                             VSExecuteCommand("TableDesigner.NameOnly"),
        "column names":                          VSExecuteCommand("TableDesigner.ColumnNames"),
        "keys":                                  VSExecuteCommand("TableDesigner.Keys"),
        "standard":                              VSExecuteCommand("TableDesigner.Standard"),
        "s q l":                                 VSExecuteCommand("QueryDesigner.SQL"),
        "diagram":                               VSExecuteCommand("QueryDesigner.Diagram"),
        "results":                               VSExecuteCommand("QueryDesigner.Results"),
        "criteria":                              VSExecuteCommand("QueryDesigner.Criteria"),
        "select all columns":                    VSExecuteCommand("OtherContextMenus.QueryDiagramTable.SelectAllColumns"),
        "rename":                                VSExecuteCommand("File.Rename"),
        "remove filter":                         VSExecuteCommand("QueryDesigner.RemoveFilter"),
        "remove":                                VSExecuteCommand("Edit.Remove"),
        "select all rows from table a":          VSExecuteCommand("QueryDesigner.SelectAllRowsFromTableA"),
        "select all rows from table b":          VSExecuteCommand("QueryDesigner.SelectAllRowsFromTableB"),
        "addto select":                          VSExecuteCommand("QueryDesigner.AddtoSelect"),
        "generate change script":                VSExecuteCommand("TableDesigner.GenerateChangeScript"),
        "save selection":                        VSExecuteCommand("File.SaveSelection"),
        "stop debugging":                        VSExecuteCommand("Debug.StopDebugging"),
        "break all":                             VSExecuteCommand("Debug.BreakAll"),
        "refresh":                               VSExecuteCommand("View.Refresh"),
        "open with":                             VSExecuteCommand("View.OpenWith"),
        "execute s q l":                         VSExecuteCommand("QueryDesigner.ExecuteSQL"),
        "clear results":                         VSExecuteCommand("QueryDesigner.ClearResults"),
        "goto row":                              VSExecuteCommand("QueryDesigner.GotoRow"),
        "insert new":                            VSExecuteCommand("Edit.InsertNew"),
        "insert separator":                      VSExecuteCommand("Edit.InsertSeparator"),
        "edit names":                            VSExecuteCommand("Edit.EditNames"),
        "attachto process":                      VSExecuteCommand("Debug.AttachtoProcess"),
        "threads":                               VSExecuteCommand("Debug.Threads"),
        "new project":                           VSExecuteCommand("File.NewProject"),
        "open project":                          VSExecuteCommand("File.OpenProject"),
        "close solution":                        VSExecuteCommand("File.CloseSolution"),
        "add new item":                          VSExecuteCommand("Project.AddNewItem"),
        "new file":                              VSExecuteCommand("File.NewFile"),
        "open file":                             VSExecuteCommand("File.OpenFile"),
        "close":                                 VSExecuteCommand("File.Close"),
        "save all":                              VSExecuteCommand("File.SaveAll"),
        "save selected items as":                VSExecuteCommand("File.SaveSelectedItemsAs"),
        "save as":                               VSExecuteCommand("File.SaveSelectedItemsAs"),
        "page setup":                            VSExecuteCommand("File.PageSetup"),
        "print preview":                         VSExecuteCommand("File.PrintPreview"),
        "exit":                                  VSExecuteCommand("File.Exit"),
        "replace":                               VSExecuteCommand("Edit.Replace"),
        "go to":                                 VSExecuteCommand("Edit.GoTo"),
        "property pages":                        VSExecuteCommand("View.PropertyPages"),
        "full screen":                           VSExecuteCommand("View.FullScreen"),
        "solution explorer":                     VSExecuteCommand("View.SolutionExplorer"),
        "properties window":                     VSExecuteCommand("View.PropertiesWindow"),
        "task list":                             VSExecuteCommand("View.TaskList"),
        "output":                                VSExecuteCommand("View.Output"),
        "object browser":                        VSExecuteCommand("View.ObjectBrowser"),
        "document outline":                      VSExecuteCommand("View.DocumentOutline"),
        "immediate":                             VSExecuteCommand("Debug.Immediate"),
        "locals":                                VSExecuteCommand("Debug.Locals"),
        "call stack":                            VSExecuteCommand("Debug.CallStack"),
        "add existing item":                     VSExecuteCommand("Project.AddExistingItem"),
        "new folder":                            VSExecuteCommand("Project.NewFolder"),
        "setas start up project":                VSExecuteCommand("Project.SetasStartUpProject"),
        "step into":                             VSExecuteCommand("Debug.StepInto"),
        "step over":                             VSExecuteCommand("Debug.StepOver"),
        "step out":                              VSExecuteCommand("Debug.StepOut"),
        "run to cursor":                         VSExecuteCommand("Debug.RunToCursor"),
        "add watch":                             VSExecuteCommand("Debug.AddWatch"),
        "quick watch":                           VSExecuteCommand("Debug.QuickWatch"),
        "toggle breakpoint":                     VSExecuteCommand("Debug.ToggleBreakpoint"),
        "delete all breakpoints":                VSExecuteCommand("Debug.DeleteAllBreakpoints"),
        "set next statement":                    VSExecuteCommand("Debug.SetNextStatement"),
        "show next statement":                   VSExecuteCommand("Debug.ShowNextStatement"),
        "open":                                  VSExecuteCommand("View.Open"),
        "detach all":                            VSExecuteCommand("Debug.DetachAll"),
        "customize keyboard":                    VSExecuteCommand("Tools.CustomizeKeyboard"),
        "options":                               VSExecuteCommand("Tools.Options"),
        "new window":                            VSExecuteCommand("Window.NewWindow"),
        "split":                                 VSExecuteCommand("Window.Split"),
        "cascade":                               VSExecuteCommand("Window.Cascade"),
        "new horizontal tab group":              VSExecuteCommand("Window.NewHorizontalTabGroup"),
        "new vertical tab group":                VSExecuteCommand("Window.NewVerticalTabGroup"),
        "technical support":                     VSExecuteCommand("Help.TechnicalSupport"),
        "about":                                 VSExecuteCommand("Help.About"),
        "delete watch":                          VSExecuteCommand("DebuggerContextMenus.AutosWindow.DeleteWatch"),
        "collapse parent":                       VSExecuteCommand("DebuggerContextMenus.AutosWindow.CollapseParent"),
        "findin files":                          VSExecuteCommand("Edit.FindinFiles"),
        "replacein files":                       VSExecuteCommand("Edit.ReplaceinFiles"),
        "go to next location":                   VSExecuteCommand("Edit.GoToNextLocation"),
        "go to prev location":                   VSExecuteCommand("Edit.GoToPrevLocation"),
        "dock":                                  VSExecuteCommand("Window.Dock"),
        "hide":                                  VSExecuteCommand("Window.Hide"),
        "next tab":                              VSExecuteCommand("Window.NextTab"),
        "previous tab":                          VSExecuteCommand("Window.PreviousTab"),
        "close tool window":                     VSExecuteCommand("Window.CloseToolWindow"),
        "activate document window":              VSExecuteCommand("Window.ActivateDocumentWindow"),
        "dockas tabbed document":                VSExecuteCommand("Window.DockasTabbedDocument"),
        "float":                                 VSExecuteCommand("Window.Float"),
        "auto hide":                             VSExecuteCommand("Window.AutoHide"),
        "moveto navigation bar":                 VSExecuteCommand("Window.MovetoNavigationBar"),
        "start":                                 VSExecuteCommand("Debug.Start"),
        "restart":                               VSExecuteCommand("Debug.Restart"),
        "addin manager":                         VSExecuteCommand("Tools.AddinManager"),
        "add tab":                               VSExecuteCommand("Tools.AddTab"),
        "delete tab":                            VSExecuteCommand("Tools.DeleteTab"),
        "rename tab":                            VSExecuteCommand("Tools.RenameTab"),
        "move up":                               VSExecuteCommand("Tools.MoveUp"),
        "move down":                             VSExecuteCommand("Tools.MoveDown"),
        "rename item":                           VSExecuteCommand("OtherContextMenus.Toolbox.RenameItem"),
        "list view":                             VSExecuteCommand("Tools.ListView"),
        "insert values":                         VSExecuteCommand("QueryDesigner.InsertValues"),
        "freeze":                                VSExecuteCommand("DebuggerContextMenus.GPUThreadsWindowShortcutMenu.Freeze"),
        "thaw":                                  VSExecuteCommand("DebuggerContextMenus.GPUThreadsWindowShortcutMenu.Thaw"),
        "switch to thread":                      VSExecuteCommand("DebuggerContextMenus.GPUThreadsWindowShortcutMenu.SwitchToThread"),
        "hexadecimal display":                   VSExecuteCommand("Debug.HexadecimalDisplay"),
        "next pane":                             VSExecuteCommand("Window.NextPane"),
        "previous pane":                         VSExecuteCommand("Window.PreviousPane"),
        "clear all":                             VSExecuteCommand("Edit.ClearAll"),
        "go to location":                        VSExecuteCommand("OtherContextMenus.ResultsList.GoToLocation"),
        "error list":                            VSExecuteCommand("View.ErrorList"),
        "cancel":                                VSExecuteCommand("OtherContextMenus.EasyMDIDragging.Cancel"),
        "debug help context":                    VSExecuteCommand("Help.DebugHelpContext"),
        "samples":                               VSExecuteCommand("Help.Samples"),
        "add remove toolbox items":              VSExecuteCommand("Tools.AddRemoveToolboxItems"),
        "reset toolbox":                         VSExecuteCommand("Tools.ResetToolbox"),
        "save selected items":                   VSExecuteCommand("File.SaveSelectedItems"),
        "save":                                  VSExecuteCommand("File.SaveSelectedItems"),
        "view designer":                         VSExecuteCommand("View.ViewDesigner"),
        "view in browser":                       VSExecuteCommand("File.ViewinBrowser"),
        "browse with":                           VSExecuteCommand("File.BrowseWith"),
        "edit label":                            VSExecuteCommand("View.EditLabel"),
        "exceptions":                            VSExecuteCommand("Debug.Exceptions"),
        "elasticcolumn":                         VSExecuteCommand("DebuggerContextMenus.AutosWindow.Elasticcolumn"),
        "toggle designer":                       VSExecuteCommand("View.ToggleDesigner"),
        "zoom":                                  VSExecuteCommand("View.Zoom"),
        "stop search":                           VSExecuteCommand("Edit.StopSearch"),
        "start without debugging":               VSExecuteCommand("Debug.StartWithoutDebugging"),
        "lock controls":                         VSExecuteCommand("Format.LockControls"),
        "find next":                             VSExecuteCommand("Edit.FindNext"),
        "find previous":                         VSExecuteCommand("Edit.FindPrevious"),
        "find next selected":                    VSExecuteCommand("Edit.FindNextSelected"),
        "find previous selected":                VSExecuteCommand("Edit.FindPreviousSelected"),
        "insert breakpoint":                     VSExecuteCommand("EditorContextMenus.CodeWindow.Breakpoint.InsertBreakpoint"),
        "enable breakpoint":                     VSExecuteCommand("Debug.EnableBreakpoint"),
        "f1 help":                               VSExecuteCommand("Help.F1Help"),
        "moveto next tab group":                 VSExecuteCommand("Window.MovetoNextTabGroup"),
        "moveto previous tab group":             VSExecuteCommand("Window.MovetoPreviousTabGroup"),
        "properties":                            VSExecuteCommand("Project.Properties"),
        "reload project":                        VSExecuteCommand("Project.ReloadProject"),
        "unload project":                        VSExecuteCommand("Project.UnloadProject"),
        "select project template":               VSExecuteCommand("File.SelectProjectTemplate"),
        "no commands available":                 VSExecuteCommand("OtherContextMenus.NoCommandsAvailable.NoCommandsAvailable"),
        #"alias":                                 VSExecuteCommand("Tools.Alias"),
        "go to command line":                    VSExecuteCommand("Tools.GoToCommandLine"),
        "immediate mode":                        VSExecuteCommand("Tools.ImmediateMode"),
        "evaluate statement":                    VSExecuteCommand("Debug.EvaluateStatement"),
        #"find results1":                         VSExecuteCommand("View.FindResults1"),
        #"find results2":                         VSExecuteCommand("View.FindResults2"),
        "windows":                               VSExecuteCommand("Window.Windows"),
        "auto hide all":                         VSExecuteCommand("Window.AutoHideAll"),
        "class view":                            VSExecuteCommand("View.ClassView"),
        "next split pane":                       VSExecuteCommand("Window.NextSplitPane"),
        "previous split pane":                   VSExecuteCommand("Window.PreviousSplitPane"),
        "close all documents":                   VSExecuteCommand("Window.CloseAllDocuments"),
        "next document window":                  VSExecuteCommand("Window.NextDocumentWindow"),
        "previous document window":              VSExecuteCommand("Window.PreviousDocumentWindow"),
        "external tools":                        VSExecuteCommand("Tools.ExternalTools"),
        "cycle clipboard ring":                  VSExecuteCommand("Edit.CycleClipboardRing"),
        "show all":                              VSExecuteCommand("Tools.ShowAll"),
        "project dependencies":                  VSExecuteCommand("Project.ProjectDependencies"),
        "close document window":                 VSExecuteCommand("Window.CloseDocumentWindow"),
        "sort items alphabetically":             VSExecuteCommand("Tools.SortItemsAlphabetically"),
        "command window":                        VSExecuteCommand("View.CommandWindow"),
        "log command window output":             VSExecuteCommand("Tools.LogCommandWindowOutput"),
        "shell":                                 VSExecuteCommand("Tools.Shell"),
        "regular expression help":               VSExecuteCommand("OtherContextMenus.FindRegularExpressionBuilder.RegularExpressionHelp"),
        "autos":                                 VSExecuteCommand("Debug.Autos"),
        "configuration manager":                 VSExecuteCommand("Build.ConfigurationManager"),
        "add new project":                       VSExecuteCommand("File.AddNewProject"),
        "add existing project":                  VSExecuteCommand("File.AddExistingProject"),
        "navigate backward":                     VSExecuteCommand("View.NavigateBackward"),
        "navigate forward":                      VSExecuteCommand("View.NavigateForward"),
        "build solution":                        VSExecuteCommand("Build.BuildSolution"),
        "rebuild solution":                      VSExecuteCommand("Build.RebuildSolution"),
        "deploy solution":                       VSExecuteCommand("Build.DeploySolution"),
        "clean solution":                        VSExecuteCommand("Build.CleanSolution"),
        "build selection":                       VSExecuteCommand("Build.BuildSelection"),
        "rebuild selection":                     VSExecuteCommand("Build.RebuildSelection"),
        "deploy selection":                      VSExecuteCommand("Build.DeploySelection"),
        "clean selection":                       VSExecuteCommand("Build.CleanSelection"),
        "batch build":                           VSExecuteCommand("Build.BatchBuild"),
        "build":                                 VSExecuteCommand("ClassViewContextMenus.ClassViewProject.Build"),
        "rebuild":                               VSExecuteCommand("ClassViewContextMenus.ClassViewProject.Rebuild"),
        "deploy":                                VSExecuteCommand("ClassViewContextMenus.ClassViewProject.Deploy"),
        "clean":                                 VSExecuteCommand("ClassViewContextMenus.ClassViewProject.Clean"),
        "item path":                             VSExecuteCommand("Tools.ItemPath"),
        "item directory":                        VSExecuteCommand("Tools.ItemDirectory"),
        "item file name":                        VSExecuteCommand("Tools.ItemFileName"),
        "item extension":                        VSExecuteCommand("Tools.ItemExtension"),
        "project directory":                     VSExecuteCommand("Tools.ProjectDirectory"),
        "project file name":                     VSExecuteCommand("Tools.ProjectFileName"),
        "solution directory":                    VSExecuteCommand("Tools.SolutionDirectory"),
        "solution file name":                    VSExecuteCommand("Tools.SolutionFileName"),
        "go to definition":                      VSExecuteCommand("Edit.GoToDefinition"),
        "go to declaration":                     VSExecuteCommand("Edit.GoToDeclaration"),
        "browse definition":                     VSExecuteCommand("View.BrowseDefinition"),
        "synchronize class view":                VSExecuteCommand("View.SynchronizeClassView"),
        "show references":                       VSExecuteCommand("View.ShowReferences"),
        "add class":                             VSExecuteCommand("Project.AddClass"),
        "add nested class":                      VSExecuteCommand("Project.AddNestedClass"),
        "add interface":                         VSExecuteCommand("Project.AddInterface"),
        "add method":                            VSExecuteCommand("Project.AddMethod"),
        "add property":                          VSExecuteCommand("Project.AddProperty"),
        "add event":                             VSExecuteCommand("Project.AddEvent"),
        "add variable":                          VSExecuteCommand("Project.AddVariable"),
        "implement interface":                   VSExecuteCommand("Project.ImplementInterface"),
        "override":                              VSExecuteCommand("Project.Override"),
        "add function":                          VSExecuteCommand("Project.AddFunction"),
        "add connection point":                  VSExecuteCommand("Project.AddConnectionPoint"),
        "add indexer":                           VSExecuteCommand("Project.AddIndexer"),
        "project build order":                   VSExecuteCommand("Project.ProjectBuildOrder"),
        "advanced save options":                 VSExecuteCommand("File.AdvancedSaveOptions"),
        "new class view folder":                 VSExecuteCommand("View.NewClassViewFolder"),
        "find symbol":                           VSExecuteCommand("Edit.FindSymbol"),
        "find symbol results":                   VSExecuteCommand("View.FindSymbolResults"),
        "project picker build":                  VSExecuteCommand("Build.ProjectPickerBuild"),
        "project picker rebuild":                VSExecuteCommand("Build.ProjectPickerRebuild"),
        "resource view":                         VSExecuteCommand("View.ResourceView"),
        "edit i ds":                             VSExecuteCommand("Edit.EditIDs"),
        #"matchalinebreak":                       VSExecuteCommand("OtherContextMenus.FindRegularExpressionBuilder.Matchalinebreak"),
        #"matchanywhitespacecharacter":           VSExecuteCommand("OtherContextMenus.FindRegularExpressionBuilder.Matchanywhitespacecharacter"),
        #"matchanydecimaldigit":                  VSExecuteCommand("OtherContextMenus.FindRegularExpressionBuilder.Matchanydecimaldigit"),
        "customize":                             VSExecuteCommand("Tools.Customize"),
        "move to top":                           VSExecuteCommand("ClassViewContextMenus.ClassViewFolder.MoveToTop"),
        "window help":                           VSExecuteCommand("Help.WindowHelp"),
        "next view":                             VSExecuteCommand("View.NextView"),
        "next subpane":                          VSExecuteCommand("Window.NextSubpane"),
        "previous subpane":                      VSExecuteCommand("Window.PreviousSubpane"),
        "project picker move into":              VSExecuteCommand("File.ProjectPickerMoveInto"),
        "edit custom component set":             VSExecuteCommand("Tools.EditCustomComponentSet"),
        "pop browse context":                    VSExecuteCommand("View.PopBrowseContext"),
        "go to reference":                       VSExecuteCommand("Edit.GoToReference"),
        "target path":                           VSExecuteCommand("Tools.TargetPath"),
        "target directory":                      VSExecuteCommand("Tools.TargetDirectory"),
        "target name":                           VSExecuteCommand("Tools.TargetName"),
        "target extension":                      VSExecuteCommand("Tools.TargetExtension"),
        "current line":                          VSExecuteCommand("Tools.CurrentLine"),
        "current column":                        VSExecuteCommand("Tools.CurrentColumn"),
        "current text":                          VSExecuteCommand("Tools.CurrentText"),
        "browse next":                           VSExecuteCommand("View.BrowseNext"),
        "browse previous":                       VSExecuteCommand("View.BrowsePrevious"),
        "unload source browser files":           VSExecuteCommand("Tools.UnloadSourceBrowserFiles"),
        "quick find symbol":                     VSExecuteCommand("Edit.QuickFindSymbol"),
        "expand all":                            VSExecuteCommand("View.ExpandAll"),
        "binary directory":                      VSExecuteCommand("Tools.BinaryDirectory"),
        "bookmark window":                       VSExecuteCommand("View.BookmarkWindow"),
        "code snippets manager":                 VSExecuteCommand("Tools.CodeSnippetsManager"),
        "next document window nav":              VSExecuteCommand("Window.NextDocumentWindowNav"),
        "previous document window nav":          VSExecuteCommand("Window.PreviousDocumentWindowNav"),
        "forward browse context":                VSExecuteCommand("View.ForwardBrowseContext"),
        "reset window layout":                   VSExecuteCommand("Window.ResetWindowLayout"),
        "find all references":                   VSExecuteCommand("Edit.FindAllReferences"),
        "delete backwards":                      VSExecuteCommand("Edit.DeleteBackwards"),
        "break line":                            VSExecuteCommand("Edit.BreakLine"),
        "insert tab":                            VSExecuteCommand("Edit.InsertTab"),
        "tab left":                              VSExecuteCommand("Edit.TabLeft"),
        #"char left":                             VSExecuteCommand("Edit.CharLeft"),
        #"char left extend":                      VSExecuteCommand("Edit.CharLeftExtend"),
        #"char right":                            VSExecuteCommand("Edit.CharRight"),
        #"char right extend":                     VSExecuteCommand("Edit.CharRightExtend"),
        #"line up":                               VSExecuteCommand("Edit.LineUp"),
        #"line up extend":                        VSExecuteCommand("Edit.LineUpExtend"),
        #"line down":                             VSExecuteCommand("Edit.LineDown"),
        #"line down extend":                      VSExecuteCommand("Edit.LineDownExtend"),
        #"line start":                            VSExecuteCommand("Edit.LineStart"),
        #"line start extend":                     VSExecuteCommand("Edit.LineStartExtend"),
        #"line start after indentation":          VSExecuteCommand("Edit.LineStartAfterIndentation"),
        #"line start after indentation extend":   VSExecuteCommand("Edit.LineStartAfterIndentationExtend"),
        #"line end":                              VSExecuteCommand("Edit.LineEnd"),
        #"line end extend":                       VSExecuteCommand("Edit.LineEndExtend"),
        #"line last char":                        VSExecuteCommand("Edit.LineLastChar"),
        #"line last char extend":                 VSExecuteCommand("Edit.LineLastCharExtend"),
        "page up":                               VSExecuteCommand("Edit.PageUp"),
        "page up extend":                        VSExecuteCommand("Edit.PageUpExtend"),
        "page down":                             VSExecuteCommand("Edit.PageDown"),
        "page down extend":                      VSExecuteCommand("Edit.PageDownExtend"),
        "view top":                              VSExecuteCommand("Edit.ViewTop"),
        #"view top extend":                       VSExecuteCommand("Edit.ViewTopExtend"),
        "view bottom":                           VSExecuteCommand("Edit.ViewBottom"),
        #"view bottom extend":                    VSExecuteCommand("Edit.ViewBottomExtend"),
        #"scroll line up":                        VSExecuteCommand("Edit.ScrollLineUp"),
        #"scroll line down":                      VSExecuteCommand("Edit.ScrollLineDown"),
        #"scroll page up":                        VSExecuteCommand("Edit.ScrollPageUp"),
        #"scroll page down":                      VSExecuteCommand("Edit.ScrollPageDown"),
        #"scroll column left":                    VSExecuteCommand("Edit.ScrollColumnLeft"),
        #"scroll column right":                   VSExecuteCommand("Edit.ScrollColumnRight"),
        #"scroll line bottom":                    VSExecuteCommand("Edit.ScrollLineBottom"),
        #"scroll line center":                    VSExecuteCommand("Edit.ScrollLineCenter"),
        #"scroll line top":                       VSExecuteCommand("Edit.ScrollLineTop"),
        #"tabify selected lines":                 VSExecuteCommand("Edit.TabifySelectedLines"),
        "tabify":                                VSExecuteCommand("Edit.TabifySelectedLines"),
        #"untabify selected lines":               VSExecuteCommand("Edit.UntabifySelectedLines"),
        "untabify":                              VSExecuteCommand("Edit.UntabifySelectedLines"),
        "make lowercase":                        VSExecuteCommand("Edit.MakeLowercase"),
        "make uppercase":                        VSExecuteCommand("Edit.MakeUppercase"),
        "toggle case":                           VSExecuteCommand("Edit.ToggleCase"),
        "capitalize":                            VSExecuteCommand("Edit.Capitalize"),
        "swap anchor":                           VSExecuteCommand("Edit.SwapAnchor"),
        "goto brace":                            VSExecuteCommand("Edit.GotoBrace"),
        #"goto brace extend":                     VSExecuteCommand("Edit.GotoBraceExtend"),
        "overtype mode":                         VSExecuteCommand("Edit.OvertypeMode"),
        "line cut":                              VSExecuteCommand("Edit.LineCut"),
        "line delete":                           VSExecuteCommand("Edit.LineDelete"),
        "delete blank lines":                    VSExecuteCommand("Edit.DeleteBlankLines"),
        "delete horizontal white space":         VSExecuteCommand("Edit.DeleteHorizontalWhiteSpace"),
        "line open above":                       VSExecuteCommand("Edit.LineOpenAbove"),
        "line open below":                       VSExecuteCommand("Edit.LineOpenBelow"),
        "increase line indent":                  VSExecuteCommand("Edit.IncreaseLineIndent"),
        "decrease line indent":                  VSExecuteCommand("Edit.DecreaseLineIndent"),
        "clear bookmarks":                       VSExecuteCommand("Edit.ClearBookmarks"),
        "toggle bookmark":                       VSExecuteCommand("Edit.ToggleBookmark"),
        "next bookmark":                         VSExecuteCommand("Edit.NextBookmark"),
        "previous bookmark":                     VSExecuteCommand("Edit.PreviousBookmark"),
        "char transpose":                        VSExecuteCommand("Edit.CharTranspose"),
        "word transpose":                        VSExecuteCommand("Edit.WordTranspose"),
        "line transpose":                        VSExecuteCommand("Edit.LineTranspose"),
        "select current word":                   VSExecuteCommand("Edit.SelectCurrentWord"),
        "selection cancel":                      VSExecuteCommand("Edit.SelectionCancel"),
        "parameter info":                        VSExecuteCommand("Edit.ParameterInfo"),
        "view white space":                      VSExecuteCommand("Edit.ViewWhiteSpace"),
        "paste moves caret":                     VSExecuteCommand("Edit.PasteMovesCaret"),
        "complete word":                         VSExecuteCommand("Edit.CompleteWord"),
        "list members":                          VSExecuteCommand("Edit.ListMembers"),
        #"line start after indentation prev":     VSExecuteCommand("Edit.LineStartAfterIndentationPrev"),
        #"line start after indentation next":     VSExecuteCommand("Edit.LineStartAfterIndentationNext"),
        "format selection":                      VSExecuteCommand("Edit.FormatSelection"),
        "format document":                       VSExecuteCommand("Edit.FormatDocument"),
        "format":                                VSExecuteCommand("Edit.FormatDocument"),
        "insert file as text":                   VSExecuteCommand("Edit.InsertFileAsText"),
        "toggle task list shortcut":             VSExecuteCommand("Edit.ToggleTaskListShortcut"),
        "quick info":                            VSExecuteCommand("Edit.QuickInfo"),
        "char left extend column":               VSExecuteCommand("Edit.CharLeftExtendColumn"),
        "char right extend column":              VSExecuteCommand("Edit.CharRightExtendColumn"),
        "line up extend column":                 VSExecuteCommand("Edit.LineUpExtendColumn"),
        "line down extend column":               VSExecuteCommand("Edit.LineDownExtendColumn"),
        "toggle word wrap":                      VSExecuteCommand("Edit.ToggleWordWrap"),
        "incremental search":                    VSExecuteCommand("Edit.IncrementalSearch"),
        "reverse incremental search":            VSExecuteCommand("Edit.ReverseIncrementalSearch"),
        "line start extend column":              VSExecuteCommand("Edit.LineStartExtendColumn"),
        "line end extend column":                VSExecuteCommand("Edit.LineEndExtendColumn"),
        "word previous extend column":           VSExecuteCommand("Edit.WordPreviousExtendColumn"),
        "word next extend column":               VSExecuteCommand("Edit.WordNextExtendColumn"),
        "hide selection":                        VSExecuteCommand("Edit.HideSelection"),
        "toggle outlining expansion":            VSExecuteCommand("Edit.ToggleOutliningExpansion"),
        "toggle all outlining":                  VSExecuteCommand("Edit.ToggleAllOutlining"),
        "stop outlining":                        VSExecuteCommand("Edit.StopOutlining"),
        "stop hiding current":                   VSExecuteCommand("Edit.StopHidingCurrent"),
        "collapse to definitions":               VSExecuteCommand("Edit.CollapsetoDefinitions"),
        "double click":                          VSExecuteCommand("Edit.DoubleClick"),
        "comment selection":                     VSExecuteCommand("Edit.CommentSelection"),
        "comment":                               VSExecuteCommand("Edit.CommentSelection"),
        "uncomment selection":                   VSExecuteCommand("Edit.UncommentSelection"),
        "uncomment":                             VSExecuteCommand("Edit.UncommentSelection"),
        #"select to last go back":                VSExecuteCommand("Edit.SelectToLastGoBack"),
        #"hide advanced completion members":      VSExecuteCommand("Edit.HideAdvancedCompletionMembers"),
        "start automatic outlining":             VSExecuteCommand("Edit.StartAutomaticOutlining"),
        #"increase filter level":                 VSExecuteCommand("Edit.IncreaseFilterLevel"),
        #"decrease filter level":                 VSExecuteCommand("Edit.DecreaseFilterLevel"),
        #"show smart tag":                        VSExecuteCommand("View.ShowSmartTag"),
        #"copy parameter tip":                    VSExecuteCommand("Edit.CopyParameterTip"),
        #"paste parameter tip":                   VSExecuteCommand("Edit.PasteParameterTip"),
        "next bookmark in document":             VSExecuteCommand("Edit.NextBookmarkInDocument"),
        "previous bookmark in document":         VSExecuteCommand("Edit.PreviousBookmarkInDocument"),
        "invoke snippet from shortcut":          VSExecuteCommand("Edit.InvokeSnippetFromShortcut"),
        "clear all bookmarks in document":       VSExecuteCommand("Edit.ClearAllBookmarksInDocument"),
        #"convert tabs to spaces":                VSExecuteCommand("Edit.ConvertTabsToSpaces"),
        #"convert spaces to tabs":                VSExecuteCommand("Edit.ConvertSpacesToTabs"),
        "stop":                                  VSExecuteCommand("View.Stop"),
        #"reverse cancel":                        VSExecuteCommand("Edit.ReverseCancel"),
        #"save copy of selected items as":        VSExecuteCommand("File.SaveCopyofSelectedItemsAs"),
        "increase indent":                       VSExecuteCommand("Format.IncreaseIndent"),
        "decrease indent":                       VSExecuteCommand("Format.DecreaseIndent"),
        "remove tag handler":                    VSExecuteCommand("Edit.RemoveTagHandler"),
        "edit tag handler":                      VSExecuteCommand("Edit.EditTagHandler"),
        "add tag handler":                       VSExecuteCommand("Edit.AddTagHandler"),
        "details":                               VSExecuteCommand("View.Details"),
        "insert bookmark":                       VSExecuteCommand("Format.InsertBookmark"),
        #"switchto quick find":                   VSExecuteCommand("Edit.SwitchtoQuickFind"),
        #"switchto findin files":                 VSExecuteCommand("Edit.SwitchtoFindinFiles"),
        #"switchto find symbol":                  VSExecuteCommand("SwitchtoFindSymbol"),
        #"switchto quick replace":                VSExecuteCommand("Edit.SwitchtoQuickReplace"),
        #"switchto replacein files":              VSExecuteCommand("Edit.SwitchtoReplaceinFiles"),
        #"superscript":                           VSExecuteCommand("Format.Superscript"),
        #"subscript":                             VSExecuteCommand("Format.Subscript"),
        #"auto close tag override":               VSExecuteCommand("View.AutoCloseTagOverride"),
        "validate document":                     VSExecuteCommand("Edit.ValidateDocument"),
        "edit master":                           VSExecuteCommand("View.EditMaster"),
        "insert snippet":                        VSExecuteCommand("Edit.InsertSnippet"),
        "formatting and validation":             VSExecuteCommand("OtherContextMenus.HTMLContext.FormattingandValidation"),
        "collapse tag":                          VSExecuteCommand("Edit.CollapseTag"),
        "select tag":                            VSExecuteCommand("Edit.SelectTag"),
        "select tag content":                    VSExecuteCommand("Edit.SelectTagContent"),
        "stop outlining tag":                    VSExecuteCommand("Edit.StopOutliningTag"),
        "generate local resource":               VSExecuteCommand("Tools.GenerateLocalResource"),
        "static":                                VSExecuteCommand("Layout.Static"),
        "edit image":                            VSExecuteCommand("OtherContextMenus.Context.EditImage"),
        "compile":                               VSExecuteCommand("Build.Compile"),
        "link":                                  VSExecuteCommand("Build.Link"),
        "startnewinstance":                      VSExecuteCommand("ClassViewContextMenus.ClassViewProject.Debug.Startnewinstance"),
        "step intonewinstance":                  VSExecuteCommand("ClassViewContextMenus.ClassViewProject.Debug.StepIntonewinstance"),
        "update managed resources":              VSExecuteCommand("Project.UpdateManagedResources"),
        "add resource":                          VSExecuteCommand("Project.AddResource"),
        "tool build order":                      VSExecuteCommand("Project.ToolBuildOrder"),
        "build customizations":                  VSExecuteCommand("Project.BuildCustomizations"),
        "instrument":                            VSExecuteCommand("Build.Instrument"),
        "optimize":                              VSExecuteCommand("Build.Optimize"),
        "run instrumented optimized application":VSExecuteCommand("Build.RunInstrumentedOptimizedApplication"),
        "new project from existing code":        VSExecuteCommand("File.NewProjectFromExistingCode"),
        "update v c plus plus projects":         VSExecuteCommand("Project.UpdateVC++projects"),
        "update solution":                       VSExecuteCommand("Project.UpdateSolution"),
        "add html page":                         VSExecuteCommand("Project.AddHTMLPage"),
        "add module":                            VSExecuteCommand("Project.AddModule"),
        "add windows form":                      VSExecuteCommand("Project.AddWindowsForm"),
        "add web form":                          VSExecuteCommand("Project.AddWebForm"),
        "add master page":                       VSExecuteCommand("Project.AddMasterPage"),
        "add user control":                      VSExecuteCommand("Project.AddUserControl"),
        "add content page":                      VSExecuteCommand("Project.AddContentPage"),
        "add web user control":                  VSExecuteCommand("Project.AddWebUserControl"),
        "add component":                         VSExecuteCommand("Project.AddComponent"),
        "add web service":                       VSExecuteCommand("Project.AddWebService"),
        "add style sheet":                       VSExecuteCommand("Project.AddStyleSheet"),
        "refresh folder":                        VSExecuteCommand("ProjectandSolutionContextMenus.CrossProjectMultiItem.RefreshFolder"),
        "view markup":                           VSExecuteCommand("View.ViewMarkup"),
        "next method":                           VSExecuteCommand("Edit.NextMethod"),
        "previous method":                       VSExecuteCommand("Edit.PreviousMethod"),
        "create snippet":                        VSExecuteCommand("EditorContextMenus.CodeWindow.CreateSnippet"),
        "create replacement":                    VSExecuteCommand("EditorContextMenus.CodeWindow.CreateReplacement"),
        "insert comment":                        VSExecuteCommand("EditorContextMenus.CodeWindow.InsertComment"),
        "view component designer":               VSExecuteCommand("View.ViewComponentDesigner"),
        "go to type definition":                 VSExecuteCommand("EditorContextMenus.CodeWindow.GoToTypeDefinition"),
        "show snippet highlighting":             VSExecuteCommand("Edit.ShowSnippetHighlighting"),
        "hide snippet highlighting":             VSExecuteCommand("Edit.HideSnippetHighlighting"),
        "enable bookmark":                       VSExecuteCommand("Edit.EnableBookmark"),
        "delete bookmark":                       VSExecuteCommand("OtherContextMenus.BookmarkWindow.DeleteBookmark"),
        "enable all bookmarks":                  VSExecuteCommand("Edit.EnableAllBookmarks"),
        "next bookmark in folder":               VSExecuteCommand("Edit.NextBookmarkInFolder"),
        "previous bookmark in folder":           VSExecuteCommand("Edit.PreviousBookmarkInFolder"),
        "show all files":                        VSExecuteCommand("Project.ShowAllFiles"),
        "add remove columns":                    VSExecuteCommand("View.AddRemoveColumns"),
        "sort":                                  VSExecuteCommand("View.Sort"),
        "set as start page":                     VSExecuteCommand("Project.SetAsStartPage"),
        "recalculate links":                     VSExecuteCommand("Project.RecalculateLinks"),
        "web permissions":                       VSExecuteCommand("Project.WebPermissions"),
        "synchronize folder":                    VSExecuteCommand("Project.SynchronizeFolder"),
        "synchronize all folders":               VSExecuteCommand("Project.SynchronizeAllFolders"),
        "copy project":                          VSExecuteCommand("Project.CopyProject"),
        "include in project":                    VSExecuteCommand("Project.IncludeInProject"),
        "exclude from project":                  VSExecuteCommand("Project.ExcludeFromProject"),
        "broken links report":                   VSExecuteCommand("View.BrokenLinksReport"),
        "add project outputs":                   VSExecuteCommand("Project.AddProjectOutputs"),
        "add reference":                         VSExecuteCommand("Project.AddReference"),
        "add web reference":                     VSExecuteCommand("Project.AddWebReference"),
        "update web reference":                  VSExecuteCommand("Project.UpdateWebReference"),
        "run custom tool":                       VSExecuteCommand("Project.RunCustomTool"),
        "view in object browser":                VSExecuteCommand("ClassViewContextMenus.ClassViewProjectReference.ViewinObjectBrowser"),
        "copy web site":                         VSExecuteCommand("Project.CopyWebSite"),
        "start options":                         VSExecuteCommand("Project.StartOptions"),
        "detach":                                VSExecuteCommand("ProjectandSolutionContextMenus.CrossProjectMultiItem.Detach"),
        "add service reference":                 VSExecuteCommand("Project.AddServiceReference"),
        #"update service reference":              VSExecuteCommand("Project.UpdateServiceReference"),
        #"configure service reference":           VSExecuteCommand("Project.ConfigureServiceReference"),
        #"move here":                             VSExecuteCommand("OtherContextMenus.DragandDrop.MoveHere"),
        #"copy here":                             VSExecuteCommand("OtherContextMenus.DragandDrop.CopyHere"),
        #"test dialog":                           VSExecuteCommand("Format.TestDialog"),
        #"space across":                          VSExecuteCommand("Format.SpaceAcross"),
        #"space down":                            VSExecuteCommand("Format.SpaceDown"),
        #"toggle guides":                         VSExecuteCommand("Format.ToggleGuides"),
        #"sizeto content":                        VSExecuteCommand("Format.SizetoContent"),
        #"center vertical":                       VSExecuteCommand("Format.CenterVertical"),
        #"center horizontal":                     VSExecuteCommand("Format.CenterHorizontal"),
        "flip":                                  VSExecuteCommand("Format.Flip"),
        "button right":                          VSExecuteCommand("Format.ButtonRight"),
        "button bottom":                         VSExecuteCommand("Format.ButtonBottom"),
        "stretch":                               VSExecuteCommand("Format.Stretch"),
        "fixed width":                           VSExecuteCommand("Format.FixedWidth"),
        "guide settings":                        VSExecuteCommand("Format.GuideSettings"),
        #"resource includes":                     VSExecuteCommand("Edit.ResourceIncludes"),
        #"resource symbols":                      VSExecuteCommand("Edit.ResourceSymbols"),
        #"open binary data":                      VSExecuteCommand("OtherContextMenus.ResourceView.OpenBinaryData"),
        #"insert copy":                           VSExecuteCommand("OtherContextMenus.ResourceView.InsertCopy"),
        "insert":                                VSExecuteCommand("OtherContextMenus.ResourceView.Insert"),
        "export":                                VSExecuteCommand("OtherContextMenus.ResourceView.Export"),
        #"move control left":                     VSExecuteCommand("Edit.MoveControlLeft"),
        #"move control down":                     VSExecuteCommand("Edit.MoveControlDown"),
        #"move control right":                    VSExecuteCommand("Edit.MoveControlRight"),
        #"move control up":                       VSExecuteCommand("Edit.MoveControlUp"),
        #"size control down":                     VSExecuteCommand("Edit.SizeControlDown"),
        #"size control up":                       VSExecuteCommand("Edit.SizeControlUp"),
        #"size control left":                     VSExecuteCommand("Edit.SizeControlLeft"),
        #"size control right":                    VSExecuteCommand("Edit.SizeControlRight"),
        #"new accelerator":                       VSExecuteCommand("Edit.NewAccelerator"),
        #"next key typed":                        VSExecuteCommand("Edit.NextKeyTyped"),
        #"insert active x control":               VSExecuteCommand("OtherContextMenus.ResourceDialogEditors.InsertActiveXControl"),
        #"invert colors":                         VSExecuteCommand("Image.InvertColors"),
        #"flip horizontal":                       VSExecuteCommand("Image.FlipHorizontal"),
        #"flip vertical":                         VSExecuteCommand("Image.FlipVertical"),
        #"rotate90 degrees":                      VSExecuteCommand("Image.Rotate90Degrees"),
        #"show colors window":                    VSExecuteCommand("Image.ShowColorsWindow"),
        #"new string":                            VSExecuteCommand("Edit.NewString"),
        #"new version info block":                VSExecuteCommand("Edit.NewVersionInfoBlock"),
        #"delete version info block":             VSExecuteCommand("Edit.DeleteVersionInfoBlock"),
        #"adjust colors":                         VSExecuteCommand("Image.AdjustColors"),
        #"load palette":                          VSExecuteCommand("Image.LoadPalette"),
        #"save palette":                          VSExecuteCommand("Image.SavePalette"),
        #"check mnemonics":                       VSExecuteCommand("Format.CheckMnemonics"),
        #"draw opaque":                           VSExecuteCommand("Image.DrawOpaque"),
        #"toolbar editor":                        VSExecuteCommand("Image.ToolbarEditor"),
        #"grid settings":                         VSExecuteCommand("Image.GridSettings"),
        #"new image type":                        VSExecuteCommand("Image.NewImageType"),
        #"delete image type":                     VSExecuteCommand("Image.DeleteImageType"),
        #"view as popup":                         VSExecuteCommand("Edit.ViewAsPopup"),
        #"show grid":                             VSExecuteCommand("Image.ShowGrid"),
        #"show tile grid":                        VSExecuteCommand("Image.ShowTileGrid"),
        #"magnify":                               VSExecuteCommand("Image.Magnify"),
        #"open external editor":                  VSExecuteCommand("Image.OpenExternalEditor"),
        #"rectangle selection tool":              VSExecuteCommand("Image.RectangleSelectionTool"),
        #"irregular selection tool":              VSExecuteCommand("Image.IrregularSelectionTool"),
        #"color selection tool":                  VSExecuteCommand("Image.ColorSelectionTool"),
        #"erase tool":                            VSExecuteCommand("Image.EraseTool"),
        #"fill tool":                             VSExecuteCommand("Image.FillTool"),
        #"pencil tool":                           VSExecuteCommand("Image.PencilTool"),
        #"brush tool":                            VSExecuteCommand("Image.BrushTool"),
        #"airbrush tool":                         VSExecuteCommand("Image.AirbrushTool"),
        #"line tool":                             VSExecuteCommand("Image.LineTool"),
        #"curve tool":                            VSExecuteCommand("Image.CurveTool"),
        #"text tool":                             VSExecuteCommand("Image.TextTool"),
        #"rectangle tool":                        VSExecuteCommand("Image.RectangleTool"),
        #"outlined rectangle tool":               VSExecuteCommand("Image.OutlinedRectangleTool"),
        #"filled rectangle tool":                 VSExecuteCommand("Image.FilledRectangleTool"),
        #"rounded rectangle tool":                VSExecuteCommand("Image.RoundedRectangleTool"),
        #"outlined rounded rectangle tool":       VSExecuteCommand("Image.OutlinedRoundedRectangleTool"),
        #"filled rounded rectangle tool":         VSExecuteCommand("Image.FilledRoundedRectangleTool"),
        #"ellipse tool":                          VSExecuteCommand("Image.EllipseTool"),
        #"outlined ellipse tool":                 VSExecuteCommand("Image.OutlinedEllipseTool"),
        #"filled ellipse tool":                   VSExecuteCommand("Image.FilledEllipseTool"),
        #"magnification tool":                    VSExecuteCommand("Image.MagnificationTool"),
        #"larger brush":                          VSExecuteCommand("Image.LargerBrush"),
        #"small brush":                           VSExecuteCommand("Image.SmallBrush"),
        #"smaller brush":                         VSExecuteCommand("Image.SmallerBrush"),
        #"zoom in":                               VSExecuteCommand("Image.ZoomIn"),
        #"zoom out":                              VSExecuteCommand("Image.ZoomOut"),
        #"previous color":                        VSExecuteCommand("Image.PreviousColor"),
        #"previous right color":                  VSExecuteCommand("Image.PreviousRightColor"),
        #"next color":                            VSExecuteCommand("Image.NextColor"),
        #"next right color":                      VSExecuteCommand("Image.NextRightColor"),
        #"n e t configuration":                   VSExecuteCommand("Project.ASP.NETConfiguration"),
        "nest related files":                    VSExecuteCommand("Project.NestRelatedFiles"),
        #"move control up grid":                  VSExecuteCommand("Edit.MoveControlUpGrid"),
        #"move control down grid":                VSExecuteCommand("Edit.MoveControlDownGrid"),
        #"move control left grid":                VSExecuteCommand("Edit.MoveControlLeftGrid"),
        #"move control right grid":               VSExecuteCommand("Edit.MoveControlRightGrid"),
        #"size control right grid":               VSExecuteCommand("Edit.SizeControlRightGrid"),
        #"size control up grid":                  VSExecuteCommand("Edit.SizeControlUpGrid"),
        #"size control left grid":                VSExecuteCommand("Edit.SizeControlLeftGrid"),
        #"size control down grid":                VSExecuteCommand("Edit.SizeControlDownGrid"),
        #"select next control":                   VSExecuteCommand("Edit.SelectNextControl"),
        #"select previous control":               VSExecuteCommand("Edit.SelectPreviousControl"),
        "extract method":                        VSExecuteCommand("Refactor.ExtractMethod"),
        "encapsulate field":                     VSExecuteCommand("Refactor.EncapsulateField"),
        "extract interface":                     VSExecuteCommand("Refactor.ExtractInterface"),
        "remove parameters":                     VSExecuteCommand("Refactor.RemoveParameters"),
        "reorder parameters":                    VSExecuteCommand("Refactor.ReorderParameters"),
        "generate method":                       VSExecuteCommand("Edit.GenerateMethod"),
        #"implement interface stubs implicitly":  VSExecuteCommand("Edit.ImplementInterfaceStubsImplicitly"),
        #"implement interface stubs explicitly":  VSExecuteCommand("Edit.ImplementInterfaceStubsExplicitly"),
        #"implement abstract class stubs":        VSExecuteCommand("Edit.ImplementAbstractClassStubs"),
        "surround with":                         VSExecuteCommand("Edit.SurroundWith"),
        "toggle output window word wrap":        VSExecuteCommand("ToggleOutputWindowWordWrap"),
        "build only project":                    VSExecuteCommand("Build.BuildOnlyProject"),
        "rebuild only project":                  VSExecuteCommand("Build.RebuildOnlyProject"),
        "clean only project":                    VSExecuteCommand("Build.CleanOnlyProject"),
        "build startup projects only on run":    VSExecuteCommand("View.BuildStartupProjectsOnlyOnRun"),
        "hide folder":                           VSExecuteCommand("Project.HideFolder"),
        "unhide folders":                        VSExecuteCommand("Project.UnhideFolders"),
        "copy full path":                        VSExecuteCommand("File.CopyFullPath"),
        "import and export settings":            VSExecuteCommand("Tools.ImportandExportSettings"),
        "add new solution folder":               VSExecuteCommand("Project.AddNewSolutionFolder"),
        "track activity in solution explorer":   VSExecuteCommand("View.TrackActivityinSolutionExplorer"),
        "clear output window":                   VSExecuteCommand("Edit.ClearOutputWindow"),
        #"go to output window location":          VSExecuteCommand("Edit.GoToOutputWindowLocation"),
        #"go to output window next location":     VSExecuteCommand("Edit.GoToOutputWindowNextLocation"),
        #"go to output window prev location":     VSExecuteCommand("Edit.GoToOutputWindowPrevLocation"),
        #"clear find results1":                   VSExecuteCommand("Edit.ClearFindResults1"),
        #"go to find results1 location":          VSExecuteCommand("Edit.GoToFindResults1Location"),
        #"go to find results1 next location":     VSExecuteCommand("Edit.GoToFindResults1NextLocation"),
        #"go to find results1 prev location":     VSExecuteCommand("Edit.GoToFindResults1PrevLocation"),
        #"clear find results2":                   VSExecuteCommand("Edit.ClearFindResults2"),
        #"go to find results2 location":          VSExecuteCommand("Edit.GoToFindResults2Location"),
        #"go to find results2 next location":     VSExecuteCommand("Edit.GoToFindResults2NextLocation"),
        #"go to find results2 prev location":     VSExecuteCommand("Edit.GoToFindResults2PrevLocation"),
        #"edit project file":                     VSExecuteCommand("OtherContextMenus.StubProject.EditProjectFile"),
        "open folder in file explorer":          VSExecuteCommand("ProjectandSolutionContextMenus.Project.OpenFolderinFileExplorer"),
        #"next tool window":                      VSExecuteCommand("Window.NextToolWindow"),
        #"previous tool window":                  VSExecuteCommand("Window.PreviousToolWindow"),
        "open containing folder":                VSExecuteCommand("File.OpenContainingFolder"),
        #"show ez m d i file list":               VSExecuteCommand("Window.ShowEzMDIFileList"),
        #"next tool window nav":                  VSExecuteCommand("Window.NextToolWindowNav"),
        #"previous tool window nav":              VSExecuteCommand("Window.PreviousToolWindowNav"),
        "run code analysison only project":      VSExecuteCommand("Build.RunCodeAnalysisonOnlyProject"),
        "run code analysison selection":         VSExecuteCommand("Build.RunCodeAnalysisonSelection"),
        "run code analysis":                     VSExecuteCommand("ClassViewContextMenus.ClassViewProject.RunCodeAnalysis"),
        "close all but this":                    VSExecuteCommand("File.CloseAllButThis"),
        #"class view show inherited members":     VSExecuteCommand("View.ClassViewShowInheritedMembers"),
        #"class view show base types":            VSExecuteCommand("View.ClassViewShowBaseTypes"),
        #"class view show derived types":         VSExecuteCommand("View.ClassViewShowDerivedTypes"),
        #"class view show private members":       VSExecuteCommand("View.ClassViewShowPrivateMembers"),
        #"class view show protected members":     VSExecuteCommand("View.ClassViewShowProtectedMembers"),
        #"class view show public members":        VSExecuteCommand("View.ClassViewShowPublicMembers"),
        #"class view show project references":    VSExecuteCommand("View.ClassViewShowProjectReferences"),
        #"class view group members by type":      VSExecuteCommand("View.ClassViewGroupMembersByType"),
        #"class view clear search":               VSExecuteCommand("View.ClassViewClearSearch"),
        #"class view filter to type":             VSExecuteCommand("View.ClassViewFilterToType"),
        #"class view sort by best match":         VSExecuteCommand("View.ClassViewSortByBestMatch"),
        #"class view show other members":         VSExecuteCommand("View.ClassViewShowOtherMembers"),
        #"class view search":                     VSExecuteCommand("View.ClassViewSearch"),
        #"class view go to search combo":         VSExecuteCommand("View.ClassViewGoToSearchCombo"),
        #"object browser show inherited members":     VSExecuteCommand("View.ObjectBrowserShowInheritedMembers"),
        #"object browser show base types":        VSExecuteCommand("View.ObjectBrowserShowBaseTypes"),
        #"object browser show derived types":     VSExecuteCommand("View.ObjectBrowserShowDerivedTypes"),
        #"object browser show private members":   VSExecuteCommand("View.ObjectBrowserShowPrivateMembers"),
        #"object browser show protected members":     VSExecuteCommand("View.ObjectBrowserShowProtectedMembers"),
        #"object browser show public members":    VSExecuteCommand("View.ObjectBrowserShowPublicMembers"),
        #"object browser view objectsby namespace":     VSExecuteCommand("View.ObjectBrowserViewObjectsbyNamespace"),
        #"object browser view objectsby physical container":     VSExecuteCommand("View.ObjectBrowserViewObjectsbyPhysicalContainer"),
        #"object browser group members by type":  VSExecuteCommand("View.ObjectBrowserGroupMembersByType"),
        #"object browser clear search":           VSExecuteCommand("View.ObjectBrowserClearSearch"),
        #"object browser filter to type":         VSExecuteCommand("View.ObjectBrowserFilterToType"),
        #"object browser sort by best match":     VSExecuteCommand("View.ObjectBrowserSortByBestMatch"),
        #"object browser show other members":     VSExecuteCommand("View.ObjectBrowserShowOtherMembers"),
        #"object browser search":                 VSExecuteCommand("View.ObjectBrowserSearch"),
        #"object browser go to search combo":     VSExecuteCommand("View.ObjectBrowserGoToSearchCombo"),
        #"object browser show extension members":     VSExecuteCommand("View.ObjectBrowserShowExtensionMembers"),
        "backward":                              VSExecuteCommand("View.Backward"),
        "forward":                               VSExecuteCommand("View.Forward"),
        #"correction1":                           VSExecuteCommand("OtherContextMenus.ErrorCorrection.Correction1"),
        #"correction2":                           VSExecuteCommand("OtherContextMenus.ErrorCorrection.Correction2"),
        #"correction3":                           VSExecuteCommand("OtherContextMenus.ErrorCorrection.Correction3"),
        #"correction4":                           VSExecuteCommand("OtherContextMenus.ErrorCorrection.Correction4"),
        #"correction5":                           VSExecuteCommand("OtherContextMenus.ErrorCorrection.Correction5"),
        #"correction6":                           VSExecuteCommand("OtherContextMenus.ErrorCorrection.Correction6"),
        #"correction7":                           VSExecuteCommand("OtherContextMenus.ErrorCorrection.Correction7"),
        #"correction8":                           VSExecuteCommand("OtherContextMenus.ErrorCorrection.Correction8"),
        #"correction9":                           VSExecuteCommand("OtherContextMenus.ErrorCorrection.Correction9"),
        #"correction10":                          VSExecuteCommand("OtherContextMenus.ErrorCorrection.Correction10"),
        #"object browser add reference":          VSExecuteCommand("View.ObjectBrowserAddReference"),
        "code definition window":                VSExecuteCommand("View.CodeDefinitionWindow"),
        #"go to previous":                        VSExecuteCommand("EditorContextMenus.CodeWindow.GoToPrevious"),
        #"go to next":                            VSExecuteCommand("EditorContextMenus.CodeWindow.GoToNext"),
        #"edit definition":                       VSExecuteCommand("View.EditDefinition"),
        #"choose encoding":                       VSExecuteCommand("View.ChooseEncoding"),
        "view class diagram":                    VSExecuteCommand("ProjectandSolutionContextMenus.Project.ViewClassDiagram"),
        "preview data":                          VSExecuteCommand("OtherContextMenus.DataSourceContext.PreviewData"),
        #"editkey":                               VSExecuteCommand("OtherContextMenus.ColumnContext.Editkey"),
        #"deletekey":                             VSExecuteCommand("OtherContextMenus.ColumnContext.Deletekey"),
        #"edit relation":                         VSExecuteCommand("OtherContextMenus.RelationContext.EditRelation"),
        "close project":                         VSExecuteCommand("File.CloseProject"),
        #"table adapter":                         VSExecuteCommand("OtherContextMenus.DataSourceContext.Add.TableAdapter"),
        #"query":                                 VSExecuteCommand("OtherContextMenus.DataSourceContext.Add.Query"),
        #"add query":                             VSExecuteCommand("OtherContextMenus.FunctionContext.AddQuery"),
        "publish selection":                     VSExecuteCommand("Build.PublishSelection"),
        "publish":                               VSExecuteCommand("ClassViewContextMenus.ClassViewProject.Publish"),
        #"call browser show callers graph":       VSExecuteCommand("ClassViewContextMenus.ClassViewMember.CallBrowser.CallBrowserShowCallersGraph"),
        #"call browser show call graph":          VSExecuteCommand("ClassViewContextMenus.ClassViewMember.CallBrowser.CallBrowserShowCallGraph"),
        #"call browser show callers graph in new window":     VSExecuteCommand("ClassViewContextMenus.ClassViewMember.CallBrowser.CallBrowserShowCallersGraphInNewWindow"),
        #"call browser show call graph in new window":     VSExecuteCommand("ClassViewContextMenus.ClassViewMember.CallBrowser.CallBrowserShowCallGraphInNewWindow"),
        #"undo last global action":               VSExecuteCommand("Edit.UndoLastGlobalAction"),
        #"redo last global action":               VSExecuteCommand("Edit.RedoLastGlobalAction"),
        #"call browser callers graph":            VSExecuteCommand("View.CallBrowserCallersGraph"),
        #"call browser call graph":               VSExecuteCommand("View.CallBrowserCallGraph"),
        #"call browser callers graph new window":     VSExecuteCommand("View.CallBrowserCallersGraphNewWindow"),
        #"call browser call graph new window":    VSExecuteCommand("View.CallBrowserCallGraphNewWindow"),
        #"create user task":                      VSExecuteCommand("CreateUserTask"),
        "errors":                                VSExecuteCommand("Errors"),
        "warnings":                              VSExecuteCommand("Warnings"),
        "messages":                              VSExecuteCommand("Messages"),
        "register product":                      VSExecuteCommand("Help.RegisterProduct"),
        "start page":                            VSExecuteCommand("View.StartPage"),
        #"line first column":                     VSExecuteCommand("Edit.LineFirstColumn"),
        #"line first column extend":              VSExecuteCommand("Edit.LineFirstColumnExtend"),
        "server explorer":                       VSExecuteCommand("View.ServerExplorer"),
        "view call hierarchy":                   VSExecuteCommand("EditorContextMenus.CodeWindow.ViewCallHierarchy"),
        "toggle completion mode":                VSExecuteCommand("Edit.ToggleCompletionMode"),
        #"next highlighted reference":            VSExecuteCommand("Edit.NextHighlightedReference"),
        #"previous highlighted reference":        VSExecuteCommand("Edit.PreviousHighlightedReference"),
        #"items":                                 VSExecuteCommand("OtherContextMenus.ResourceRibbonEditors.Items"),
        #"buttons":                               VSExecuteCommand("OtherContextMenus.ResourceRibbonEditors.Buttons"),
        #"matchanywordcharacter":                 VSExecuteCommand("OtherContextMenus.FindRegularExpressionBuilder.Matchanywordcharacter"),
        #"matchanycharacterinrangeatof":          VSExecuteCommand("OtherContextMenus.FindRegularExpressionBuilder.Matchanycharacterinrangeatof"),
        #"matchanycharacterzerooronetime":        VSExecuteCommand("OtherContextMenus.FindRegularExpressionBuilder.Matchanycharacterzerooronetime"),
        #"matchanycharacterzeroormoretimes":      VSExecuteCommand("OtherContextMenus.FindRegularExpressionBuilder.Matchanycharacterzeroormoretimes"),
        #"matchanycharacteroneormoretimes":       VSExecuteCommand("OtherContextMenus.FindRegularExpressionBuilder.Matchanycharacteroneormoretimes"),
        #"matchthreeconsecutivedecimaldigits":    VSExecuteCommand("OtherContextMenus.FindRegularExpressionBuilder.Matchthreeconsecutivedecimaldigits"),
        #"backreferencethefirstcapturedsubexpression":     VSExecuteCommand("OtherContextMenus.FindRegularExpressionBuilder.Backreferencethefirstcapturedsubexpression"),
        #"backreferencethecapturedsubexpressionnamedpet":     VSExecuteCommand("OtherContextMenus.FindRegularExpressionBuilder.Backreferencethecapturedsubexpressionnamedpet"),
        #"substitutethesubstringmatchedbycapturedgroupnumber1":     VSExecuteCommand("OtherContextMenus.ReplaceRegularExpressionBuilder.Substitutethesubstringmatchedbycapturedgroupnumber1"),
        #"substitutethesubstringmatchedbythenamedgrouppet":     VSExecuteCommand("OtherContextMenus.ReplaceRegularExpressionBuilder.Substitutethesubstringmatchedbythenamedgrouppet"),
        #"substitutealiteraldollar":              VSExecuteCommand("OtherContextMenus.ReplaceRegularExpressionBuilder.Substitutealiteraldollar"),
        #"substituteacopyofthewholematch":        VSExecuteCommand("OtherContextMenus.ReplaceRegularExpressionBuilder.Substituteacopyofthewholematch"),
        #"substitutethelastgroupthatwascaptured":     VSExecuteCommand("OtherContextMenus.ReplaceRegularExpressionBuilder.Substitutethelastgroupthatwascaptured"),
        #"maps spaceor tab":                      VSExecuteCommand("OtherContextMenus.FindRegularExpressionBuilder.MapsSpaceorTab"),
        #"maps matchanynumericcharacter":         VSExecuteCommand("OtherContextMenus.FindRegularExpressionBuilder.MapsMatchanynumericcharacter"),
        #"maps c c plus plus identifier":                  VSExecuteCommand("OtherContextMenus.FindRegularExpressionBuilder.MapsCC++identifier"),
        #"maps quotedstring":                     VSExecuteCommand("OtherContextMenus.FindRegularExpressionBuilder.MapsQuotedstring"),
        #"maps matchahexadecimalnumber":          VSExecuteCommand("OtherContextMenus.FindRegularExpressionBuilder.MapsMatchahexadecimalnumber"),
        #"maps matchintegersanddecimals":         VSExecuteCommand("OtherContextMenus.FindRegularExpressionBuilder.MapsMatchintegersanddecimals"),
        #"float all":                             VSExecuteCommand("Window.FloatAll"),
        #"move allto next tab group":             VSExecuteCommand("OtherContextMenus.EasyMDIToolWindow.MoveAlltoNextTabGroup"),
        #"move allto previous tab group":         VSExecuteCommand("OtherContextMenus.EasyMDIToolWindow.MoveAlltoPreviousTabGroup"),
        #"add tabto selection":                   VSExecuteCommand("Window.AddTabtoSelection"),
        #"next taband addto selection":           VSExecuteCommand("Window.NextTabandAddtoSelection"),
        #"previous taband addto selection":       VSExecuteCommand("Window.PreviousTabandAddtoSelection"),
        #"pin tab":                               VSExecuteCommand("Window.PinTab"),
        #"all windows":                           VSExecuteCommand("View.AllWindows"),
        #"keep tab open":                         VSExecuteCommand("Window.KeepTabOpen"),
        #"move to main document group":           VSExecuteCommand("Window.MoveToMainDocumentGroup"),
        "activate window search":                VSExecuteCommand("Window.ActivateWindowSearch"),
        "activate quick launch":                 VSExecuteCommand("Window.ActivateQuickLaunch"),
        "activate quick launch previous category":     VSExecuteCommand("Window.ActivateQuickLaunchPreviousCategory"),
        "activate solution explorer search":     VSExecuteCommand("Window.ActivateSolutionExplorerSearch"),
        "close all but pinned":                  VSExecuteCommand("OtherContextMenus.EasyMDIToolWindow.CloseAllButPinned"),
        "resolve errors":                        VSExecuteCommand("ProjectandSolutionContextMenus.Solution.ResolveErrors"),
        "new solution explorer view":            VSExecuteCommand("ProjectandSolutionContextMenus.Project.NewSolutionExplorerView"),
        "new project from template":             VSExecuteCommand("File.NewProjectFromTemplate"),
        "scope to this":                         VSExecuteCommand("ProjectandSolutionContextMenus.Project.ScopetoThis"),
        "paste as link":                         VSExecuteCommand("Edit.PasteAsLink"),
        "show dock menu":                        VSExecuteCommand("Window.ShowDockMenu"),
        "force g c":                             VSExecuteCommand("Tools.ForceGC"),
        "troubleshooting":                       VSExecuteCommand("Help.Troubleshooting"),
        "expand all outlining":                  VSExecuteCommand("Edit.ExpandAllOutlining"),
        "collapse all outlining":                VSExecuteCommand("Edit.CollapseAllOutlining"),
        "expand current region":                 VSExecuteCommand("Edit.ExpandCurrentRegion"),
        "collapse current region":               VSExecuteCommand("Edit.CollapseCurrentRegion"),
        "extensions and updates":                VSExecuteCommand("Tools.ExtensionsandUpdates"),
        "view help":                             VSExecuteCommand("Help.ViewHelp"),
        #"msdn forums":                           VSExecuteCommand("Help.MSDNForums"),
        "report a bug":                          VSExecuteCommand("Help.ReportaBug"),
        #"order help on d v d":                   VSExecuteCommand("Help.OrderHelponDVD"),
        #"addand remove help content":            VSExecuteCommand("Help.AddandRemoveHelpContent"),
        #"launch in browser":                     VSExecuteCommand("Help.LaunchinBrowser"),
        #"launch in help viewer":                 VSExecuteCommand("Help.LaunchinHelpViewer"),
        #"print subtopics":                       VSExecuteCommand("File.PrintSubtopics"),
        #"synchronize document outline":          VSExecuteCommand("OtherContextMenus.CSSSource.SynchronizeDocumentOutline"),
        #"emacs char left":                       VSExecuteCommand("Edit.EmacsCharLeft"),
        #"emacs char right":                      VSExecuteCommand("Edit.EmacsCharRight"),
        #"emacs line up":                         VSExecuteCommand("Edit.EmacsLineUp"),
        #"emacs line down":                       VSExecuteCommand("Edit.EmacsLineDown"),
        #"emacs line end":                        VSExecuteCommand("Edit.EmacsLineEnd"),
        #"emacs line start":                      VSExecuteCommand("Edit.EmacsLineStart"),
        #"emacs document end":                    VSExecuteCommand("Edit.EmacsDocumentEnd"),
        #"emacs document start":                  VSExecuteCommand("Edit.EmacsDocumentStart"),
        #"emacs word previous":                   VSExecuteCommand("Edit.EmacsWordPrevious"),
        #"emacs word next":                       VSExecuteCommand("Edit.EmacsWordNext"),
        #"emacs go to line":                      VSExecuteCommand("Edit.EmacsGoToLine"),
        #"emacs scroll page up":                  VSExecuteCommand("Edit.EmacsScrollPageUp"),
        #"emacs scroll page down":                VSExecuteCommand("Edit.EmacsScrollPageDown"),
        #"emacs scroll line center":              VSExecuteCommand("Edit.EmacsScrollLineCenter"),
        #"emacs top of window":                   VSExecuteCommand("Edit.EmacsTopOfWindow"),
        #"emacs bottom of window":                VSExecuteCommand("Edit.EmacsBottomOfWindow"),
        #"emacs scroll line top":                 VSExecuteCommand("Edit.EmacsScrollLineTop"),
        #"emacs split vertical":                  VSExecuteCommand("Edit.EmacsSplitVertical"),
        #"emacs other window":                    VSExecuteCommand("Edit.EmacsOtherWindow"),
        #"emacs close other window":              VSExecuteCommand("Edit.EmacsCloseOtherWindow"),
        #"emacs break line":                      VSExecuteCommand("Edit.EmacsBreakLine"),
        #"emacs break line indent":               VSExecuteCommand("Edit.EmacsBreakLineIndent"),
        #"emacs line open":                       VSExecuteCommand("Edit.EmacsLineOpen"),
        #"emacs char transpose":                  VSExecuteCommand("Edit.EmacsCharTranspose"),
        #"emacs word transpose":                  VSExecuteCommand("Edit.EmacsWordTranspose"),
        #"emacs word uppercase":                  VSExecuteCommand("Edit.EmacsWordUppercase"),
        #"emacs word lowercase":                  VSExecuteCommand("Edit.EmacsWordLowercase"),
        #"emacs word capitalize":                 VSExecuteCommand("Edit.EmacsWordCapitalize"),
        #"emacs word delete to end":              VSExecuteCommand("Edit.EmacsWordDeleteToEnd"),
        #"emacs word delete to start":            VSExecuteCommand("Edit.EmacsWordDeleteToStart"),
        #"emacs delete to e o l":                 VSExecuteCommand("Edit.EmacsDeleteToEOL"),
        #"emacs paste rotate":                    VSExecuteCommand("Edit.EmacsPasteRotate"),
        #"emacs set mark":                        VSExecuteCommand("Edit.EmacsSetMark"),
        #"emacs pop mark":                        VSExecuteCommand("Edit.EmacsPopMark"),
        #"emacs swap point and mark":             VSExecuteCommand("Edit.EmacsSwapPointAndMark"),
        #"emacs delete selection":                VSExecuteCommand("Edit.EmacsDeleteSelection"),
        #"emacs file save dirty":                 VSExecuteCommand("Edit.EmacsFileSaveDirty"),
        #"emacs find replace":                    VSExecuteCommand("Edit.EmacsFindReplace"),
        #"emacs quit":                            VSExecuteCommand("Edit.EmacsQuit"),
        #"emacs universal argument":              VSExecuteCommand("Edit.EmacsUniversalArgument"),
        #"emacs extended command":                VSExecuteCommand("Edit.EmacsExtendedCommand"),
        #"emacs quoted insert":                   VSExecuteCommand("Edit.EmacsQuotedInsert"),
        #"emacs activate region":                 VSExecuteCommand("Edit.EmacsActivateRegion"),
        #"brief select column":                   VSExecuteCommand("Edit.BriefSelectColumn"),
        #"brief line indent":                     VSExecuteCommand("Edit.BriefLineIndent"),
        #"brief bookmarks":                       VSExecuteCommand("Edit.BriefBookmarks"),
        #"brief select line":                     VSExecuteCommand("Edit.BriefSelectLine"),
        #"brief select char":                     VSExecuteCommand("Edit.BriefSelectChar"),
        #"brief select char inclusive":           VSExecuteCommand("Edit.BriefSelectCharInclusive"),
        #"brief line unindent":                   VSExecuteCommand("Edit.BriefLineUnindent"),
        #"brief file print":                      VSExecuteCommand("Edit.BriefFilePrint"),
        #"brief select swap anchor":              VSExecuteCommand("Edit.BriefSelectSwapAnchor"),
        #"brief insert file":                     VSExecuteCommand("Edit.BriefInsertFile"),
        #"brief go to":                           VSExecuteCommand("Edit.BriefGoTo"),
        #"brief window left edge":                VSExecuteCommand("Edit.BriefWindowLeftEdge"),
        #"brief word right":                      VSExecuteCommand("Edit.BriefWordRight"),
        #"brief word left":                       VSExecuteCommand("Edit.BriefWordLeft"),
        #"brief window right edge":               VSExecuteCommand("Edit.BriefWindowRightEdge"),
        #"brief window scroll up":                VSExecuteCommand("Edit.BriefWindowScrollUp"),
        #"brief window scroll down":              VSExecuteCommand("Edit.BriefWindowScrollDown"),
        #"brief line delete":                     VSExecuteCommand("Edit.BriefLineDelete"),
        #"brief word delete to end":              VSExecuteCommand("Edit.BriefWordDeleteToEnd"),
        #"brief word delete to start":            VSExecuteCommand("Edit.BriefWordDeleteToStart"),
        #"brief line delete to start":            VSExecuteCommand("Edit.BriefLineDeleteToStart"),
        #"brief line delete to end":              VSExecuteCommand("Edit.BriefLineDeleteToEnd"),
        #"brief line open below":                 VSExecuteCommand("Edit.BriefLineOpenBelow"),
        #"brief quoted insert":                   VSExecuteCommand("Edit.BriefQuotedInsert"),
        #"brief file exit":                       VSExecuteCommand("Edit.BriefFileExit"),
        #"brief find toggle case sensitivity":    VSExecuteCommand("Edit.BriefFindToggleCaseSensitivity"),
        #"brief find toggle reg expr":            VSExecuteCommand("Edit.BriefFindToggleRegExpr"),
        #"brief find repeat":                     VSExecuteCommand("Edit.BriefFindRepeat"),
        #"brief find prev":                       VSExecuteCommand("Edit.BriefFindPrev"),
        #"brief find":                            VSExecuteCommand("Edit.BriefFind"),
        #"brief find replace":                    VSExecuteCommand("Edit.BriefFindReplace"),
        #"brief browse":                          VSExecuteCommand("Edit.BriefBrowse"),
        #"brief go to next error tag":            VSExecuteCommand("Edit.BriefGoToNextErrorTag"),
        #"brief set repeat count":                VSExecuteCommand("Edit.BriefSetRepeatCount"),
        #"brief window scroll to center":         VSExecuteCommand("Edit.BriefWindowScrollToCenter"),
        #"brief window switch pane":              VSExecuteCommand("Edit.BriefWindowSwitchPane"),
        #"brief window split":                    VSExecuteCommand("Edit.BriefWindowSplit"),
        #"brief window scroll to bottom":         VSExecuteCommand("Edit.BriefWindowScrollToBottom"),
        #"brief window scroll to top":            VSExecuteCommand("Edit.BriefWindowScrollToTop"),
        #"brief window maximize":                 VSExecuteCommand("Edit.BriefWindowMaximize"),
        #"brief break line":                      VSExecuteCommand("Edit.BriefBreakLine"),
        #"brief bookmark drop0":                  VSExecuteCommand("Edit.BriefBookmarkDrop0"),
        #"brief bookmark drop1":                  VSExecuteCommand("Edit.BriefBookmarkDrop1"),
        #"brief bookmark drop2":                  VSExecuteCommand("Edit.BriefBookmarkDrop2"),
        #"brief bookmark drop3":                  VSExecuteCommand("Edit.BriefBookmarkDrop3"),
        #"brief bookmark drop4":                  VSExecuteCommand("Edit.BriefBookmarkDrop4"),
        #"brief bookmark drop5":                  VSExecuteCommand("Edit.BriefBookmarkDrop5"),
        #"brief bookmark drop6":                  VSExecuteCommand("Edit.BriefBookmarkDrop6"),
        #"brief bookmark drop7":                  VSExecuteCommand("Edit.BriefBookmarkDrop7"),
        #"brief bookmark drop8":                  VSExecuteCommand("Edit.BriefBookmarkDrop8"),
        #"brief bookmark drop9":                  VSExecuteCommand("Edit.BriefBookmarkDrop9"),
        "web browser back":                      VSExecuteCommand("WebBrowserBack"),
        "web browser forward":                   VSExecuteCommand("WebBrowserForward"),
        "web browser stop":                      VSExecuteCommand("View.WebBrowserStop"),
        "web browser refresh":                   VSExecuteCommand("View.WebBrowserRefresh"),
        #"online search":                         VSExecuteCommand("View.OnlineSearch"),
        "home":                                  VSExecuteCommand("View.Home"),
        #"smallest":                              VSExecuteCommand("OtherContextMenus.DefaultContext.TextSize.Smallest"),
        #"smaller":                               VSExecuteCommand("OtherContextMenus.DefaultContext.TextSize.Smaller"),
        #"medium":                                VSExecuteCommand("OtherContextMenus.DefaultContext.TextSize.Medium"),
        #"larger":                                VSExecuteCommand("OtherContextMenus.DefaultContext.TextSize.Larger"),
        #"largest":                               VSExecuteCommand("OtherContextMenus.DefaultContext.TextSize.Largest"),
        #"text size":                             VSExecuteCommand("View.TextSize"),
        #"open link in new window":               VSExecuteCommand("OtherContextMenus.ImageContext.OpenLinkinNewWindow"),
        #"arabic a s m o708":                     VSExecuteCommand("OtherContextMenus.DefaultContext.Encoding.Moreencoding.ArabicASMO708"),
        #"arabic d o s":                          VSExecuteCommand("OtherContextMenus.DefaultContext.Encoding.Moreencoding.ArabicDOS"),
        #"arabic i s o":                          VSExecuteCommand("OtherContextMenus.DefaultContext.Encoding.Moreencoding.ArabicISO"),
        #"arabic windows":                        VSExecuteCommand("OtherContextMenus.DefaultContext.Encoding.Moreencoding.ArabicWindows"),
        #"baltic i s o":                          VSExecuteCommand("OtherContextMenus.DefaultContext.Encoding.Moreencoding.BalticISO"),
        #"baltic windows":                        VSExecuteCommand("OtherContextMenus.DefaultContext.Encoding.Moreencoding.BalticWindows"),
        #"central european d o s":                VSExecuteCommand("OtherContextMenus.DefaultContext.Encoding.Moreencoding.CentralEuropeanDOS"),
        #"central european i s o":                VSExecuteCommand("OtherContextMenus.DefaultContext.Encoding.Moreencoding.CentralEuropeanISO"),
        #"central european windows":              VSExecuteCommand("OtherContextMenus.DefaultContext.Encoding.Moreencoding.CentralEuropeanWindows"),
        #"chinese simplified g b2312":            VSExecuteCommand("OtherContextMenus.DefaultContext.Encoding.Moreencoding.ChineseSimplifiedGB2312"),
        #"chinese traditional":                   VSExecuteCommand("OtherContextMenus.DefaultContext.Encoding.Moreencoding.ChineseTraditional"),
        #"cyrillic d o s":                        VSExecuteCommand("OtherContextMenus.DefaultContext.Encoding.Moreencoding.CyrillicDOS"),
        #"cyrillic i s o":                        VSExecuteCommand("OtherContextMenus.DefaultContext.Encoding.Moreencoding.CyrillicISO"),
        #"cyrillic k o i8 r":                     VSExecuteCommand("OtherContextMenus.DefaultContext.Encoding.Moreencoding.CyrillicKOI8R"),
        #"cyrillic windows":                      VSExecuteCommand("OtherContextMenus.DefaultContext.Encoding.Moreencoding.CyrillicWindows"),
        #"greek i s o":                           VSExecuteCommand("OtherContextMenus.DefaultContext.Encoding.Moreencoding.GreekISO"),
        #"greek windows":                         VSExecuteCommand("OtherContextMenus.DefaultContext.Encoding.Moreencoding.GreekWindows"),
        #"hebrew d o s":                          VSExecuteCommand("OtherContextMenus.DefaultContext.Encoding.Moreencoding.HebrewDOS"),
        #"hebrew i s o":                          VSExecuteCommand("OtherContextMenus.DefaultContext.Encoding.Moreencoding.HebrewISO"),
        #"hebrew windows":                        VSExecuteCommand("OtherContextMenus.DefaultContext.Encoding.Moreencoding.HebrewWindows"),
        #"japanese auto select":                  VSExecuteCommand("OtherContextMenus.DefaultContext.Encoding.Moreencoding.JapaneseAutoSelect"),
        #"japanese e u c":                        VSExecuteCommand("OtherContextMenus.DefaultContext.Encoding.Moreencoding.JapaneseEUC"),
        #"japanese shift j i s":                  VSExecuteCommand("OtherContextMenus.DefaultContext.Encoding.Moreencoding.JapaneseShiftJIS"),
        #"korean auto select":                    VSExecuteCommand("OtherContextMenus.DefaultContext.Encoding.Moreencoding.KoreanAutoSelect"),
        #"thai windows":                          VSExecuteCommand("OtherContextMenus.DefaultContext.Encoding.Moreencoding.ThaiWindows"),
        #"turkish windows":                       VSExecuteCommand("OtherContextMenus.DefaultContext.Encoding.Moreencoding.TurkishWindows"),
        #"turkish i s o":                         VSExecuteCommand("OtherContextMenus.DefaultContext.Encoding.Moreencoding.TurkishISO"),
        #"ukrainian k o i8 r u":                  VSExecuteCommand("OtherContextMenus.DefaultContext.Encoding.Moreencoding.UkrainianKOI8RU"),
        #"unicode u t f8":                        VSExecuteCommand("OtherContextMenus.DefaultContext.Encoding.Moreencoding.UnicodeUTF8"),
        #"vietnamese windows":                    VSExecuteCommand("OtherContextMenus.DefaultContext.Encoding.Moreencoding.VietnameseWindows"),
        #"western european windows":              VSExecuteCommand("OtherContextMenus.DefaultContext.Encoding.WesternEuropeanWindows"),
        #"western european i s o":                VSExecuteCommand("OtherContextMenus.DefaultContext.Encoding.Moreencoding.WesternEuropeanISO"),
        #"user defined":                          VSExecuteCommand("OtherContextMenus.DefaultContext.Encoding.Moreencoding.UserDefined"),
        #"chinese simplified g b18030":           VSExecuteCommand("OtherContextMenus.DefaultContext.Encoding.Moreencoding.ChineseSimplifiedGB18030"),
        #"cp m r u1":                             VSExecuteCommand("OtherContextMenus.DefaultContext.Encoding.CpMRU1"),
        #"cp m r u2":                             VSExecuteCommand("OtherContextMenus.DefaultContext.Encoding.CpMRU2"),
        #"cp m r u3":                             VSExecuteCommand("OtherContextMenus.DefaultContext.Encoding.CpMRU3"),
        #"cp m r u4":                             VSExecuteCommand("OtherContextMenus.DefaultContext.Encoding.CpMRU4"),
        #"online privacy statement":              VSExecuteCommand("Help.OnlinePrivacyStatement"),
        #"open link":                             VSExecuteCommand("OtherContextMenus.ImageContext.OpenLink"),
        #"open linkin external window":           VSExecuteCommand("OtherContextMenus.ImageContext.OpenLinkinExternalWindow"),
        "view source":                           VSExecuteCommand("OtherContextMenus.DefaultContext.ViewSource"),
        "save background as":                    VSExecuteCommand("OtherContextMenus.DefaultContext.SaveBackgroundAs"),
        "copy background":                       VSExecuteCommand("OtherContextMenus.DefaultContext.CopyBackground"),
        "save target as":                        VSExecuteCommand("OtherContextMenus.ImageContext.SaveTargetAs"),
        "show picture":                          VSExecuteCommand("OtherContextMenus.ImageContext.ShowPicture"),
        "save picture as":                       VSExecuteCommand("OtherContextMenus.ImageContext.SavePictureAs"),
        "print target":                          VSExecuteCommand("OtherContextMenus.ImageContext.PrintTarget"),
        "auto select":                           VSExecuteCommand("OtherContextMenus.DefaultContext.Encoding.AutoSelect"),
        "web browser":                           VSExecuteCommand("View.WebBrowser"),
        "unflag all threads":                    VSExecuteCommand("DebuggerContextMenus.GPUThreadsWindowShortcutMenu.UnflagAllThreads"),
        "insert tracepoint":                     VSExecuteCommand("EditorContextMenus.CodeWindow.Breakpoint.InsertTracepoint"),
        "breakpoints":                           VSExecuteCommand("Debug.Breakpoints"),
        "disassembly":                           VSExecuteCommand("Debug.Disassembly"),
        "registers":                             VSExecuteCommand("Debug.Registers"),
        "modules":                               VSExecuteCommand("Debug.Modules"),
        "apply code changes":                    VSExecuteCommand("Debug.ApplyCodeChanges"),
        "stop applying code changes":            VSExecuteCommand("Debug.StopApplyingCodeChanges"),
        "go to disassembly":                     VSExecuteCommand("Debug.GoToDisassembly"),
        "step by line":                          VSExecuteCommand("Debug.StepByLine"),
        "step by statement":                     VSExecuteCommand("Debug.StepByStatement"),
        "step by instruction":                   VSExecuteCommand("Debug.StepByInstruction"),
        "save dump as":                          VSExecuteCommand("Debug.SaveDumpAs"),
        "disable all breakpoints":               VSExecuteCommand("Debug.DisableAllBreakpoints"),
        "enable all breakpoints":                VSExecuteCommand("Debug.EnableAllBreakpoints"),
        "terminate all":                         VSExecuteCommand("Debug.TerminateAll"),
        "symbol settings":                       VSExecuteCommand("DebuggerContextMenus.AutosWindow.SymbolSettings"),
        "load symbols":                          VSExecuteCommand("DebuggerContextMenus.AutosWindow.LoadSymbols"),
        "symbol load information":               VSExecuteCommand("DebuggerContextMenus.AutosWindow.SymbolLoadInformation"),
        "stop evaluation":                       VSExecuteCommand("Debug.StopEvaluation"),
        "processes":                             VSExecuteCommand("Debug.Processes"),
        "toggle flagged threads":                VSExecuteCommand("Debug.LocationToolbar.ToggleFlaggedThreads"),
        "flag":                                  VSExecuteCommand("DebuggerContextMenus.GPUThreadsWindowShortcutMenu.Flag"),
        "unflag":                                VSExecuteCommand("DebuggerContextMenus.GPUThreadsWindowShortcutMenu.Unflag"),
        "break in file":                         VSExecuteCommand("Debug.BreakInFile"),
        "breakat function":                      VSExecuteCommand("Debug.BreakatFunction"),
        "break at address":                      VSExecuteCommand("Debug.BreakAtAddress"),
        "new data breakpoint":                   VSExecuteCommand("Debug.NewDataBreakpoint"),
        "breakpoint location":                   VSExecuteCommand("EditorContextMenus.CodeWindow.Breakpoint.BreakpointLocation"),
        "breakpoint condition":                  VSExecuteCommand("EditorContextMenus.CodeWindow.Breakpoint.BreakpointCondition"),
        "breakpoint hit count":                  VSExecuteCommand("EditorContextMenus.CodeWindow.Breakpoint.BreakpointHitCount"),
        "breakpoint filter":                     VSExecuteCommand("EditorContextMenus.CodeWindow.Breakpoint.BreakpointFilter"),
        "breakpoint when hit":                   VSExecuteCommand("EditorContextMenus.CodeWindow.Breakpoint.BreakpointWhenHit"),
        "make object i d":                       VSExecuteCommand("DebuggerContextMenus.AutosWindow.MakeObjectID"),
        "copy expression":                       VSExecuteCommand("DebuggerContextMenus.DataTipWindow.CopyExpression"),
        "copy value":                            VSExecuteCommand("DebuggerContextMenus.DataTipWindow.CopyValue"),
        "delete object i d":                     VSExecuteCommand("DebuggerContextMenus.AutosWindow.DeleteObjectID"),
        "exception messages":                    VSExecuteCommand("DebuggerContextMenus.OutputWindow.ExceptionMessages"),
        "module load messages":                  VSExecuteCommand("DebuggerContextMenus.OutputWindow.ModuleLoadMessages"),
        "module unload messages":                VSExecuteCommand("DebuggerContextMenus.OutputWindow.ModuleUnloadMessages"),
        "process exit messages":                 VSExecuteCommand("DebuggerContextMenus.OutputWindow.ProcessExitMessages"),
        "thread exit messages":                  VSExecuteCommand("DebuggerContextMenus.OutputWindow.ThreadExitMessages"),
        "program output":                        VSExecuteCommand("DebuggerContextMenus.OutputWindow.ProgramOutput"),
        "step into current process":             VSExecuteCommand("Debug.StepIntoCurrentProcess"),
        "step over current process":             VSExecuteCommand("Debug.StepOverCurrentProcess"),
        "step out current process":              VSExecuteCommand("Debug.StepOutCurrentProcess"),
        "toggle current thread flagged state":   VSExecuteCommand("Debug.LocationToolbar.ToggleCurrentThreadFlaggedState"),
        "show thread ip indicators":             VSExecuteCommand("DebuggerContextMenus.GPUThreadsWindowShortcutMenu.Debug.LocationToolbar.ShowThreadIpIndicators"),
        "step filtering messages":               VSExecuteCommand("DebuggerContextMenus.OutputWindow.StepFilteringMessages"),
        "stepoverpropertiesandoperators":        VSExecuteCommand("Debug.Stepoverpropertiesandoperators"),
        "step into specific":                    VSExecuteCommand("Debug.StepIntoSpecific"),
        "breakpoint editlabels":                 VSExecuteCommand("EditorContextMenus.CodeWindow.Breakpoint.BreakpointEditlabels"),
        "breakpoint export":                     VSExecuteCommand("EditorContextMenus.CodeWindow.Breakpoint.BreakpointExport"),
        #"options and settings":                  VSExecuteCommand("Debug.OptionsandSettings"),
        #"run flagged threads to cursor":         VSExecuteCommand("Debug.RunFlaggedThreadsToCursor"),
        #"toggle show current process only":      VSExecuteCommand("Debug.LocationToolbar.ToggleShowCurrentProcessOnly"),
        #"run current tile to cursor":            VSExecuteCommand("Debug.RunCurrentTileToCursor"),
        #"add parallel watch":                    VSExecuteCommand("Debug.AddParallelWatch"),
        #"debug installed app package":           VSExecuteCommand("Debug.DebugInstalledAppPackage"),
        "go to source code":                     VSExecuteCommand("DebuggerContextMenus.BreakpointsWindow.GoToSourceCode"),
        #"exportselected":                        VSExecuteCommand("DebuggerContextMenus.BreakpointsWindow.Exportselected"),
        #"name":                                  VSExecuteCommand("DebuggerContextMenus.BreakpointsWindow.SortBy.Name"),
        #"condition":                             VSExecuteCommand("DebuggerContextMenus.BreakpointsWindow.SortBy.Condition"),
        #"hit count":                             VSExecuteCommand("DebuggerContextMenus.BreakpointsWindow.SortBy.HitCount"),
        #"language":                              VSExecuteCommand("DebuggerContextMenus.BreakpointsWindow.SortBy.Language"),
        #"function":                              VSExecuteCommand("DebuggerContextMenus.BreakpointsWindow.SortBy.Function"),
        #"file":                                  VSExecuteCommand("DebuggerContextMenus.BreakpointsWindow.SortBy.File"),
        #"address":                               VSExecuteCommand("DebuggerContextMenus.BreakpointsWindow.SortBy.Address"),
        #"data":                                  VSExecuteCommand("DebuggerContextMenus.BreakpointsWindow.SortBy.Data"),
        #"process":                               VSExecuteCommand("DebuggerContextMenus.BreakpointsWindow.SortBy.Process"),
        #"filter":                                VSExecuteCommand("DebuggerContextMenus.BreakpointsWindow.SortBy.Filter"),
        #"when hit":                              VSExecuteCommand("DebuggerContextMenus.BreakpointsWindow.SortBy.WhenHit"),
        #"label":                                 VSExecuteCommand("DebuggerContextMenus.BreakpointsWindow.SortBy.Label"),
        #"disablesorting":                        VSExecuteCommand("DebuggerContextMenus.BreakpointsWindow.SortBy.Disablesorting"),
        #"show address":                          VSExecuteCommand("DebuggerContextMenus.DisassemblyWindow.ShowAddress"),
        #"show source code":                      VSExecuteCommand("DebuggerContextMenus.DisassemblyWindow.ShowSourceCode"),
        #"show code bytes":                       VSExecuteCommand("DebuggerContextMenus.DisassemblyWindow.ShowCodeBytes"),
        #"show symbol names":                     VSExecuteCommand("DebuggerContextMenus.DisassemblyWindow.ShowSymbolNames"),
        #"show line numbers":                     VSExecuteCommand("DebuggerContextMenus.DisassemblyWindow.ShowLineNumbers"),
        #"show toolbar":                          VSExecuteCommand("DebuggerContextMenus.DisassemblyWindow.ShowToolbar"),
        #"toggle disassembly":                    VSExecuteCommand("Debug.ToggleDisassembly"),
        #"reevaluate automatically":              VSExecuteCommand("DebuggerContextMenus.MemoryWindow.ReevaluateAutomatically"),
        #"no data":                               VSExecuteCommand("DebuggerContextMenus.MemoryWindow.NoData"),
        #"1byte integer":                         VSExecuteCommand("DebuggerContextMenus.MemoryWindow.1byteInteger"),
        #"2byte integer":                         VSExecuteCommand("DebuggerContextMenus.MemoryWindow.2byteInteger"),
        #"4byte integer":                         VSExecuteCommand("DebuggerContextMenus.MemoryWindow.4byteInteger"),
        #"8byte integer":                         VSExecuteCommand("DebuggerContextMenus.MemoryWindow.8byteInteger"),
        #"32bit floating point":                  VSExecuteCommand("DebuggerContextMenus.MemoryWindow.32bitFloatingPoint"),
        #"64bit floating point":                  VSExecuteCommand("DebuggerContextMenus.MemoryWindow.64bitFloatingPoint"),
        #"signed display":                        VSExecuteCommand("DebuggerContextMenus.MemoryWindow.SignedDisplay"),
        #"unsigned display":                      VSExecuteCommand("DebuggerContextMenus.MemoryWindow.UnsignedDisplay"),
        #"big endian":                            VSExecuteCommand("DebuggerContextMenus.MemoryWindow.BigEndian"),
        #"no text":                               VSExecuteCommand("DebuggerContextMenus.MemoryWindow.NoText"),
        #"a n s i text":                          VSExecuteCommand("DebuggerContextMenus.MemoryWindow.ANSIText"),
        #"unicode text":                          VSExecuteCommand("DebuggerContextMenus.MemoryWindow.UnicodeText"),
        #"edit value":                            VSExecuteCommand("DebuggerContextMenus.AutosWindow.EditValue"),
        #"show modulesforall processes":          VSExecuteCommand("DebuggerContextMenus.ModulesWindow.ShowModulesforallProcesses"),
        #"switch to frame":                       VSExecuteCommand("DebuggerContextMenus.CallStackWindow.SwitchToFrame"),
        #"show parameter values":                 VSExecuteCommand("DebuggerContextMenus.StacksWindowShortcutMenu.ShowParameterValues"),
        #"show parameter types":                  VSExecuteCommand("DebuggerContextMenus.StacksWindowShortcutMenu.ShowParameterTypes"),
        #"show parameter names":                  VSExecuteCommand("DebuggerContextMenus.StacksWindowShortcutMenu.ShowParameterNames"),
        #"show module names":                     VSExecuteCommand("DebuggerContextMenus.StacksWindowShortcutMenu.ShowModuleNames"),
        #"show byte offsets":                     VSExecuteCommand("DebuggerContextMenus.StacksWindowShortcutMenu.ShowByteOffsets"),
        #"include calls to from other threads":   VSExecuteCommand("DebuggerContextMenus.CallStackWindow.IncludeCallsToFromOtherThreads"),
        "show external code":                    VSExecuteCommand("DebuggerContextMenus.StacksWindowShortcutMenu.ShowExternalCode"),
        "unwind to this frame":                  VSExecuteCommand("DebuggerContextMenus.CallStackWindow.UnwindToThisFrame"),
        "continue process":                      VSExecuteCommand("DebuggerContextMenus.ProcessesWindow.ContinueProcess"),
        "break process":                         VSExecuteCommand("DebuggerContextMenus.ProcessesWindow.BreakProcess"),
        "detach process":                        VSExecuteCommand("DebuggerContextMenus.ProcessesWindow.DetachProcess"),
        "terminate process":                     VSExecuteCommand("DebuggerContextMenus.ProcessesWindow.TerminateProcess"),
        "detachwhendebuggingstopped":            VSExecuteCommand("DebuggerContextMenus.ProcessesWindow.Detachwhendebuggingstopped"),
        "switchto thread x":                     VSExecuteCommand("DebuggerContextMenus.ThreadIPMarker.SwitchtoThreadX"),
        "propagate side effects":                VSExecuteCommand("DebuggerContextMenus.WatchWindow.PropagateSideEffects"),
        #"list memory":                           VSExecuteCommand("Debug.ListMemory"),
        #"list call stack":                       VSExecuteCommand("Debug.ListCallStack"),
        #"list disassembly":                      VSExecuteCommand("Debug.ListDisassembly"),
        #"list registers":                        VSExecuteCommand("Debug.ListRegisters"),
        #"list threads":                          VSExecuteCommand("Debug.ListThreads"),
        #"set radix":                             VSExecuteCommand("Debug.SetRadix"),
        #"set current thread":                    VSExecuteCommand("Debug.SetCurrentThread"),
        #"set current stack frame":               VSExecuteCommand("Debug.SetCurrentStackFrame"),
        #"list source":                           VSExecuteCommand("Debug.ListSource"),
        #"symbol path":                           VSExecuteCommand("Debug.SymbolPath"),
        #"list modules":                          VSExecuteCommand("Debug.ListModules"),
        #"list processes":                        VSExecuteCommand("Debug.ListProcesses"),
        #"set current process":                   VSExecuteCommand("Debug.SetCurrentProcess"),
        #"memory1":                               VSExecuteCommand("Debug.Memory1"),
        #"watch1":                                VSExecuteCommand("Debug.Watch1"),
        #"memory2":                               VSExecuteCommand("Debug.Memory2"),
        #"watch2":                                VSExecuteCommand("Debug.Watch2"),
        #"memory3":                               VSExecuteCommand("Debug.Memory3"),
        #"watch3":                                VSExecuteCommand("Debug.Watch3"),
        #"memory4":                               VSExecuteCommand("Debug.Memory4"),
        #"watch4":                                VSExecuteCommand("Debug.Watch4"),
        #"clear all data tips":                   VSExecuteCommand("Debug.ClearAllDataTips"),
        #"show application thumbnail":            VSExecuteCommand("Debug.ShowApplicationThumbnail"),
        "run code analysison solution":          VSExecuteCommand("Build.RunCodeAnalysisonSolution"),
        "add window":                            VSExecuteCommand("Project.AddWindow"),
        "add page":                              VSExecuteCommand("Project.AddPage"),
        #"add resource dictionary":               VSExecuteCommand("Project.AddResourceDictionary"),
        #"design":                                VSExecuteCommand("OtherContextMenus.ObjectNode.Design"),
        #"modify connection":                     VSExecuteCommand("OtherContextMenus.ServerExplorer.ModifyConnection"),
        #"close connection":                      VSExecuteCommand("OtherContextMenus.ServerExplorer.CloseConnection"),
        #"insert s q l":                          VSExecuteCommand("EditorContextMenus.CodeWindow.InsertSQL"),
        #"run selection":                         VSExecuteCommand("Project.RunSelection"),
        #"retrieve data":                         VSExecuteCommand("OtherContextMenus.ObjectNode.RetrieveData"),
        #"edit":                                  VSExecuteCommand("OtherContextMenus.ObjectNode.Edit"),
        #"execute":                               VSExecuteCommand("EditorContextMenus.CodeWindow.Execute"),
        #"design s q l block":                    VSExecuteCommand("EditorContextMenus.CodeWindow.DesignSQLBlock"),
        #"detach database":                       VSExecuteCommand("OtherContextMenus.ServerExplorer.DetachDatabase"),
        #"browse in s q l server object explorer":     VSExecuteCommand("OtherContextMenus.ServerExplorer.BrowseInSQLServerObjectExplorer"),
        #"add new table":                         VSExecuteCommand("OtherContextMenus.StaticNode.AddNewTable"),
        "add new view":                          VSExecuteCommand("OtherContextMenus.StaticNode.AddNewView"),
        #"add new stored procedure":              VSExecuteCommand("OtherContextMenus.StaticNode.AddNewStoredProcedure"),
        #"inline function":                       VSExecuteCommand("OtherContextMenus.StaticNode.AddNew.InlineFunction"),
        #"tablevalued function":                  VSExecuteCommand("OtherContextMenus.StaticNode.AddNew.TablevaluedFunction"),
        #"scalarvalued function":                 VSExecuteCommand("OtherContextMenus.StaticNode.AddNew.ScalarvaluedFunction"),
        #"add new trigger":                       VSExecuteCommand("OtherContextMenus.StaticNode.AddNewTrigger"),
        "new query":                             VSExecuteCommand("OtherContextMenus.StaticNode.NewQuery"),
        "add new diagram":                       VSExecuteCommand("OtherContextMenus.StaticNode.AddNewDiagram"),
        "add related tables":                    VSExecuteCommand("DatabaseDiagram.AddRelatedTables"),
        "arrange tables":                        VSExecuteCommand("DatabaseDiagram.ArrangeTables"),
        "arrange selection":                     VSExecuteCommand("DatabaseDiagram.ArrangeSelection"),
        "insert column":                         VSExecuteCommand("TableDesigner.InsertColumn"),
        "delete column":                         VSExecuteCommand("TableDesigner.DeleteColumn"),
        "new text annotation":                   VSExecuteCommand("DatabaseDiagram.NewTextAnnotation"),
        "show relationship labels":              VSExecuteCommand("DatabaseDiagram.ShowRelationshipLabels"),
        "view page breaks":                      VSExecuteCommand("DatabaseDiagram.ViewPageBreaks"),
        "recalculate page breaks":               VSExecuteCommand("DatabaseDiagram.RecalculatePageBreaks"),
        "custom":                                VSExecuteCommand("TableDesigner.Custom"),
        "deletefrom database":                   VSExecuteCommand("Edit.DeletefromDatabase"),
        "autosize selected tables":              VSExecuteCommand("DatabaseDiagram.AutosizeSelectedTables"),
        "modify custom":                         VSExecuteCommand("TableDesigner.ModifyCustom"),
        #"set font":                              VSExecuteCommand("DatabaseDiagram.SetFont"),
        #"200":                                   VSExecuteCommand("DatabaseDiagram.200"),
        #"150":                                   VSExecuteCommand("DatabaseDiagram.150"),
        #"100":                                   VSExecuteCommand("DatabaseDiagram.100"),
        #"75":                                    VSExecuteCommand("DatabaseDiagram.75"),
        #"50":                                    VSExecuteCommand("DatabaseDiagram.50"),
        #"25":                                    VSExecuteCommand("DatabaseDiagram.25"),
        #"10":                                    VSExecuteCommand("DatabaseDiagram.10"),
        #"to fit":                                VSExecuteCommand("DatabaseDiagram.ToFit"),
        #"add table":                             VSExecuteCommand("DatabaseDiagram.AddTable"),
        #"copy diagramto clipboard":              VSExecuteCommand("Edit.CopyDiagramtoClipboard"),
        #"removefrom diagram":                    VSExecuteCommand("DatabaseDiagram.RemovefromDiagram"),
        #"indexesand keys":                       VSExecuteCommand("TableDesigner.IndexesandKeys"),
        #"relationships":                         VSExecuteCommand("TableDesigner.Relationships"),
        #"check constraints":                     VSExecuteCommand("TableDesigner.CheckConstraints"),
        "add event handler":                     VSExecuteCommand("Edit.AddEventHandler"),
        "import":                                VSExecuteCommand("OtherContextMenus.ResourceView.Import"),
        #"edit control":                          VSExecuteCommand("OtherContextMenus.ResourceEditors.EditControl"),
        #"copyand outline selection":             VSExecuteCommand("Image.CopyandOutlineSelection"),
        #"use selectionas brush":                 VSExecuteCommand("Image.UseSelectionasBrush"),
        #"convert":                               VSExecuteCommand("File.Convert"),
        #"conditional down":                      VSExecuteCommand("Edit.ConditionalDown"),
        #"conditional up":                        VSExecuteCommand("Edit.ConditionalUp"),
        #"go to dialog":                          VSExecuteCommand("ClassViewContextMenus.ClassViewMultiselectProjectreferencesItems.GoToDialog"),
        #"rescan solution":                       VSExecuteCommand("Project.RescanSolution"),
        #"resolve results":                       VSExecuteCommand("OtherContextMenus.FindSymbol.ResolveResults"),
        #"hide unconfirmed":                      VSExecuteCommand("OtherContextMenus.FindSymbol.HideUnconfirmed"),
        #"property manager":                      VSExecuteCommand("View.PropertyManager"),
        #"view code gen file":                    VSExecuteCommand("View.ViewCodeGenFile"),
        #"convertto web application":             VSExecuteCommand("ClassViewContextMenus.ClassViewProject.ConverttoWebApplication"),
        #"openin blend":                          VSExecuteCommand("View.OpeninBlend"),
        "add view":                              VSExecuteCommand("EditorContextMenus.CodeWindow.AddView"),
        #"view":                                  VSExecuteCommand("ProjectandSolutionContextMenus.Project.Add.View"),
        #"controller":                            VSExecuteCommand("ProjectandSolutionContextMenus.Project.Add.Controller"),
        #"area":                                  VSExecuteCommand("ProjectandSolutionContextMenus.Project.Add.Area"),
        #"database properties":                   VSExecuteCommand("OtherContextMenus.ServerExplorer.DatabaseProperties"),
        #"create table":                          VSExecuteCommand("OtherContextMenus.StaticNode.CreateTable"),
        #"table properties":                      VSExecuteCommand("OtherContextMenus.ObjectNode.TableProperties"),
        #"drop table":                            VSExecuteCommand("OtherContextMenus.ObjectNode.DropTable"),
        #"create index":                          VSExecuteCommand("OtherContextMenus.StaticNode.CreateIndex"),
        #"index properties":                      VSExecuteCommand("OtherContextMenus.ObjectNode.IndexProperties"),
        #"drop index":                            VSExecuteCommand("OtherContextMenus.ObjectNode.DropIndex"),
        #"column properties":                     VSExecuteCommand("OtherContextMenus.ObjectNode.ColumnProperties"),
        #"edit table schema":                     VSExecuteCommand("OtherContextMenus.ObjectNode.EditTableSchema"),
        #"show item":                             VSExecuteCommand("EditorContextMenus.CodeWindow.CodeMap.ShowItem"),
        #"reveal findall references":             VSExecuteCommand("EditorContextMenus.CodeWindow.CodeMap.RevealFindallReferences"),
        #"s s d t reanalyze project":             VSExecuteCommand("Project.SSDTReanalyzeProject"),
        #"s s d t publish":                       VSExecuteCommand("ClassViewContextMenus.ClassViewProject.SSDTPublish"),
        #"s s d t publish selection":             VSExecuteCommand("Build.SSDTPublishSelection"),
        #"s s d t publish from file":             VSExecuteCommand("ProjectandSolutionContextMenus.Item.SSDTPublishFromFile"),
        #"s s d t set as default publish profile":     VSExecuteCommand("ProjectandSolutionContextMenus.Item.SSDTSetAsDefaultPublishProfile"),
        #"s s d t show all files":                VSExecuteCommand("Project.SSDTShowAllFiles"),
        #"t sql editor connect":                  VSExecuteCommand("SQL.TSqlEditorConnect"),
        #"t sql editor disconnect":               VSExecuteCommand("SQL.TSqlEditorDisconnect"),
        #"t sql editor clone query":              VSExecuteCommand("TSqlEditorCloneQuery"),
        #"t sql editor execute query":            VSExecuteCommand("SQL.TSqlEditorExecuteQuery"),
        #"t sql editor cancel query":             VSExecuteCommand("SQL.TSqlEditorCancelQuery"),
        #"t sql editor show estimated plan":      VSExecuteCommand("SQL.TSqlEditorShowEstimatedPlan"),
        #"t sql editor toggle intellisense":      VSExecuteCommand("SQL.TSqlEditorToggleIntellisense"),
        #"t sql editor toggle sql cmd mode":      VSExecuteCommand("SQL.TSqlEditorToggleSqlCmdMode"),
        #"t sql editor toggle client statistics":     VSExecuteCommand("SQL.TSqlEditorToggleClientStatistics"),
        #"t sql editor toggle execution plan":    VSExecuteCommand("SQL.TSqlEditorToggleExecutionPlan"),
        #"t sql editor results as text":          VSExecuteCommand("SQL.TSqlEditorResultsAsText"),
        #"t sql editor results as grid":          VSExecuteCommand("SQL.TSqlEditorResultsAsGrid"),
        #"t sql editor results as file":          VSExecuteCommand("SQL.TSqlEditorResultsAsFile"),
        #"t sql editor query options":            VSExecuteCommand("SQL.TSqlEditorQueryOptions"),
        #"t sql editor toggle results pane":      VSExecuteCommand("SQL.TSqlEditorToggleResultsPane"),
        #"t sql editor new query connection":     VSExecuteCommand("SQL.TSqlEditorNewQueryConnection"),
        #"save results as":                       VSExecuteCommand("OtherContextMenus.SQLResultsGridTabContext.SaveResultsAs"),
        #"t sql editor parse query":              VSExecuteCommand("SQL.TSqlEditorParseQuery"),
        #"execute with debugger":                 VSExecuteCommand("SQL.ExecuteWithDebugger"),
        #"bring forward":                         VSExecuteCommand("Format.BringForward"),
        #"edit current":                          VSExecuteCommand("Format.EditCurrent"),
        #"edit a copy":                           VSExecuteCommand("Format.EditaCopy"),
        #"create empty":                          VSExecuteCommand("Format.CreateEmpty"),
        "diff files":                            VSExecuteCommand("Tools.DiffFiles"),
        "page inspector":                        VSExecuteCommand("View.PageInspector"),
        "team explorer search":                  VSExecuteCommand("Team.TeamExplorerSearch"),
        #"parallel watch1":                       VSExecuteCommand("Debug.ParallelWatch1"),
        "go to view":                            VSExecuteCommand("EditorContextMenus.CodeWindow.GoToView"),
        #"data tools operations":                 VSExecuteCommand("View.DataToolsOperations"),
        #"moveto schema":                         VSExecuteCommand("SQL.MovetoSchema"),
        #"s s d t launch schema compare from solution explorer":     VSExecuteCommand("ProjectandSolutionContextMenus.Project.SSDTLaunchSchemaCompareFromSolutionExplorer"),
        "go to controller":                      VSExecuteCommand("OtherContextMenus.ASPXContext.GoToController"),
        "expand wildcards":                      VSExecuteCommand("SQL.ExpandWildcards"),
        #"fullyqualify names":                    VSExecuteCommand("SQL.FullyqualifyNames"),
        #"clear datatips on current file":        VSExecuteCommand("Debug.ClearDatatipsOnCurrentFile"),
        #"s s d t add new check constraint":      VSExecuteCommand("SSDTAddNewCheckConstraint"),
        #"s s d t add new sql view":              VSExecuteCommand("ProjectandSolutionContextMenus.Project.Add.SSDTAddNewSqlView"),
        #"s s d t add new sql table valued function":     VSExecuteCommand("ProjectandSolutionContextMenus.Project.Add.SSDTAddNewSqlTableValuedFunction"),
        #"s s d t add new sql stored procedure":  VSExecuteCommand("ProjectandSolutionContextMenus.Project.Add.SSDTAddNewSqlStoredProcedure"),
        #"s s d t add new sql scalar function":   VSExecuteCommand("ProjectandSolutionContextMenus.Project.Add.SSDTAddNewSqlScalarFunction"),
        #"s s d t add new sql inline function":   VSExecuteCommand("ProjectandSolutionContextMenus.Project.Add.SSDTAddNewSqlInlineFunction"),
        #"s s d t add new aggregate function":    VSExecuteCommand("SSDTAddNewAggregateFunction"),
        #"s s d t add new sql application role":  VSExecuteCommand("SSDTAddNewSqlApplicationRole"),
        #"s s d t add new sql clr assembly":      VSExecuteCommand("SSDTAddNewSqlClrAssembly"),
        #"s s d t add new sql asymmetric key":    VSExecuteCommand("SSDTAddNewSqlAsymmetricKey"),
        #"s s d t add new sql certificate":       VSExecuteCommand("SSDTAddNewSqlCertificate"),
        #"s s d t add new sql contract":          VSExecuteCommand("SSDTAddNewSqlContract"),
        #"s s d t add new sql database role":     VSExecuteCommand("SSDTAddNewSqlDatabaseRole"),
        #"s s d t add new sql database trigger":  VSExecuteCommand("SSDTAddNewSqlDatabaseTrigger"),
        #"s s d t add new sql event notification":     VSExecuteCommand("SSDTAddNewSqlEventNotification"),
        #"s s d t add new sql foreign key":       VSExecuteCommand("SSDTAddNewSqlForeignKey"),
        #"s s d t add new sql fulltext catalog":  VSExecuteCommand("SSDTAddNewSqlFulltextCatalog"),
        #"s s d t add new sql fulltext index":    VSExecuteCommand("SSDTAddNewSqlFulltextIndex"),
        #"s s d t add new sql index":             VSExecuteCommand("SSDTAddNewSqlIndex"),
        #"s s d t add new sql instead of trigger":     VSExecuteCommand("SSDTAddNewSqlInsteadOfTrigger"),
        #"s s d t add new sql message type":      VSExecuteCommand("SSDTAddNewSqlMessageType"),
        #"s s d t add new sql partition function":     VSExecuteCommand("SSDTAddNewSqlPartitionFunction"),
        #"s s d t add new sql partition scheme":  VSExecuteCommand("SSDTAddNewSqlPartitionScheme"),
        #"s s d t add new sql primary key":       VSExecuteCommand("SSDTAddNewSqlPrimaryKey"),
        #"s s d t add new sql queue":             VSExecuteCommand("SSDTAddNewSqlQueue"),
        #"s s d t add new sql remote service binding":     VSExecuteCommand("SSDTAddNewSqlRemoteServiceBinding"),
        #"s s d t add new sql route":             VSExecuteCommand("SSDTAddNewSqlRoute"),
        #"s s d t add new sql schema":            VSExecuteCommand("SSDTAddNewSqlSchema"),
        #"s s d t add new sql service":           VSExecuteCommand("SSDTAddNewSqlService"),
        #"s s d t add new sql statistics":        VSExecuteCommand("SSDTAddNewSqlStatistics"),
        #"s s d t add new sql symmetric key":     VSExecuteCommand("SSDTAddNewSqlSymmetricKey"),
        #"s s d t add new sql synonym":           VSExecuteCommand("SSDTAddNewSqlSynonym"),
        #"s s d t add new sql trigger":           VSExecuteCommand("SSDTAddNewSqlTrigger"),
        #"s s d t add new sql user defined data type":     VSExecuteCommand("SSDTAddNewSqlUserDefinedDataType"),
        #"s s d t add new sql unique key":        VSExecuteCommand("SSDTAddNewSqlUniqueKey"),
        #"s s d t add new sql user":              VSExecuteCommand("SSDTAddNewSqlUser"),
        #"s s d t add new sql user defined clr type":     VSExecuteCommand("SSDTAddNewSqlUserDefinedClrType"),
        #"s s d t add new sql xml index":         VSExecuteCommand("SSDTAddNewSqlXmlIndex"),
        #"s s d t add new sql xml schema collection":     VSExecuteCommand("SSDTAddNewSqlXmlSchemaCollection"),
        #"s s d t add new sql user defined table type":     VSExecuteCommand("SSDTAddNewSqlUserDefinedTableType"),
        #"s s d t add new sql login":             VSExecuteCommand("SSDTAddNewSqlLogin"),
        #"s s d t add new sql rule":              VSExecuteCommand("SSDTAddNewSqlRule"),
        #"s s d t add new sql linked server":     VSExecuteCommand("SSDTAddNewSqlLinkedServer"),
        #"s s d t add new sql custom error message":     VSExecuteCommand("SSDTAddNewSqlCustomErrorMessage"),
        #"s s d t add new sql filegroup":         VSExecuteCommand("SSDTAddNewSqlFilegroup"),
        #"s s d t add new sql master key":        VSExecuteCommand("SSDTAddNewSqlMasterKey"),
        #"s s d t add new sql filegroup file":    VSExecuteCommand("SSDTAddNewSqlFilegroupFile"),
        #"s s d t add new sql log file":          VSExecuteCommand("SSDTAddNewSqlLogFile"),
        #"s s d t add new sql linked server login":     VSExecuteCommand("SSDTAddNewSqlLinkedServerLogin"),
        #"s s d t add new sql default constraint":     VSExecuteCommand("SSDTAddNewSqlDefaultConstraint"),
        #"s s d t add new sql signature":         VSExecuteCommand("SSDTAddNewSqlSignature"),
        #"s s d t addnew sql server trigger":     VSExecuteCommand("SSDTAddnewSqlServerTrigger"),
        #"s s d t add new sql tcp end point":     VSExecuteCommand("SSDTAddNewSqlTcpEndPoint"),
        #"s s d t add new sql http end point":    VSExecuteCommand("SSDTAddNewSqlHttpEndPoint"),
        #"s s d t add new sql broker priority":   VSExecuteCommand("SSDTAddNewSqlBrokerPriority"),
        #"s s d t add new sql database audit specification":     VSExecuteCommand("SSDTAddNewSqlDatabaseAuditSpecification"),
        #"s s d t add new sql server audit specification":     VSExecuteCommand("SSDTAddNewSqlServerAuditSpecification"),
        #"s s d t add new sql event session":     VSExecuteCommand("SSDTAddNewSqlEventSession"),
        #"s s d t add new sql full text stop list":     VSExecuteCommand("SSDTAddNewSqlFullTextStopList"),
        #"s s d t add new sql spatial index":     VSExecuteCommand("SSDTAddNewSqlSpatialIndex"),
        #"s s d t add new sql server audit":      VSExecuteCommand("SSDTAddNewSqlServerAudit"),
        #"s s d t add new cryptographic provider":     VSExecuteCommand("SSDTAddNewCryptographicProvider"),
        #"s s d t add new credential":            VSExecuteCommand("SSDTAddNewCredential"),
        #"s s d t data view schema compare":      VSExecuteCommand("OtherContextMenus.ServerExplorer.SSDTDataViewSchemaCompare"),
        #"s e new query":                         VSExecuteCommand("OtherContextMenus.SQLServerObjectExplorerContextMenu.SENewQuery"),
        #"s e add new database audit specification":     VSExecuteCommand("OtherContextMenus.SQLServerObjectExplorerContextMenu.SEAddNewDatabaseAuditSpecification"),
        #"s e add new full text stoplist":        VSExecuteCommand("OtherContextMenus.SQLServerObjectExplorerContextMenu.SEAddNewFullTextStoplist"),
        #"s e add new fulltext catalog":          VSExecuteCommand("OtherContextMenus.SQLServerObjectExplorerContextMenu.SEAddNewFulltextCatalog"),
        #"s e add new sequence":                  VSExecuteCommand("OtherContextMenus.SQLServerObjectExplorerContextMenu.SEAddNewSequence"),
        #"s e add new instead of trigger":        VSExecuteCommand("OtherContextMenus.SQLServerObjectExplorerContextMenu.SEAddNewInsteadOfTrigger"),
        #"s e add new file table":                VSExecuteCommand("OtherContextMenus.SQLServerObjectExplorerContextMenu.SEAddNewFileTable"),
        #"s e add new fulltext index":            VSExecuteCommand("OtherContextMenus.SQLServerObjectExplorerContextMenu.AddNew.SEAddNewFulltextIndex"),
        #"s e add new index":                     VSExecuteCommand("OtherContextMenus.SQLServerObjectExplorerContextMenu.AddNew.SEAddNewIndex"),
        #"s e add new x m l index":               VSExecuteCommand("OtherContextMenus.SQLServerObjectExplorerContextMenu.AddNew.SEAddNewXMLIndex"),
        #"s e add new statistics":                VSExecuteCommand("OtherContextMenus.SQLServerObjectExplorerContextMenu.SEAddNewStatistics"),
        #"s e add new linked server login":       VSExecuteCommand("OtherContextMenus.SQLServerObjectExplorerContextMenu.SEAddNewLinkedServerLogin"),
        #"s e add new login":                     VSExecuteCommand("OtherContextMenus.SQLServerObjectExplorerContextMenu.SEAddNewLogin"),
        #"s e add new credential":                VSExecuteCommand("OtherContextMenus.SQLServerObjectExplorerContextMenu.SEAddNewCredential"),
        #"s e view data":                         VSExecuteCommand("OtherContextMenus.SQLServerObjectExplorerContextMenu.SEViewData"),
        #"s e add new aggregate add new":         VSExecuteCommand("OtherContextMenus.SQLServerObjectExplorerContextMenu.AddNew.SEAddNewAggregateAddNew"),
        #"s e add new table function add new":    VSExecuteCommand("OtherContextMenus.SQLServerObjectExplorerContextMenu.AddNew.SEAddNewTableFunctionAddNew"),
        #"s e add new scalar function":           VSExecuteCommand("OtherContextMenus.SQLServerObjectExplorerContextMenu.AddNew.SEAddNewScalarFunction"),
        #"s e add new inline function add new":   VSExecuteCommand("OtherContextMenus.SQLServerObjectExplorerContextMenu.AddNew.SEAddNewInlineFunctionAddNew"),
        #"s e add new search property list":      VSExecuteCommand("OtherContextMenus.SQLServerObjectExplorerContextMenu.SEAddNewSearchPropertyList"),
        #"s e add new server role":               VSExecuteCommand("OtherContextMenus.SQLServerObjectExplorerContextMenu.SEAddNewServerRole"),
        #"s e add new user with password":        VSExecuteCommand("OtherContextMenus.SQLServerObjectExplorerContextMenu.SEAddNewUserWithPassword"),
        #"s e add new login s q l server":        VSExecuteCommand("OtherContextMenus.SQLServerObjectExplorerContextMenu.SEAddNewLoginSQLServer"),
        #"pin active container":                  VSExecuteCommand("Format.PinActiveContainer"),
        #"s e new database":                      VSExecuteCommand("OtherContextMenus.SQLServerObjectExplorerContextMenu.SENewDatabase"),
        #"s e new object":                        VSExecuteCommand("OtherContextMenus.SQLServerObjectExplorerContextMenu.SENewObject"),
        #"s s d t import dac":                    VSExecuteCommand("Project.SSDTImportDac"),
        #"s s d t import script":                 VSExecuteCommand("Project.SSDTImportScript"),
        #"s s d t create dacpac from project":    VSExecuteCommand("Build.SSDTCreateDacpacFromProject"),
        #"s s d t import database schema":        VSExecuteCommand("Project.SSDTImportDatabaseSchema"),
        #"s e view code":                         VSExecuteCommand("OtherContextMenus.SQLServerObjectExplorerContextMenu.SEViewCode"),
        #"s e view permissions":                  VSExecuteCommand("OtherContextMenus.SQLServerObjectExplorerContextMenu.SEViewPermissions"),
        #"view in table designer from server explorer":     VSExecuteCommand("OtherContextMenus.SQLServerObjectExplorerContextMenu.ViewInTableDesignerFromServerExplorer"),
        #"s e create new project":                VSExecuteCommand("OtherContextMenus.SQLServerObjectExplorerContextMenu.SECreateNewProject"),
        #"s e application debugging":             VSExecuteCommand("OtherContextMenus.SQLServerObjectExplorerContextMenu.SEApplicationDebugging"),
        #"s e execute procedure":                 VSExecuteCommand("OtherContextMenus.SQLServerObjectExplorerContextMenu.SEExecuteProcedure"),
        #"s e debug procedure":                   VSExecuteCommand("OtherContextMenus.SQLServerObjectExplorerContextMenu.SEDebugProcedure"),
        #"s e go to project":                     VSExecuteCommand("OtherContextMenus.SQLServerObjectExplorerContextMenu.SEGoToProject"),
        #"s e disconnect from server":            VSExecuteCommand("OtherContextMenus.SQLServerObjectExplorerContextMenu.SEDisconnectFromServer"),
        #"s e delete server instance":            VSExecuteCommand("OtherContextMenus.SQLServerObjectExplorerContextMenu.SEDeleteServerInstance"),
        #"send backward":                         VSExecuteCommand("Format.SendBackward"),
        #"cancel interactive evaluation":         VSExecuteCommand("OtherContextMenus.FSIConsoleContext.CancelInteractiveEvaluation"),
        #"start debug target":                    VSExecuteCommand("Debug.StartDebugTarget"),
        #"flag unflag thread x":                  VSExecuteCommand("DebuggerContextMenus.ThreadIPMarker.FlagUnflagThreadX"),
        "clear":                                 VSExecuteCommand("DebuggerContextMenus.DataTipsContext.Clear"),
        "call hierarchy":                        VSExecuteCommand("View.CallHierarchy"),
        #"add as new root":                       VSExecuteCommand("OtherContextMenus.CallHierarchyContextMenu.AddAsNewRoot"),
        #"package manager console":               VSExecuteCommand("View.PackageManagerConsole"),
        #"s s d t add new database reference":    VSExecuteCommand("Project.SSDTAddNewDatabaseReference"),
        #"class wizard":                          VSExecuteCommand("Project.ClassWizard"),
        #"intelli trace events":                  VSExecuteCommand("Debug.IntelliTraceEvents"),
        #"group by":                              VSExecuteCommand("OtherContextMenus.ParallelTasksWindowShortcutMenu.GroupBy"),
        #"parallel watch2":                       VSExecuteCommand("Debug.ParallelWatch2"),
        #"intelli trace calls":                   VSExecuteCommand("Debug.IntelliTraceCalls"),
        #"reset interactive session":             VSExecuteCommand("OtherContextMenus.FSIConsoleContext.ResetInteractiveSession"),
        #"code coverage results":                 VSExecuteCommand("Test.CodeCoverageResults"),
        #"s s d t start collecting events":       VSExecuteCommand("SSDTStartCollectingEvents"),
        #"s s d t stop collecting events":        VSExecuteCommand("SSDTStopCollectingEvents"),
        #"s s d t event monitor filter":          VSExecuteCommand("SSDTEventMonitorFilter"),
        #"move to diagram":                       VSExecuteCommand("ArchitectureDesigner.Sequence.MoveToDiagram"),
        #"collapse lifelines":                    VSExecuteCommand("ArchitectureDesigner.Sequence.CollapseLifelines"),
        #"expand":                                VSExecuteCommand("ArchitectureDesigner.Sequence.Expand"),
        #"s s d t event monitor":                 VSExecuteCommand("ProjectandSolutionContextMenus.Project.SSDTEventMonitor"),
        #"s s d t dump schema manager":           VSExecuteCommand("SSDTDumpSchemaManager"),
        #"s s d t event monitor save to file":    VSExecuteCommand("SSDTEventMonitorSaveToFile"),
        "commit all edits":                      VSExecuteCommand("CommitAllEdits"),
        #"s s d t add new sql table":             VSExecuteCommand("ProjectandSolutionContextMenus.Project.Add.SSDTAddNewSqlTable"),
        #"s s d t dump project system":           VSExecuteCommand("SSDTDumpProjectSystem"),
        #"s s d t dump g c":                      VSExecuteCommand("SSDTDumpGC"),
        #"s s d t start g c collection":          VSExecuteCommand("SSDTStartGCCollection"),
        #"convert ts data project":               VSExecuteCommand("ProjectandSolutionContextMenus.Project.ConvertTsDataProject"),
        #"convert solution":                      VSExecuteCommand("ConvertSolution"),
        "navigate to":                           VSExecuteCommand("Edit.NavigateTo"),
        #"remove root":                           VSExecuteCommand("OtherContextMenus.CallHierarchyContextMenu.RemoveRoot"),
        #"add to designer":                       VSExecuteCommand("OtherContextMenus.ServerExplorer.AddToDesigner"),
        #"switch to task":                        VSExecuteCommand("OtherContextMenus.ParallelTasksWindowShortcutMenu.SwitchToTask"),
        #"parallel watch3":                       VSExecuteCommand("Debug.ParallelWatch3"),
        "view in page inspector":                VSExecuteCommand("OtherContextMenus.BasicContext.ViewinPageInspector"),
        #"s s d t add new script":                VSExecuteCommand("ProjectandSolutionContextMenus.Project.Add.SSDTAddNewScript"),
        #"data table":                            VSExecuteCommand("OtherContextMenus.DataSourceContext.Add.DataTable"),
        #"arrange":                               VSExecuteCommand("DebuggerContextMenus.DataTipsContext.Arrange"),
        #"pin to source":                         VSExecuteCommand("EditorContextMenus.CodeWindow.PinToSource"),
        #"freeze assigned threads":               VSExecuteCommand("OtherContextMenus.ParallelTasksWindowShortcutMenu.FreezeAssignedThreads"),
        #"parallel watch4":                       VSExecuteCommand("Debug.ParallelWatch4"),
        #"switch between left and right":         VSExecuteCommand("Diff.SwitchBetweenLeftAndRight"),
        #"relation":                              VSExecuteCommand("OtherContextMenus.DataSourceContext.Add.Relation"),
        #"configure":                             VSExecuteCommand("OtherContextMenus.DbTableContext.Configure"),
        #"thaw assigned threads":                 VSExecuteCommand("OtherContextMenus.ParallelTasksWindowShortcutMenu.ThawAssignedThreads"),
        #"flag assigned threads":                 VSExecuteCommand("OtherContextMenus.ParallelTasksWindowShortcutMenu.FlagAssignedThreads"),
        #"key":                                   VSExecuteCommand("OtherContextMenus.DbTableContext.Add.Key"),
        #"unflag assigned threads":               VSExecuteCommand("OtherContextMenus.ParallelTasksWindowShortcutMenu.UnflagAssignedThreads"),
        #"column":                                VSExecuteCommand("OtherContextMenus.DbTableContext.Add.Column"),
        "autosize":                              VSExecuteCommand("View.Autosize"),
        #"show relation labels":                  VSExecuteCommand("OtherContextMenus.DataSourceContext.ShowRelationLabels"),
        #"add expression":                        VSExecuteCommand("DebuggerContextMenus.WatchItemContext.AddExpression"),
        #"remove expression":                     VSExecuteCommand("DebuggerContextMenus.WatchItemContext.RemoveExpression"),
        #"always load automatically":             VSExecuteCommand("DebuggerContextMenus.AutosWindow.AlwaysLoadAutomatically"),
        #"export data tips":                      VSExecuteCommand("Debug.ExportDataTips"),
        #"stop collection":                       VSExecuteCommand("DiagnosticsHub.StopCollection"),
        #"import data tips":                      VSExecuteCommand("Debug.ImportDataTips"),
        #"startup project properties":            VSExecuteCommand("Debug.StartupProjectProperties"),
        "refresh windowsapp":                    VSExecuteCommand("Debug.RefreshWindowsapp"),
        "build page":                            VSExecuteCommand("Build.BuildPage"),
        "build runtime licenses":                VSExecuteCommand("Build.BuildRuntimeLicenses"),
        "export template":                       VSExecuteCommand("File.ExportTemplate"),
        "new web site":                          VSExecuteCommand("File.NewWebSite"),
        "new team project":                      VSExecuteCommand("File.NewTeamProject"),
        "batch new team project":                VSExecuteCommand("File.BatchNewTeamProject"),
        "open web site":                         VSExecuteCommand("File.OpenWebSite"),
        "connect to team project":               VSExecuteCommand("File.ConnecttoTeamProject"),
        "open from portal":                      VSExecuteCommand("File.OpenfromPortal"),
        "add new web site":                      VSExecuteCommand("File.AddNewWebSite"),
        "add existing web site":                 VSExecuteCommand("File.AddExistingWebSite"),
        "add row":                               VSExecuteCommand("Edit.AddRow"),
        "remove row":                            VSExecuteCommand("Edit.RemoveRow"),
        "select none":                           VSExecuteCommand("Edit.SelectNone"),
        "edit cell":                             VSExecuteCommand("Edit.EditCell"),
        "paste json as classes":                 VSExecuteCommand("Edit.PasteJSONAsClasses"),
        "paste xml as classes":                  VSExecuteCommand("Edit.PasteXMLAsClasses"),
        #"view data grid":                        VSExecuteCommand("View.ViewDataGrid"),
        #"xml schema explorer":                   VSExecuteCommand("View.XMLSchemaExplorer"),
        #"publish as web service":                VSExecuteCommand("Project.PublishasWebService"),
        "update reference":                      VSExecuteCommand("Project.UpdateReference"),
        #"remove web reference":                  VSExecuteCommand("Project.RemoveWebReference"),
        "use iis express":                       VSExecuteCommand("Project.UseIISExpress"),
        "new virtual directory":                 VSExecuteCommand("Project.NewVirtualDirectory"),
        "new sequential workflow":               VSExecuteCommand("Project.NewSequentialWorkflow"),
        "new state machine workflow":            VSExecuteCommand("Project.NewStateMachineWorkflow"),
        "new activity":                          VSExecuteCommand("Project.NewActivity"),
        "add new data source":                   VSExecuteCommand("Project.AddNewDataSource"),
        "install web components":                VSExecuteCommand("Tools.InstallWebComponents"),
        "wcf service configuration editor":      VSExecuteCommand("Tools.WCFServiceConfigurationEditor"),
        #"read app publishing guide":             VSExecuteCommand("Help.ReadAppPublishingGuide"),
        #"customer feedback options":             VSExecuteCommand("Help.CustomerFeedbackOptions"),
        #"show for new operations":               VSExecuteCommand("Window.ShowforNewOperations"),
        #"data sources":                          VSExecuteCommand("View.DataSources"),
        "web publish activity":                  VSExecuteCommand("View.WebPublishActivity"),
        #"entity data model mapping details":     VSExecuteCommand("View.EntityDataModelMappingDetails"),
        #"entity data model browser":             VSExecuteCommand("View.EntityDataModelBrowser"),
        "tfs history":                           VSExecuteCommand("View.TfsHistory"),
        "tfs pending changes":                   VSExecuteCommand("View.TfsPendingChanges"),
        "f interactive":                         VSExecuteCommand("View.F#Interactive"),
        "class details":                         VSExecuteCommand("View.ClassDetails"),
        #"show intellisense errors":              VSExecuteCommand("OtherContextMenus.ErrorList.ShowIntelliSenseErrors"),
        #"import service contract":               VSExecuteCommand("ProjectandSolutionContextMenus.Project.ImportServiceContract"),
        #"edit w c f configuration":              VSExecuteCommand("DebuggerContextMenus.ScriptProject.EditWCFConfiguration"),
        "add config transform":                  VSExecuteCommand("ProjectandSolutionContextMenus.CrossProjectMultiItem.AddConfigTransform"),
        "preview transform":                     VSExecuteCommand("ProjectandSolutionContextMenus.CrossProjectMultiItem.PreviewTransform"),
        "debug t4 template":                     VSExecuteCommand("ProjectandSolutionContextMenus.CrossProjectMultiItem.DebugT4Template"),
        #"showin x m l schema explorer":          VSExecuteCommand("EditorContextMenus.CodeWindow.ShowinXMLSchemaExplorer"),
        "run coded web performance test":        VSExecuteCommand("EditorContextMenus.CodeWindow.RunCodedWebPerformanceTest"),
        "debug coded web performance test":      VSExecuteCommand("EditorContextMenus.CodeWindow.DebugCodedWebPerformanceTest"),
        "execute in interactive":                VSExecuteCommand("EditorContextMenus.CodeWindow.ExecuteInInteractive"),
        "execute line in interactive":           VSExecuteCommand("EditorContextMenus.CodeWindow.ExecuteLineInInteractive"),
        "implement abstract class":              VSExecuteCommand("EditorContextMenus.CodeWindow.ImplementAbstractClass"),
        "run tests":                             VSExecuteCommand("EditorContextMenus.CodeWindow.RunTests"),
        "create unit tests":                     VSExecuteCommand("EditorContextMenus.CodeWindow.CreateUnitTests"),
        "generate sequence diagram":             VSExecuteCommand("EditorContextMenus.CodeWindow.GenerateSequenceDiagram"),
        "generate pound include graph":          VSExecuteCommand("EditorContextMenus.CodeWindow.GeneratePoundIncludeGraph"),
        "manage nu get packages":                VSExecuteCommand("Project.ManageNuGetPackages"),
        "manage nu get packagesfor solution":    VSExecuteCommand("Tools.ManageNuGetPackagesforSolution"),
        "show project portal":                   VSExecuteCommand("Team.ShowProjectPortal"),
        "show report site":                      VSExecuteCommand("Team.ShowReportSite"),
        "project alerts":                        VSExecuteCommand("Team.ProjectAlerts"),
        #"team project security":                 VSExecuteCommand("Team.TeamProjectSecurity"),
        #"team project group membership":         VSExecuteCommand("Team.TeamProjectGroupMembership"),
        "tfs source control":                    VSExecuteCommand("Team.TfsSourceControl"),
        "work item areas and iterations":        VSExecuteCommand("Team.WorkItemAreasandIterations"),
        "work item areas":                       VSExecuteCommand("Team.WorkItemAreas"),
        "work item iterations":                  VSExecuteCommand("Team.WorkItemIterations"),
        "portal settings":                       VSExecuteCommand("Team.PortalSettings"),
        "global security":                       VSExecuteCommand("Team.GlobalSecurity"),
        "global group membership":               VSExecuteCommand("Team.GlobalGroupMembership"),
        "tfs source control file types":         VSExecuteCommand("Team.TfsSourceControlFileTypes"),
        "process template manager":              VSExecuteCommand("Team.ProcessTemplateManager"),
        "architecture explorer":                 VSExecuteCommand("View.ArchitectureExplorer"),
        "sql server object explorer":            VSExecuteCommand("View.SQLServerObjectExplorer"),
        "pending changes filter":                VSExecuteCommand("SolutionExplorer.PendingChangesFilter"),
        "open files filter":                     VSExecuteCommand("SolutionExplorer.OpenFilesFilter"),
        "test results":                          VSExecuteCommand("View.TestResults"),
        "load test runs":                        VSExecuteCommand("View.LoadTestRuns"),
        "layer explorer":                        VSExecuteCommand("View.LayerExplorer"),
        "tfs source control explorer":           VSExecuteCommand("View.TfsSourceControlExplorer"),
        "u m l model explorer":                  VSExecuteCommand("View.UMLModelExplorer"),
        "sync with active document":             VSExecuteCommand("SolutionExplorer.SyncWithActiveDocument"),
        "configure code analysisfor web site":   VSExecuteCommand("Project.ConfigureCodeAnalysisforWebSite"),
        "synchronize views":                     VSExecuteCommand("View.SynchronizeViews"),
        "refresh remote references":             VSExecuteCommand("Edit.RefreshRemoteReferences"),
        #"generateastubforthismethod":            VSExecuteCommand("OtherContextMenus.SmartTag.Generateastubforthismethod"),
        #"renamewithpreview":                     VSExecuteCommand("OtherContextMenus.SmartTag.Renamewithpreview"),
        #"implement interface explicitly":        VSExecuteCommand("OtherContextMenus.SmartTag.ImplementInterfaceExplicitly"),
        #"addappropriateusingstatement":          VSExecuteCommand("Edit.Addappropriateusingstatement"),
        #"fullyqualifyname":                      VSExecuteCommand("Edit.Fullyqualifyname"),
        #"foundapossiblematch":                   VSExecuteCommand("Edit.Foundapossiblematch"),
        #"simplify type names":                   VSExecuteCommand("Edit.SimplifyTypeNames"),
        "remove unused usings":                  VSExecuteCommand("Edit.RemoveUnusedUsings"),
        "sort usings":                           VSExecuteCommand("Edit.SortUsings"),
        "remove and sort":                       VSExecuteCommand("Edit.RemoveAndSort"),
        "simplify remove and sort":              VSExecuteCommand("Edit.SimplifyRemoveAndSort"),
        "generate constructor":                  VSExecuteCommand("OtherContextMenus.SmartTag.Generateconstructor"),
        "generate property":                     VSExecuteCommand("OtherContextMenus.SmartTag.Generateproperty"),
        "generate field":                        VSExecuteCommand("OtherContextMenus.SmartTag.Generatefield"),
        #"generate enum member":                  VSExecuteCommand("OtherContextMenus.SmartTag.Generateenummember"),
        "generate class":                        VSExecuteCommand("OtherContextMenus.SmartTag.Generateclass"),
        "generate new type":                     VSExecuteCommand("OtherContextMenus.SmartTag.Generatenewtype"),
        "generate method stub":                  VSExecuteCommand("EditorContextMenus.CodeWindow.Generate.GenerateMethodStub"),
        "generate constructor":                  VSExecuteCommand("EditorContextMenus.CodeWindow.Generate.GenerateConstructor"),
        "generate property":                     VSExecuteCommand("EditorContextMenus.CodeWindow.Generate.GenerateProperty"),
        "generate field":                        VSExecuteCommand("EditorContextMenus.CodeWindow.Generate.GenerateField"),
        "generate enum member":                  VSExecuteCommand("EditorContextMenus.CodeWindow.Generate.GenerateEnumMember"),
        "generate class":                        VSExecuteCommand("EditorContextMenus.CodeWindow.Generate.GenerateClass"),
        "generate new type":                     VSExecuteCommand("EditorContextMenus.CodeWindow.Generate.GenerateNewType"),
        #"add selected projectsto source control":     VSExecuteCommand("ClassViewContextMenus.ClassViewProject.AddSelectedProjectstoSourceControl"),
        "undo checkout":                         VSExecuteCommand("ClassViewContextMenus.ClassViewProject.UndoCheckout"),
        "compare":                               VSExecuteCommand("ClassViewContextMenus.ClassViewItem.Compare"),
        "context get latest version":            VSExecuteCommand("ClassViewContextMenus.ClassViewProject.ContextGetLatestVersion"),
        "get":                                   VSExecuteCommand("ClassViewContextMenus.ClassViewProject.Get"),
        "view pending checkins":                 VSExecuteCommand("ClassViewContextMenus.ClassViewProject.ViewPendingCheckins"),
        "check outfor edit":                     VSExecuteCommand("EditorContextMenus.CodeWindow.CheckOutforEdit"),
        "check in":                              VSExecuteCommand("EditorContextMenus.CodeWindow.CheckIn"),
        "compare versions":                      VSExecuteCommand("OtherContextMenus.PendingCheckinWindowContextMenu.CompareVersions"),
        "openwith editor":                       VSExecuteCommand("OtherContextMenus.PendingCheckinWindowContextMenu.OpenwithEditor"),
        "get latest version":                    VSExecuteCommand("File.GetLatestVersion"),
        "get latest solution files":             VSExecuteCommand("File.GetLatestSolutionFiles"),
        "check out silent":                      VSExecuteCommand("File.CheckOutSilent"),
        "check in silent":                       VSExecuteCommand("File.CheckInSilent"),
        "view history":                          VSExecuteCommand("File.ViewHistory"),
        "exclude selectionfrom source control":  VSExecuteCommand("File.ExcludeSelectionfromSourceControl"),
        "refresh status":                        VSExecuteCommand("File.RefreshStatus"),
        "forceexclusive":                        VSExecuteCommand("OtherContextMenus.CheckOutDialogContextMenu.Forceexclusive"),
        "add solutionto source control":         VSExecuteCommand("File.AddSolutiontoSourceControl"),
        "pending checkins":                      VSExecuteCommand("View.PendingCheckins"),
        "change source control":                 VSExecuteCommand("File.ChangeSourceControl"),
        "get latest version dynamic silent":     VSExecuteCommand("GetLatestVersionDynamicSilent"),
        "checkout dynamic silent":               VSExecuteCommand("CheckoutDynamicSilent"),
        "check in dynamic silent":               VSExecuteCommand("CheckInDynamicSilent"),
        "share":                                 VSExecuteCommand("File.Share"),
        "source control manager":                VSExecuteCommand("File.SourceControlManager"),
        "openfrom source control":               VSExecuteCommand("File.OpenfromSourceControl"),
        "add projectfrom source control":        VSExecuteCommand("File.AddProjectfromSourceControl"),
        "collapse blockcurrentblock":            VSExecuteCommand("Edit.CollapseBlockcurrentblock"),
        "collapse allincurrentblock":            VSExecuteCommand("Edit.CollapseAllincurrentblock"),
        "go to header file":                     VSExecuteCommand("EditorContextMenus.CodeWindow.GoToHeaderFile"),
        "start performance analysis":            VSExecuteCommand("Debug.StartPerformanceAnalysis"),
        "start performance analysis paused":     VSExecuteCommand("Debug.StartPerformanceAnalysisPaused"),
        "stop performance analysis":             VSExecuteCommand("Debug.StopPerformanceAnalysis"),
        "how to videos":                         VSExecuteCommand("Help.HowToVideos"),
        "connectto database":                    VSExecuteCommand("Tools.ConnecttoDatabase"),
        "connectto server":                      VSExecuteCommand("Tools.ConnecttoServer"),
        "bin":                                   VSExecuteCommand("Project.Bin"),
        "app_ code":                             VSExecuteCommand("Project.App_Code"),
        "app_ global resources":                 VSExecuteCommand("Project.App_GlobalResources"),
        "app_ local resources":                  VSExecuteCommand("Project.App_LocalResources"),
        "app_ web references":                   VSExecuteCommand("Project.App_WebReferences"),
        "app_ data":                             VSExecuteCommand("Project.App_Data"),
        "app_ browsers":                         VSExecuteCommand("Project.App_Browsers"),
        "theme":                                 VSExecuteCommand("Project.Theme"),
        "run code analysison web site":          VSExecuteCommand("Build.RunCodeAnalysisonWebSite"),
        "performance explorer":                  VSExecuteCommand("Analyze.PerformanceExplorer"),
        "code analysis":                         VSExecuteCommand("View.CodeAnalysis"),
        "code metrics results":                  VSExecuteCommand("View.CodeMetricsResults"),
        "go to previous uncovered":              VSExecuteCommand("CodeCoverage.GoToPreviousUncovered"),
        "go to next uncovered":                  VSExecuteCommand("CodeCoverage.GoToNextUncovered"),
        "export results":                        VSExecuteCommand("CodeCoverage.ExportResults"),
        "import results":                        VSExecuteCommand("CodeCoverage.ImportResults"),
        "merge results":                         VSExecuteCommand("CodeCoverage.MergeResults"),
        "show code coverage coloring":           VSExecuteCommand("CodeCoverage.ShowCodeCoverageColoring"),
        "view test results details":             VSExecuteCommand("OtherContextMenus.TestResultsContextMenu.ViewTestResultsDetails"),
        "view run":                              VSExecuteCommand("OtherContextMenus.TestResultsContextMenu.ViewRun"),
        "add to work item":                      VSExecuteCommand("OtherContextMenus.TestResultsContextMenu.AddtoWorkItem"),
        "open test list editor":                 VSExecuteCommand("OtherContextMenus.TestListEditorContextMenu.OpenTestListEditor"),
        "exclude from group":                    VSExecuteCommand("OtherContextMenus.TestListEditorContextMenu.ExcludefromGroup"),
        "assign as work item":                   VSExecuteCommand("OtherContextMenus.TestListEditorContextMenu.AssignasWorkItem"),
        "open test":                             VSExecuteCommand("OtherContextMenus.TestResultsContextMenu.OpenTest"),
        "pause test run":                        VSExecuteCommand("TestResults.PauseTestRun"),
        "stop test run":                         VSExecuteCommand("OtherContextMenus.TestResultsContextMenu.TestResults.StopTestRun"),
        "run details":                           VSExecuteCommand("TestResults.RunDetails"),
        "import metadata file":                  VSExecuteCommand("TestListEditor.ImportMetadataFile"),
        "export test run results":               VSExecuteCommand("TestResults.ExportTestRunResults"),
        "export selected test results":          VSExecuteCommand("TestResults.ExportSelectedTestResults"),
        "import test results":                   VSExecuteCommand("TestResults.ImportTestResults"),
        "close results":                         VSExecuteCommand("TestResults.CloseResults"),
        "disable":                               VSExecuteCommand("OtherContextMenus.TestListEditorContextMenu.Disable"),
        "enable":                                VSExecuteCommand("OtherContextMenus.TestListEditorContextMenu.Enable"),
        "removefrom test list":                  VSExecuteCommand("OtherContextMenus.TestListEditorContextMenu.TestListEditor.RemovefromTestList"),
        "removefrom all test lists":             VSExecuteCommand("OtherContextMenus.TestListEditorContextMenu.TestListEditor.RemovefromAllTestLists"),
        "new test":                              VSExecuteCommand("OtherContextMenus.ViewContextMenu.NewTest"),
        "new test list":                         VSExecuteCommand("OtherContextMenus.TestListEditorContextMenu.NewTestList"),
        "create performance session":            VSExecuteCommand("OtherContextMenus.ViewContextMenu.TestView.CreatePerformanceSession"),
        "view all results":                      VSExecuteCommand("TestResults.ViewAllResults"),
        "view resultsby result list":            VSExecuteCommand("TestResults.ViewResultsbyResultList"),
        "resume test run":                       VSExecuteCommand("OtherContextMenus.TestRunContextMenu.TestRun.ResumeTestRun"),
        "delete test run":                       VSExecuteCommand("OtherContextMenus.TestRunContextMenu.DeleteTestRun"),
        "connect to test run":                   VSExecuteCommand("OtherContextMenus.TestRunContextMenu.TestRun.ConnectToTestRun"),
        "disconnect from test run":              VSExecuteCommand("OtherContextMenus.TestRunContextMenu.TestRun.DisconnectFromTestRun"),
        "view results":                          VSExecuteCommand("OtherContextMenus.TestRunContextMenu.ViewResults"),
        "run checked tests":                     VSExecuteCommand("TestResults.RunCheckedTests"),
        "run all tests in test results":         VSExecuteCommand("TestResults.RunAllTestsInTestResults"),
        "run deployed checked tests":            VSExecuteCommand("TestResults.RunDeployedCheckedTests"),
        "debug selection":                       VSExecuteCommand("OtherContextMenus.ViewContextMenu.TestView.DebugSelection"),
        "debug checked tests":                   VSExecuteCommand("OtherContextMenus.TestListEditorContextMenu.TestListEditor.DebugCheckedTests"),
        "check all items":                       VSExecuteCommand("OtherContextMenus.TestResultsContextMenu.CheckAllItems"),
        "uncheck all items":                     VSExecuteCommand("OtherContextMenus.TestResultsContextMenu.UncheckAllItems"),
        "run tests in class":                    VSExecuteCommand("RunTestsInClass"),
        "debug tests in class":                  VSExecuteCommand("DebugTestsInClass"),
        "run tests in namespace":                VSExecuteCommand("RunTestsInNamespace"),
        "debug tests in namespace":              VSExecuteCommand("DebugTestsInNamespace"),
        "run tests in current context":          VSExecuteCommand("RunTestsInCurrentContext"),
        "run all tests in solution":             VSExecuteCommand("RunAllTestsInSolution"),
        "debug tests in current context":        VSExecuteCommand("DebugTestsInCurrentContext"),
        "debug all tests in solution":           VSExecuteCommand("DebugAllTestsInSolution"),
        "debug all tests in test results":       VSExecuteCommand("TestResults.DebugAllTestsInTestResults"),
        "debug deployed checked tests":          VSExecuteCommand("TestResults.DebugDeployedCheckedTests"),
        "create test casefrom test":             VSExecuteCommand("OtherContextMenus.TestListEditorContextMenu.CreateTestCasefromTest"),
        "associate testwith test case":          VSExecuteCommand("OtherContextMenus.TestListEditorContextMenu.AssociateTestwithTestCase"),
        "active loadand web test settings":      VSExecuteCommand("ProjectandSolutionContextMenus.Item.ActiveLoadandWebTestSettings"),
        "run selected load test":                VSExecuteCommand("LoadTest.RunSelectedLoadTest"),
        "debug selected load test":              VSExecuteCommand("LoadTest.DebugSelectedLoadTest"),
        "manage test controllers":               VSExecuteCommand("LoadTest.ManageTestControllers"),
        "test runs":                             VSExecuteCommand("LoadTest.TestRuns"),
        "in source":                             VSExecuteCommand("OtherContextMenus.ErrorList.SuppressMessage.InSource"),
        "in suppression file":                   VSExecuteCommand("OtherContextMenus.ErrorList.SuppressMessage.InSuppressionFile"),
        "configure code analysisfor solution":   VSExecuteCommand("Analyze.ConfigureCodeAnalysisforSolution"),
        "configure code analysisfor project":    VSExecuteCommand("Analyze.ConfigureCodeAnalysisforProject"),
        "collapse":                              VSExecuteCommand("Workflow.Collapse"),
        "create new theme":                      VSExecuteCommand("Workflow.CreateNewTheme"),
        "select custom theme":                   VSExecuteCommand("Workflow.SelectCustomTheme"),
        "show execution state":                  VSExecuteCommand("Workflow.ShowExecutionState"),
        #"400":                                   VSExecuteCommand("Workflow.400"),
        #"300":                                   VSExecuteCommand("Workflow.300"),
        "default view":                          VSExecuteCommand("OtherContextMenus.PageLayout.DefaultView"),
        "navigation tool":                       VSExecuteCommand("Workflow.NavigationTool"),
        "default":                               VSExecuteCommand("Workflow.Default"),
        "save as image":                         VSExecuteCommand("Workflow.SaveAsImage"),
        "copy to clipboard":                     VSExecuteCommand("Workflow.CopyToClipboard"),
        "instance":                              VSExecuteCommand("Workflow.Instance"),
        "branch":                                VSExecuteCommand("Workflow.Branch"),
        "go to parent":                          VSExecuteCommand("WorkflowDesigner.GoToParent"),
        "expand in place":                       VSExecuteCommand("WorkflowDesigner.ExpandInPlace"),
        "collapse all":                          VSExecuteCommand("WorkflowDesigner.CollapseAll"),
        "restore":                               VSExecuteCommand("WorkflowDesigner.Restore"),
        "navigate through designer":             VSExecuteCommand("WorkflowDesigner.NavigateThroughDesigner"),
        "show hide argument designer":           VSExecuteCommand("WorkflowDesigner.ShowHideArgumentDesigner"),
        "show hide variable designer":           VSExecuteCommand("WorkflowDesigner.ShowHideVariableDesigner"),
        "show hide imports designer":            VSExecuteCommand("WorkflowDesigner.ShowHideImportsDesigner"),
        "show hide overview map":                VSExecuteCommand("WorkflowDesigner.ShowHideOverviewMap"),
        "create variable":                       VSExecuteCommand("WorkflowDesigner.CreateVariable"),
        "create argument":                       VSExecuteCommand("WorkflowDesigner.CreateArgument"),
        "connect nodes":                         VSExecuteCommand("WorkflowDesigner.ConnectNodes"),
        "fit to screen":                         VSExecuteCommand("WorkflowDesigner.FitToScreen"),
        "reset zoom":                            VSExecuteCommand("WorkflowDesigner.ResetZoom"),
        "copy as image":                         VSExecuteCommand("WorkflowDesigner.CopyAsImage"),
        "move focus":                            VSExecuteCommand("WorkflowDesigner.MoveFocus"),
        "toggle selection":                      VSExecuteCommand("WorkflowDesigner.ToggleSelection"),
        "update service contract":               VSExecuteCommand("OtherContextMenus.UpdateServiceContract.UpdateServiceContract"),
        #"layout diagram":                        VSExecuteCommand("OtherContextMenus.ORDesignerContextMenu.LayoutDiagram"),
        #"configure behavior":                    VSExecuteCommand("OtherContextMenus.ORDesignerContextMenu.ConfigureBehavior"),
        #"hide methods pane":                     VSExecuteCommand("OtherContextMenus.ORDesignerContextMenu.HideMethodsPane"),
        #"edit association":                      VSExecuteCommand("OtherContextMenus.ORDesignerContextMenu.EditAssociation"),
        #"class":                                 VSExecuteCommand("OtherContextMenus.ORDesignerContextMenu.Add.Class"),
        #"property":                              VSExecuteCommand("OtherContextMenus.ORDesignerContextMenu.Add.Property"),
        #"association":                           VSExecuteCommand("OtherContextMenus.ORDesignerContextMenu.Add.Association"),
        #"inheritance":                           VSExecuteCommand("OtherContextMenus.ORDesignerContextMenu.Add.Inheritance"),
        #"125":                                   VSExecuteCommand("OtherContextMenus.ORDesignerContextMenu.Zoom.125"),
        #"66":                                    VSExecuteCommand("OtherContextMenus.ORDesignerContextMenu.Zoom.66"),
        #"33":                                    VSExecuteCommand("OtherContextMenus.ORDesignerContextMenu.Zoom.33"),
        #"fit":                                   VSExecuteCommand("OtherContextMenus.ORDesignerContextMenu.Zoom.Fit"),
        #"delete all":                            VSExecuteCommand("DSLTools.DeleteAll"),
        #"validate":                              VSExecuteCommand("DSLTools.Validate"),
        #"validate all":                          VSExecuteCommand("DSLTools.ValidateAll"),
        #"reroute":                               VSExecuteCommand("DSLTools.Reroute"),
        #"reset size":                            VSExecuteCommand("DSLTools.ResetSize"),
        #"reset location":                        VSExecuteCommand("DSLTools.ResetLocation"),
        "calculate code metrics":                VSExecuteCommand("ProjectandSolutionContextMenus.Project.CalculateCodeMetrics"),
        "cancel code metrics calculation":       VSExecuteCommand("ProjectandSolutionContextMenus.Solution.CancelCodeMetricsCalculation"),
        "goto source code":                      VSExecuteCommand("OtherContextMenus.CodeMetricsContextMenu.GotoSourceCode"),
        "open selectionin microsoft excel":      VSExecuteCommand("OtherContextMenus.CodeMetricsContextMenu.OpenSelectioninMicrosoftExcel"),
        "calculate code metricsfor selected projects":     VSExecuteCommand("Analyze.CalculateCodeMetricsforSelectedProjects"),
        "calculate code metricsfor solution":    VSExecuteCommand("Analyze.CalculateCodeMetricsforSolution"),
        "move to bottom":                        VSExecuteCommand("OtherContextMenus.Channels.MoveToBottom"),
        "view call sites":                       VSExecuteCommand("OtherContextMenus.CallStackReport.ViewCallSites"),
        "analyze":                               VSExecuteCommand("OtherContextMenus.ProcessTree.Analyze"),
        "show functions calling this function":  VSExecuteCommand("OtherContextMenus.Summary.ShowFunctionsCallingThisFunction"),
        "show functions calledby this function": VSExecuteCommand("OtherContextMenus.Summary.ShowFunctionsCalledbyThisFunction"),
        "set function":                          VSExecuteCommand("OtherContextMenus.Butterfly.SetFunction"),
        "show in function view":                 VSExecuteCommand("OtherContextMenus.Summary.ShowinFunctionView"),
        "set root":                              VSExecuteCommand("OtherContextMenus.Calltree.SetRoot"),
        "reset root":                            VSExecuteCommand("OtherContextMenus.Calltree.ResetRoot"),
        "expand selection":                      VSExecuteCommand("OtherContextMenus.Calltree.ExpandSelection"),
        "collapse selection":                    VSExecuteCommand("OtherContextMenus.Calltree.CollapseSelection"),
        "show in modules view":                  VSExecuteCommand("OtherContextMenus.Summary.ShowinModulesView"),
        "show in lifetime view":                 VSExecuteCommand("OtherContextMenus.Summary.ShowinLifetimeView"),
        "show in allocation view":               VSExecuteCommand("OtherContextMenus.Summary.ShowinAllocationView"),
        "reset columns to default":              VSExecuteCommand("OtherContextMenus.Module.ResetColumnstoDefault"),
        "export filter":                         VSExecuteCommand("Analyze.ExportFilter"),
        "import filter":                         VSExecuteCommand("Analyze.ImportFilter"),
        "execute filter":                        VSExecuteCommand("Analyze.ExecuteFilter"),
        "stop filter":                           VSExecuteCommand("Analyze.StopFilter"),
        "insert clause":                         VSExecuteCommand("OtherContextMenus.QueryControl.InsertClause"),
        "delete clauses":                        VSExecuteCommand("OtherContextMenus.QueryControl.DeleteClauses"),
        "group clauses":                         VSExecuteCommand("OtherContextMenus.QueryControl.GroupClauses"),
        "ungroup clauses":                       VSExecuteCommand("OtherContextMenus.QueryControl.UngroupClauses"),
        "show filter":                           VSExecuteCommand("Analyze.ShowFilter"),
        "show in line view":                     VSExecuteCommand("OtherContextMenus.Module.ShowinLineView"),
        "show in i p view":                      VSExecuteCommand("OtherContextMenus.Module.ShowinIPView"),
        "expand hot path":                       VSExecuteCommand("OtherContextMenus.Calltree.ExpandHotPath"),
        "add filter on timestamps":              VSExecuteCommand("OtherContextMenus.Marks.AddFilteronTimestamps"),
        "add filter on marks":                   VSExecuteCommand("OtherContextMenus.Marks.AddFilteronMarks"),
        #"showmatchingrowinbaselinefile":         VSExecuteCommand("OtherContextMenus.Diff.Showmatchingrowinbaselinefile"),
        #"showmatchingrowincomparisonfile":       VSExecuteCommand("OtherContextMenus.Diff.Showmatchingrowincomparisonfile"),
        "save analyzed report":                  VSExecuteCommand("Analyze.SaveAnalyzedReport"),
        "export report data":                    VSExecuteCommand("Analyze.ExportReportData"),
        "show hot path highlighting":            VSExecuteCommand("Analyze.ShowHotPathHighlighting"),
        "noise reduction options":               VSExecuteCommand("Analyze.NoiseReductionOptions"),
        "expand folded nodes":                   VSExecuteCommand("OtherContextMenus.Calltree.ExpandFoldedNodes"),
        "select stack":                          VSExecuteCommand("OtherContextMenus.Calltree.SelectStack"),
        "show function details":                 VSExecuteCommand("OtherContextMenus.Summary.ShowFunctionDetails"),
        "filter profiling databy selection":     VSExecuteCommand("OtherContextMenus.CounterChart.FilterProfilingDatabySelection"),
        "add filteron processes threads":        VSExecuteCommand("OtherContextMenus.ProcessThreads.AddFilteronProcessesThreads"),
        "split screen horizontally":             VSExecuteCommand("Analyze.SplitScreenHorizontally"),
        "split screen vertically":               VSExecuteCommand("Analyze.SplitScreenVertically"),
        "show thread contention details":        VSExecuteCommand("OtherContextMenus.ProcessThreads.ShowThreadContentionDetails"),
        "show contention resource details":      VSExecuteCommand("OtherContextMenus.Contention.ShowContentionResourceDetails"),
        "view database command text":            VSExecuteCommand("OtherContextMenus.Boundary.ViewDatabaseCommandText"),
        "summary":                               VSExecuteCommand("OtherContextMenus.Views.Summary"),
        "functions":                             VSExecuteCommand("OtherContextMenus.Views.Functions"),
        "lines":                                 VSExecuteCommand("OtherContextMenus.Views.Lines"),
        "i ps":                                  VSExecuteCommand("OtherContextMenus.Views.IPs"),
        "caller callee":                         VSExecuteCommand("OtherContextMenus.Views.CallerCallee"),
        "call tree":                             VSExecuteCommand("OtherContextMenus.Views.CallTree"),
        "allocation":                            VSExecuteCommand("OtherContextMenus.Views.Allocation"),
        "lifetime":                              VSExecuteCommand("OtherContextMenus.Views.Lifetime"),
        "contention":                            VSExecuteCommand("OtherContextMenus.Views.Contention"),
        "marks":                                 VSExecuteCommand("OtherContextMenus.Views.Marks"),
        "resource details":                      VSExecuteCommand("OtherContextMenus.Views.ResourceDetails"),
        "thread details":                        VSExecuteCommand("OtherContextMenus.Views.ThreadDetails"),
        "interactions":                          VSExecuteCommand("OtherContextMenus.Views.Interactions"),
        "launch performance wizard":             VSExecuteCommand("Analyze.LaunchPerformanceWizard"),
        "new performance session":               VSExecuteCommand("Analyze.NewPerformanceSession"),
        "start profiling":                       VSExecuteCommand("OtherContextMenus.Session.StartProfiling"),
        "attach detach":                         VSExecuteCommand("OtherContextMenus.Session.AttachDetach"),
        "add target binary":                     VSExecuteCommand("OtherContextMenus.Binaries.AddTargetBinary"),
        "add target project":                    VSExecuteCommand("OtherContextMenus.Binaries.AddTargetProject"),
        "add report":                            VSExecuteCommand("OtherContextMenus.Reports.AddReport"),
        "setas launch":                          VSExecuteCommand("OtherContextMenus.Binary.SetasLaunch"),
        "setas current session":                 VSExecuteCommand("OtherContextMenus.Session.SetasCurrentSession"),
        "collectsamples":                        VSExecuteCommand("OtherContextMenus.Binary.Collectsamples"),
        "start with profiling paused":           VSExecuteCommand("Analyze.StartWithProfilingPaused"),
        "compare performance reports":           VSExecuteCommand("Analyze.ComparePerformanceReports"),
        "suppress messages":                     VSExecuteCommand("OtherContextMenus.ErrorList.SuppressMessages"),
        "transform all":                         VSExecuteCommand("Build.TextTemplating.TransformAll"),
        "transform all templates":               VSExecuteCommand("TextTransformation.TransformAllTemplates"),
        "add new derived table":                 VSExecuteCommand("QueryDesigner.AddNewDerivedTable"),
        "join mode":                             VSExecuteCommand("QueryDesigner.JoinMode"),
        "cancel retrieving data":                VSExecuteCommand("QueryDesigner.CancelRetrievingData"),
        "fulltext index":                        VSExecuteCommand("TableDesigner.FulltextIndex"),
        "x m l indexes":                         VSExecuteCommand("TableDesigner.XMLIndexes"),
        "spatial indexes":                       VSExecuteCommand("TableDesigner.SpatialIndexes"),
        #"misc icon1":                            VSExecuteCommand("Image.MiscIcon1"),
        #"misc icon2":                            VSExecuteCommand("Image.MiscIcon2"),
        #"misc icon3":                            VSExecuteCommand("Image.MiscIcon3"),
        #"misc icon4":                            VSExecuteCommand("Image.MiscIcon4"),
        #"misc icon5":                            VSExecuteCommand("Image.MiscIcon5"),
        #"misc icon6":                            VSExecuteCommand("Image.MiscIcon6"),
        #"misc icon7":                            VSExecuteCommand("Image.MiscIcon7"),
        #"misc icon8":                            VSExecuteCommand("Image.MiscIcon8"),
        #"misc icon9":                            VSExecuteCommand("Image.MiscIcon9"),
        #"more icons":                            VSExecuteCommand("Image.MoreIcons"),
        #"misc cursor1":                          VSExecuteCommand("Image.MiscCursor1"),
        #"misc cursor2":                          VSExecuteCommand("Image.MiscCursor2"),
        #"misc cursor3":                          VSExecuteCommand("Image.MiscCursor3"),
        #"misc cursor4":                          VSExecuteCommand("Image.MiscCursor4"),
        #"misc cursor5":                          VSExecuteCommand("Image.MiscCursor5"),
        #"misc cursor6":                          VSExecuteCommand("Image.MiscCursor6"),
        #"misc cursor7":                          VSExecuteCommand("Image.MiscCursor7"),
        #"misc cursor8":                          VSExecuteCommand("Image.MiscCursor8"),
        #"misc cursor9":                          VSExecuteCommand("Image.MiscCursor9"),
        #"more cursors":                          VSExecuteCommand("Image.MoreCursors"),
        "add new test":                          VSExecuteCommand("Project.AddNewTest"),
        "add unit test":                         VSExecuteCommand("Project.AddUnitTest"),
        "add load test":                         VSExecuteCommand("Project.AddLoadTest"),
        "add web performance test":              VSExecuteCommand("Project.AddWebPerformanceTest"),
        "add coded u i test":                    VSExecuteCommand("Project.AddCodedUITest"),
        "add ordered test":                      VSExecuteCommand("Project.AddOrderedTest"),
        "add generic test":                      VSExecuteCommand("Project.AddGenericTest"),
        "install community controls":            VSExecuteCommand("Tools.InstallCommunityControls"),
        "edit data setwith designer":            VSExecuteCommand("OtherContextMenus.DataSources.EditDataSetwithDesigner"),
        "configure data sourcewith wizard":      VSExecuteCommand("OtherContextMenus.DataSources.ConfigureDataSourcewithWizard"),
        "remove object":                         VSExecuteCommand("OtherContextMenus.DataSources.RemoveObject"),
        "expand collapse base type list":        VSExecuteCommand("Edit.ExpandCollapseBaseTypeList"),
        "navigate to lollipop":                  VSExecuteCommand("Edit.NavigateToLollipop"),
        "show type":                             VSExecuteCommand("ClassDiagram.ShowType"),
        "hide line":                             VSExecuteCommand("ClassDiagram.HideLine"),
        "adjust shapes width":                   VSExecuteCommand("ClassDiagram.AdjustShapesWidth"),
        "display name":                          VSExecuteCommand("ClassDiagram.DisplayName"),
        "display name and type":                 VSExecuteCommand("ClassDiagram.DisplayNameandType"),
        "display full signature":                VSExecuteCommand("ClassDiagram.DisplayFullSignature"),
        "add enum":                              VSExecuteCommand("ClassDiagram.AddEnum"),
        "add abstract class":                    VSExecuteCommand("ClassDiagram.AddAbstractClass"),
        "add struct":                            VSExecuteCommand("ClassDiagram.AddStruct"),
        "add delegate":                          VSExecuteCommand("ClassDiagram.AddDelegate"),
        "add comment":                           VSExecuteCommand("ClassDiagram.AddComment"),
        "override members":                      VSExecuteCommand("Edit.OverrideMembers"),
        "relink shape with code":                VSExecuteCommand("ClassDiagram.RelinkShapewithCode"),
        "export diagramas image":                VSExecuteCommand("ClassDiagram.ExportDiagramasImage"),
        #"zoom400":                               VSExecuteCommand("ClassDiagram.Zoom400"),
        #"zoom300":                               VSExecuteCommand("ClassDiagram.Zoom300"),
        #"zoom200":                               VSExecuteCommand("ClassDiagram.Zoom200"),
        #"zoom150":                               VSExecuteCommand("ClassDiagram.Zoom150"),
        #"zoom125":                               VSExecuteCommand("ClassDiagram.Zoom125"),
        #"zoom100":                               VSExecuteCommand("ClassDiagram.Zoom100"),
        #"zoom75":                                VSExecuteCommand("ClassDiagram.Zoom75"),
        #"zoom66":                                VSExecuteCommand("ClassDiagram.Zoom66"),
        #"zoom50":                                VSExecuteCommand("ClassDiagram.Zoom50"),
        #"zoom33":                                VSExecuteCommand("ClassDiagram.Zoom33"),
        #"zoom25":                                VSExecuteCommand("ClassDiagram.Zoom25"),
        #"zoom10":                                VSExecuteCommand("ClassDiagram.Zoom10"),
        "zoom to fit":                           VSExecuteCommand("ClassDiagram.ZoomToFit"),
        "toggle lollipop expand collapse":       VSExecuteCommand("ClassDiagram.ToggleLollipopExpandCollapse"),
        "show interface":                        VSExecuteCommand("ClassDiagram.ShowInterface"),
        "add constructor":                       VSExecuteCommand("ClassDiagram.AddConstructor"),
        "add destructor":                        VSExecuteCommand("ClassDiagram.AddDestructor"),
        "add constant":                          VSExecuteCommand("ClassDiagram.AddConstant"),
        "hide compartment":                      VSExecuteCommand("ClassDiagram.HideCompartment"),
        "show all members":                      VSExecuteCommand("ClassDiagram.ShowAllMembers"),
        "unhide":                                VSExecuteCommand("ClassDiagram.Unhide"),
        "add field":                             VSExecuteCommand("ClassDiagram.AddField"),
        "add parameter":                         VSExecuteCommand("ClassDiagram.AddParameter"),
        "copy image":                            VSExecuteCommand("Edit.CopyImage"),
        "group by kind":                         VSExecuteCommand("ClassDiagram.GroupbyKind"),
        "group by access":                       VSExecuteCommand("ClassDiagram.GroupbyAccess"),
        "sort alphabetically":                   VSExecuteCommand("ClassDiagram.SortAlphabetically"),
        "show base type":                        VSExecuteCommand("ClassDiagram.ShowBaseType"),
        "show as association":                   VSExecuteCommand("ClassDiagram.ShowasAssociation"),
        "show as collection association":        VSExecuteCommand("ClassDiagram.ShowasCollectionAssociation"),
        "show derived types":                    VSExecuteCommand("ClassDiagram.ShowDerivedTypes"),
        "show as field":                         VSExecuteCommand("ClassDiagram.ShowasField"),
        "hide inheritance line":                 VSExecuteCommand("ClassDiagram.HideInheritanceLine"),
        "navigate to methods":                   VSExecuteCommand("ClassDiagram.NavigatetoMethods"),
        "navigate to properties":                VSExecuteCommand("ClassDiagram.NavigatetoProperties"),
        "navigate to fields":                    VSExecuteCommand("ClassDiagram.NavigatetoFields"),
        "navigate to events":                    VSExecuteCommand("ClassDiagram.NavigatetoEvents"),
        "new method":                            VSExecuteCommand("ClassDiagram.NewMethod"),
        "new property":                          VSExecuteCommand("ClassDiagram.NewProperty"),
        "new field":                             VSExecuteCommand("ClassDiagram.NewField"),
        "new event":                             VSExecuteCommand("ClassDiagram.NewEvent"),
        "new constructor":                       VSExecuteCommand("ClassDiagram.NewConstructor"),
        "new destructor":                        VSExecuteCommand("ClassDiagram.NewDestructor"),
        "new constant":                          VSExecuteCommand("ClassDiagram.NewConstant"),
        "last selected run settings file":       VSExecuteCommand("TestExplorer.LastSelectedRunSettingsFile"),
        "second last selected run settings file":     VSExecuteCommand("TestExplorer.SecondLastSelectedRunSettingsFile"),
        "third last selected run settings file": VSExecuteCommand("TestExplorer.ThirdLastSelectedRunSettingsFile"),
        "select run settings file":              VSExecuteCommand("TestExplorer.SelectRunSettingsFile"),
        "show test explorer":                    VSExecuteCommand("TestExplorer.ShowTestExplorer"),
        "profile test":                          VSExecuteCommand("TestExplorer.ProfileTest"),
        "run selected tests":                    VSExecuteCommand("TestExplorer.RunSelectedTests"),
        "run all tests":                         VSExecuteCommand("TestExplorer.RunAllTests"),
        "run failed tests":                      VSExecuteCommand("TestExplorer.RunFailedTests"),
        "run not run tests":                     VSExecuteCommand("TestExplorer.RunNotRunTests"),
        "run passed tests":                      VSExecuteCommand("TestExplorer.RunPassedTests"),
        "repeat last run":                       VSExecuteCommand("TestExplorer.RepeatLastRun"),
        "debug selected tests":                  VSExecuteCommand("TestExplorer.DebugSelectedTests"),
        "debug all tests":                       VSExecuteCommand("TestExplorer.DebugAllTests"),
        "open playlist file":                    VSExecuteCommand("TestExplorer.OpenPlaylistFile"),
        "all tests playlist":                    VSExecuteCommand("TestExplorer.AllTestsPlaylist"),
        "select playlist":                       VSExecuteCommand("TestExplorer.SelectPlaylist"),
        "toggle run tests after build":          VSExecuteCommand("TestExplorer.ToggleRunTestsAfterBuild"),
        "execution platform x86":                VSExecuteCommand("TestExplorer.ExecutionPlatformX86"),
        "execution platform x64":                VSExecuteCommand("TestExplorer.ExecutionPlatformX64"),
        "cancel tests":                          VSExecuteCommand("TestExplorer.CancelTests"),
        "remove from playlist":                  VSExecuteCommand("TestExplorer.RemoveFromPlaylist"),
        "next group by":                         VSExecuteCommand("TestExplorer.NextGroupBy"),
        "add to playlist":                       VSExecuteCommand("TestExplorer.AddToPlaylist"),
        "add to new playlist":                   VSExecuteCommand("TestExplorer.AddToNewPlaylist"),
        "copy details":                          VSExecuteCommand("TestExplorer.CopyDetails"),
        "run all tests in context":              VSExecuteCommand("TestExplorer.RunAllTestsInContext"),
        "debug all tests in context":            VSExecuteCommand("TestExplorer.DebugAllTestsInContext"),
        "interaction operand before":            VSExecuteCommand("ArchitectureDesigner.Sequence.Add.InteractionOperandBefore"),
        "interaction operand after":             VSExecuteCommand("ArchitectureDesigner.Sequence.Add.InteractionOperandAfter"),
        "lifeline":                              VSExecuteCommand("ArchitectureDesigner.Sequence.Add.Lifeline"),
        "synchronous message":                   VSExecuteCommand("ArchitectureDesigner.Sequence.Add.SynchronousMessage"),
        "asynchronous message":                  VSExecuteCommand("ArchitectureDesigner.Sequence.Add.AsynchronousMessage"),
        "create message":                        VSExecuteCommand("ArchitectureDesigner.Sequence.Add.CreateMessage"),
        "comment":                               VSExecuteCommand("ArchitectureDesigner.Sequence.Add.Comment"),
        "comment link":                          VSExecuteCommand("ArchitectureDesigner.Sequence.Add.CommentLink"),
        "interaction use":                       VSExecuteCommand("ArchitectureDesigner.Sequence.Add.InteractionUse"),
        "alt combined fragment":                 VSExecuteCommand("ArchitectureDesigner.Sequence.SurroundWith.AltCombinedFragment"),
        "assert combined fragment":              VSExecuteCommand("ArchitectureDesigner.Sequence.SurroundWith.AssertCombinedFragment"),
        "break combined fragment":               VSExecuteCommand("ArchitectureDesigner.Sequence.SurroundWith.BreakCombinedFragment"),
        "consider combined fragment":            VSExecuteCommand("ArchitectureDesigner.Sequence.SurroundWith.ConsiderCombinedFragment"),
        "critical combined fragment":            VSExecuteCommand("ArchitectureDesigner.Sequence.SurroundWith.CriticalCombinedFragment"),
        "ignore combined fragment":              VSExecuteCommand("ArchitectureDesigner.Sequence.SurroundWith.IgnoreCombinedFragment"),
        "loop combined fragment":                VSExecuteCommand("ArchitectureDesigner.Sequence.SurroundWith.LoopCombinedFragment"),
        "negative combined fragment":            VSExecuteCommand("ArchitectureDesigner.Sequence.SurroundWith.NegativeCombinedFragment"),
        "option combined fragment":              VSExecuteCommand("ArchitectureDesigner.Sequence.SurroundWith.OptionCombinedFragment"),
        "parallel combined fragment":            VSExecuteCommand("ArchitectureDesigner.Sequence.SurroundWith.ParallelCombinedFragment"),
        "strict sequencing combined fragment":   VSExecuteCommand("ArchitectureDesigner.Sequence.SurroundWith.StrictSequencingCombinedFragment"),
        "weak sequencing combined fragment":     VSExecuteCommand("ArchitectureDesigner.Sequence.SurroundWith.WeakSequencingCombinedFragment"),
        "create lifeline":                       VSExecuteCommand("ArchitectureDesigner.LogicalClass.CreateLifeline"),
        "goto":                                  VSExecuteCommand("ArchitectureDesigner.Sequence.Goto"),
        "seq create logical class interaction":  VSExecuteCommand("ArchitectureDesigner.Sequence.SeqCreateLogicalClassInteraction"),
        "create logical interface interaction":  VSExecuteCommand("ArchitectureDesigner.Sequence.CreateLogicalInterfaceInteraction"),
        "create logical method interaction":     VSExecuteCommand("ArchitectureDesigner.Sequence.CreateLogicalMethodInteraction"),
        "create new sequence interaction":       VSExecuteCommand("ArchitectureDesigner.Sequence.CreateNewSequenceInteraction"),
        "go to sequence interaction":            VSExecuteCommand("ArchitectureDesigner.Sequence.GoToSequenceInteraction"),
        "link interaction use to s d interaction":     VSExecuteCommand("ArchitectureDesigner.Sequence.LinkInteractionUseToSDInteraction"),
        "move message to diagram":               VSExecuteCommand("ArchitectureDesigner.Sequence.MoveMessageToDiagram"),
        "navigate to progression node":          VSExecuteCommand("ArchitectureDesigner.Sequence.NavigateToProgressionNode"),
        "generate sequence from message":        VSExecuteCommand("ArchitectureDesigner.Sequence.GenerateSequenceFromMessage"),
        "expand outgoing lifeline on lost message":     VSExecuteCommand("ArchitectureDesigner.Sequence.ExpandOutgoingLifelineOnLostMessage"),
        "navigate to code":                      VSExecuteCommand("ArchitectureDesigner.Sequence.NavigateToCode"),
        "goto object":                           VSExecuteCommand("Sequence.GotoObject"),
        "line":                                  VSExecuteCommand("ArchitectureDesigner.ArchitectTools.Add.Line"),
        "ellipse":                               VSExecuteCommand("ArchitectureDesigner.ArchitectTools.Add.Ellipse"),
        "rectangle":                             VSExecuteCommand("ArchitectureDesigner.ArchitectTools.Add.Rectangle"),
        "rearrange layout":                      VSExecuteCommand("ArchitectureDesigner.RearrangeLayout"),
        "validate architecture":                 VSExecuteCommand("ArchitectureDesigner.Layer.ValidateArchitecture"),
        "paste reference":                       VSExecuteCommand("ArchitectureDesigner.PasteReference"),
        "generate dependencies":                 VSExecuteCommand("ArchitectureDesigner.Layer.GenerateDependencies"),
        "delete from model":                     VSExecuteCommand("Edit.DeleteFromModel"),
        "hide work items icon":                  VSExecuteCommand("ArchitectureDesigner.HideWorkItemsIcon"),
        "group":                                 VSExecuteCommand("ArchitectureDesigner.Layer.Group"),
        "view links":                            VSExecuteCommand("ArchitectureDesigner.Layer.ViewLinks"),
        "model store dump store":                VSExecuteCommand("Debug.ModelStoreDumpStore"),
        "link to work item":                     VSExecuteCommand("ArchitectureDesigner.LinkToWorkItem"),
        "view work items":                       VSExecuteCommand("ArchitectureDesigner.ViewWorkItems"),
        "remove work items":                     VSExecuteCommand("ArchitectureDesigner.RemoveWorkItems"),
        "create work item":                      VSExecuteCommand("ArchitectureDesigner.CreateWorkItem"),
        "new diagram":                           VSExecuteCommand("Architecture.NewDiagram"),
        "validate u m l model":                  VSExecuteCommand("Architecture.ValidateUMLModel"),
        "source":                                VSExecuteCommand("OtherContextMenus.SequenceDesignerContext.Reconnect.Source"),
        "target":                                VSExecuteCommand("OtherContextMenus.SequenceDesignerContext.Reconnect.Target"),
        "actor":                                 VSExecuteCommand("ArchitectureDesigner.UseCase.Add.Actor"),
        "use case":                              VSExecuteCommand("ArchitectureDesigner.UseCase.Add.UseCase"),
        "subsystem":                             VSExecuteCommand("ArchitectureDesigner.UseCase.Add.Subsystem"),
        "artifact":                              VSExecuteCommand("ArchitectureDesigner.UseCase.Add.Artifact"),
        "dependency":                            VSExecuteCommand("ArchitectureDesigner.UseCase.Add.Dependency"),
        "include":                               VSExecuteCommand("ArchitectureDesigner.UseCase.Add.Include"),
        "extend":                                VSExecuteCommand("ArchitectureDesigner.UseCase.Add.Extend"),
        "generalization":                        VSExecuteCommand("ArchitectureDesigner.UseCase.Add.Generalization"),
        "attribute":                             VSExecuteCommand("ArchitectureDesigner.LogicalClass.Add.Attribute"),
        "operation":                             VSExecuteCommand("ArchitectureDesigner.LogicalClass.Add.Operation"),
        "literal":                               VSExecuteCommand("ArchitectureDesigner.LogicalClass.Add.Literal"),
        "interface":                             VSExecuteCommand("ArchitectureDesigner.LogicalClass.Add.Interface"),
        "enumeration":                           VSExecuteCommand("ArchitectureDesigner.LogicalClass.Add.Enumeration"),
        "package":                               VSExecuteCommand("ArchitectureDesigner.LogicalClass.Add.Package"),
        "aggregation":                           VSExecuteCommand("ArchitectureDesigner.LogicalClass.Add.Aggregation"),
        "composition":                           VSExecuteCommand("ArchitectureDesigner.LogicalClass.Add.Composition"),
        "connector":                             VSExecuteCommand("ArchitectureDesigner.LogicalClass.Add.Connector"),
        "go to interface definition":            VSExecuteCommand("ArchitectureDesigner.LogicalClass.GoToInterfaceDefinition"),
        "show as lollipop":                      VSExecuteCommand("ArchitectureDesigner.LogicalClass.ShowAsLollipop"),
        "show as line":                          VSExecuteCommand("ArchitectureDesigner.LogicalClass.ShowAsLine"),
        "override operations":                   VSExecuteCommand("ArchitectureDesigner.LogicalClass.SmartTag.OverrideOperations"),
        "override all operations":               VSExecuteCommand("ArchitectureDesigner.LogicalClass.SmartTag.OverrideAllOperations"),
        "override abstract operations":          VSExecuteCommand("ArchitectureDesigner.LogicalClass.OverrideAbstractOperations"),
        "expand collapse":                       VSExecuteCommand("ArchitectureDesigner.LogicalClass.ExpandCollapse"),
        "show qualified name":                   VSExecuteCommand("ArchitectureDesigner.LogicalClass.ShowQualifiedName"),
        "hide qualified name":                   VSExecuteCommand("ArchitectureDesigner.LogicalClass.HideQualifiedName"),
        "show full signature":                   VSExecuteCommand("ArchitectureDesigner.LogicalClass.ShowFullSignature"),
        "hide full signature":                   VSExecuteCommand("ArchitectureDesigner.LogicalClass.HideFullSignature"),
        "initial node":                          VSExecuteCommand("ArchitectureDesigner.Activity.Add.InitialNode"),
        "activity final node":                   VSExecuteCommand("ArchitectureDesigner.Activity.Add.ActivityFinalNode"),
        "action":                                VSExecuteCommand("ArchitectureDesigner.Activity.Add.Action"),
        "object node":                           VSExecuteCommand("ArchitectureDesigner.Activity.Add.ObjectNode"),
        "decision node":                         VSExecuteCommand("ArchitectureDesigner.Activity.Add.DecisionNode"),
        "merge node":                            VSExecuteCommand("ArchitectureDesigner.Activity.Add.MergeNode"),
        "fork node":                             VSExecuteCommand("ArchitectureDesigner.Activity.Add.ForkNode"),
        "join node":                             VSExecuteCommand("ArchitectureDesigner.Activity.Add.JoinNode"),
        "send signal action":                    VSExecuteCommand("ArchitectureDesigner.Activity.Add.SendSignalAction"),
        "accept event action":                   VSExecuteCommand("ArchitectureDesigner.Activity.Add.AcceptEventAction"),
        "call behavior action":                  VSExecuteCommand("ArchitectureDesigner.Activity.Add.CallBehaviorAction"),
        "call operation action":                 VSExecuteCommand("ArchitectureDesigner.Activity.Add.CallOperationAction"),
        "input pin":                             VSExecuteCommand("ArchitectureDesigner.Activity.Add.InputPin"),
        "output pin":                            VSExecuteCommand("ArchitectureDesigner.Activity.Add.OutputPin"),
        "activity parameter node":               VSExecuteCommand("ArchitectureDesigner.Activity.Add.ActivityParameterNode"),
        "component":                             VSExecuteCommand("ArchitectureDesigner.Component.Add.Component"),
        "delegation":                            VSExecuteCommand("ArchitectureDesigner.Component.Add.Delegation"),
        "provided interface":                    VSExecuteCommand("ArchitectureDesigner.Component.Add.ProvidedInterface"),
        "required interface":                    VSExecuteCommand("ArchitectureDesigner.Component.Add.RequiredInterface"),
        "assembly":                              VSExecuteCommand("ArchitectureDesigner.Component.Add.Assembly"),
        "suppress errors":                       VSExecuteCommand("ArchitectureDesigner.Layer.SuppressErrors"),
        "stop suppressing errors":               VSExecuteCommand("ArchitectureDesigner.Layer.StopSuppressingErrors"),
        "show suppressed errors":                VSExecuteCommand("ArchitectureDesigner.Layer.ShowSuppressedErrors"),
        "hide suppressed errors":                VSExecuteCommand("ArchitectureDesigner.Layer.HideSuppressedErrors"),
        "code":                                  VSExecuteCommand("Layer.GoTo.Code"),
        "layer diagram":                         VSExecuteCommand("ArchitectureDesigner.Layer.GoTo.LayerDiagram"),
        "layer":                                 VSExecuteCommand("ArchitectureDesigner.Layer.Add.Layer"),
        "bidirectional dependency":              VSExecuteCommand("ArchitectureDesigner.Layer.Add.BidirectionalDependency"),
        "export d g m l":                        VSExecuteCommand("ArchitectureExplorer.ExportDGML"),
        "new graph":                             VSExecuteCommand("ArchitectureExplorer.NewGraph"),
        "merge graph":                           VSExecuteCommand("ArchitectureExplorer.MergeGraph"),
        "by assembly":                           VSExecuteCommand("Architecture.ByAssembly"),
        "by namespace":                          VSExecuteCommand("Architecture.ByNamespace"),
        "by class":                              VSExecuteCommand("Architecture.ByClass"),
        "for solution":                          VSExecuteCommand("Architecture.ForSolution"),
        "for include file":                      VSExecuteCommand("Architecture.ForIncludeFile"),
        "refetch children":                      VSExecuteCommand("ArchitectureContextMenus.DirectedGraphContextMenu.Advanced.Group.RefetchChildren"),
        "use coded u i test builder":            VSExecuteCommand("Test.UseCodedUITestBuilder"),
        "use existing action recording":         VSExecuteCommand("Test.UseExistingActionRecording"),
        "edit with coded u i test builder":      VSExecuteCommand("ProjectandSolutionContextMenus.Item.EditWithCodedUITestBuilder"),
        "splitintoanewmethod":                   VSExecuteCommand("OtherContextMenus.UITestEditorContextMenu.Splitintoanewmethod"),
        "movecode":                              VSExecuteCommand("OtherContextMenus.UITestEditorContextMenu.Movecode"),
        "insert delay before":                   VSExecuteCommand("OtherContextMenus.UITestEditorContextMenu.InsertDelayBefore"),
        "locatethe u i control":                 VSExecuteCommand("OtherContextMenus.UITestEditorContextMenu.LocatetheUIControl"),
        "locate all":                            VSExecuteCommand("OtherContextMenus.UITestEditorContextMenu.LocateAll"),
        "show overview panel":                   VSExecuteCommand("ShowOverviewPanel"),
        "show counters panel":                   VSExecuteCommand("ShowCountersPanel"),
        "add graph":                             VSExecuteCommand("AddGraph"),
        "restore default views":                 VSExecuteCommand("RestoreDefaultViews"),
        "add analysis notes":                    VSExecuteCommand("AddAnalysisNotes"),
        "open comparison result":                VSExecuteCommand("OpenComparisonResult"),
        "show differences":                      VSExecuteCommand("ShowDifferences"),
        "show zoom controls":                    VSExecuteCommand("ShowZoomControls"),
        "synchronize horizontal zoom controls":  VSExecuteCommand("SynchronizeHorizontalZoomControls"),
        "create excel report":                   VSExecuteCommand("Test.CreateExcelReport"),
        "view profiler performance report":      VSExecuteCommand("Test.ViewProfilerPerformanceReport"),
        "view attachment":                       VSExecuteCommand("Test.ViewAttachment"),
        "show legend":                           VSExecuteCommand("ShowLegend"),
        "graph data for entire run":             VSExecuteCommand("GraphDataForEntireRun"),
        "graph only recent data":                VSExecuteCommand("GraphOnlyRecentData"),
        "show horizontal grid line":             VSExecuteCommand("ShowHorizontalGridLine"),
        "show min max lines":                    VSExecuteCommand("ShowMinMaxLines"),
        "show threshold violations on graph":    VSExecuteCommand("ShowThresholdViolationsOnGraph"),
        "export to excel":                       VSExecuteCommand("ExportToExcel"),
        "export to text":                        VSExecuteCommand("ExportToText"),
        "one panel":                             VSExecuteCommand("OnePanel"),
        "two horizontal panels":                 VSExecuteCommand("TwoHorizontalPanels"),
        "two vertical panels":                   VSExecuteCommand("TwoVerticalPanels"),
        "three horizontal panels":               VSExecuteCommand("ThreeHorizontalPanels"),
        "three vertical panels":                 VSExecuteCommand("ThreeVerticalPanels"),
        "three panels weighted left":            VSExecuteCommand("ThreePanelsWeightedLeft"),
        "three panels weighted right":           VSExecuteCommand("ThreePanelsWeightedRight"),
        "three panels weighted top":             VSExecuteCommand("ThreePanelsWeightedTop"),
        "three panels weighted bottom":          VSExecuteCommand("ThreePanelsWeightedBottom"),
        "four horizontal panels":                VSExecuteCommand("FourHorizontalPanels"),
        "four vertical panels":                  VSExecuteCommand("FourVerticalPanels"),
        "four panels grid":                      VSExecuteCommand("FourPanelsGrid"),
        "jump to counter pane":                  VSExecuteCommand("LoadTest.JumpToCounterPane"),
        "new style":                             VSExecuteCommand("Format.NewStyle"),
        "attach style sheet":                    VSExecuteCommand("Format.AttachStyleSheet"),
        #"rowsor columns":                        VSExecuteCommand("Table.RowsorColumns"),
        #"columntothe left":                      VSExecuteCommand("Table.ColumntotheLeft"),
        #"columntothe right":                     VSExecuteCommand("Table.ColumntotheRight"),
        #"row above":                             VSExecuteCommand("Table.RowAbove"),
        #"row below":                             VSExecuteCommand("Table.RowBelow"),
        #"celltothe left":                        VSExecuteCommand("Table.CelltotheLeft"),
        #"celltothe right":                       VSExecuteCommand("Table.CelltotheRight"),
        #"caption":                               VSExecuteCommand("Table.Caption"),
        #"delete table":                          VSExecuteCommand("Table.DeleteTable"),
        #"delete columns":                        VSExecuteCommand("Table.DeleteColumns"),
        #"delete rows":                           VSExecuteCommand("Table.DeleteRows"),
        #"delete cells":                          VSExecuteCommand("Table.DeleteCells"),
        #"table":                                 VSExecuteCommand("Table.Table"),
        #"row":                                   VSExecuteCommand("Table.Row"),
        #"cell":                                  VSExecuteCommand("Table.Cell"),
        #"split cells":                           VSExecuteCommand("Table.SplitCells"),
        #"split table":                           VSExecuteCommand("Table.SplitTable"),
        #"distribute rows evenly":                VSExecuteCommand("Table.DistributeRowsEvenly"),
        #"distribute columns evenly":             VSExecuteCommand("Table.DistributeColumnsEvenly"),
        #"autofitto contents":                    VSExecuteCommand("Table.AutofittoContents"),
        #"insert table":                          VSExecuteCommand("Table.InsertTable"),
        #"absolute":                              VSExecuteCommand("Format.Absolute"),
        #"relative":                              VSExecuteCommand("Format.Relative"),
        #"styles":                                VSExecuteCommand("Format.Styles"),
        #"font":                                  VSExecuteCommand("Format.Font"),
        #"manage style sheet links":              VSExecuteCommand("Format.ManageStyleSheetLinks"),
        #"paragraph":                             VSExecuteCommand("Format.Paragraph"),
        #"bulletsand numbering":                  VSExecuteCommand("Format.BulletsandNumbering"),
        #"bordersand shading":                    VSExecuteCommand("Format.BordersandShading"),
        #"shared borders":                        VSExecuteCommand("Format.SharedBorders"),
        #"position":                              VSExecuteCommand("Format.Position"),
        #"format auto shape":                     VSExecuteCommand("Format.FormatAutoShape"),
        #"remove formatting":                     VSExecuteCommand("Format.RemoveFormatting"),
        #"show ruler":                            VSExecuteCommand("View.ShowRuler"),
        #"snap to grid":                          VSExecuteCommand("View.SnapToGrid"),
        #"set origin from selection":             VSExecuteCommand("View.SetOriginFromSelection"),
        #"reset origin":                          VSExecuteCommand("View.ResetOrigin"),
        #"show image":                            VSExecuteCommand("View.ShowImage"),
        #"show":                                  VSExecuteCommand("View.Show"),
        #"block selection":                       VSExecuteCommand("View.BlockSelection"),
        #"visible borders":                       VSExecuteCommand("View.VisibleBorders"),
        #"empty containers":                      VSExecuteCommand("View.EmptyContainers"),
        #"marginsand padding":                    VSExecuteCommand("View.MarginsandPadding"),
        #"c s s displaynone elements":            VSExecuteCommand("View.CSSDisplaynoneElements"),
        #"c s s visibilityhidden elements":       VSExecuteCommand("View.CSSVisibilityhiddenElements"),
        #"n e t nonvisual controls":              VSExecuteCommand("View.ASP.NETNonvisualControls"),
        #"template region labels":                VSExecuteCommand("View.TemplateRegionLabels"),
        "tag marks":                             VSExecuteCommand("View.TagMarks"),
        "paragraph marks":                       VSExecuteCommand("View.ParagraphMarks"),
        "line breaks":                           VSExecuteCommand("View.LineBreaks"),
        "spaces":                                VSExecuteCommand("View.Spaces"),
        "comments":                              VSExecuteCommand("View.Comments"),
        "script blocks":                         VSExecuteCommand("View.ScriptBlocks"),
        "positioned absolute":                   VSExecuteCommand("View.PositionedAbsolute"),
        "aligned elements":                      VSExecuteCommand("View.AlignedElements"),
        "hidden from fields":                    VSExecuteCommand("View.HiddenFromFields"),
        "end template editing":                  VSExecuteCommand("OtherContextMenus.Context.EndTemplateEditing"),
        "extract to user control":               VSExecuteCommand("OtherContextMenus.ASPXContext.ExtracttoUserControl"),
        "c s s properties":                      VSExecuteCommand("View.CSSProperties"),
        "manage styles":                         VSExecuteCommand("View.ManageStyles"),
        "apply styles":                          VSExecuteCommand("View.ApplyStyles"),
        "package visualizer":                    VSExecuteCommand("Tools.PackageVisualizer"),
        "package manager settings":              VSExecuteCommand("Tools.PackageManagerSettings"),
        "enable nu get package restore":         VSExecuteCommand("Project.EnableNuGetPackageRestore"),
        "toggle legend":                         VSExecuteCommand("ToggleLegend"),
        "save as x p s":                         VSExecuteCommand("SaveAsXPS"),
        "legend":                                VSExecuteCommand("Legend"),
        "left to right":                         VSExecuteCommand("LeftToRight"),
        "right to left":                         VSExecuteCommand("RightToLeft"),
        "top to bottom":                         VSExecuteCommand("TopToBottom"),
        "bottom to top":                         VSExecuteCommand("BottomToTop"),
        "quick clusters":                        VSExecuteCommand("QuickClusters"),
        "automatically layoutwhen debugging":    VSExecuteCommand("AutomaticallyLayoutwhenDebugging"),
        "incremental layout":                    VSExecuteCommand("IncrementalLayout"),
        #"category1":                             VSExecuteCommand("ArchitectureContextMenus.DirectedGraphContextMenu.OtherFlagColors.Category1"),
        #"category2":                             VSExecuteCommand("ArchitectureContextMenus.DirectedGraphContextMenu.OtherFlagColors.Category2"),
        #"category3":                             VSExecuteCommand("ArchitectureContextMenus.DirectedGraphContextMenu.OtherFlagColors.Category3"),
        #"category4":                             VSExecuteCommand("ArchitectureContextMenus.DirectedGraphContextMenu.OtherFlagColors.Category4"),
        #"category5":                             VSExecuteCommand("ArchitectureContextMenus.DirectedGraphContextMenu.OtherFlagColors.Category5"),
        #"category6":                             VSExecuteCommand("ArchitectureContextMenus.DirectedGraphContextMenu.OtherFlagColors.Category6"),
        #"category7":                             VSExecuteCommand("ArchitectureContextMenus.DirectedGraphContextMenu.OtherFlagColors.Category7"),
        #"category8":                             VSExecuteCommand("ArchitectureContextMenus.DirectedGraphContextMenu.OtherFlagColors.Category8"),
        #"category9":                             VSExecuteCommand("ArchitectureContextMenus.DirectedGraphContextMenu.OtherFlagColors.Category9"),
        #"category10":                            VSExecuteCommand("ArchitectureContextMenus.DirectedGraphContextMenu.OtherFlagColors.Category10"),
        #"1":                                     VSExecuteCommand("DirectedGraph.NeighborhoodDistance.1"),
        #"2":                                     VSExecuteCommand("DirectedGraph.NeighborhoodDistance.2"),
        #"3":                                     VSExecuteCommand("DirectedGraph.NeighborhoodDistance.3"),
        #"4":                                     VSExecuteCommand("DirectedGraph.NeighborhoodDistance.4"),
        #"5":                                     VSExecuteCommand("DirectedGraph.NeighborhoodDistance.5"),
        #"6":                                     VSExecuteCommand("DirectedGraph.NeighborhoodDistance.6"),
        #"7":                                     VSExecuteCommand("DirectedGraph.NeighborhoodDistance.7"),
        "toggle neighborhood browse mode":       VSExecuteCommand("DirectedGraph.ToggleNeighborhoodBrowseMode"),
        "all":                                   VSExecuteCommand("DirectedGraph.NeighborhoodDistance.All"),
        "incoming dependencies":                 VSExecuteCommand("ArchitectureContextMenus.DirectedGraphContextMenu.Advanced.Select.IncomingDependencies"),
        "outgoing dependencies":                 VSExecuteCommand("ArchitectureContextMenus.DirectedGraphContextMenu.Advanced.Select.OutgoingDependencies"),
        "both dependencies":                     VSExecuteCommand("ArchitectureContextMenus.DirectedGraphContextMenu.Advanced.Select.BothDependencies"),
        "connected subgraph":                    VSExecuteCommand("ArchitectureContextMenus.DirectedGraphContextMenu.Advanced.Select.ConnectedSubgraph"),
        "all matching objects":                  VSExecuteCommand("ArchitectureContextMenus.DirectedGraphContextMenu.Advanced.Select.AllMatchingObjects"),
        "children":                              VSExecuteCommand("ArchitectureContextMenus.DirectedGraphContextMenu.Advanced.Select.Children"),
        "hide selected":                         VSExecuteCommand("ArchitectureContextMenus.DirectedGraphContextMenu.Advanced.Select.HideSelected"),
        "hide unselected":                       VSExecuteCommand("ArchitectureContextMenus.DirectedGraphContextMenu.Advanced.Select.HideUnselected"),
        "unhide children":                       VSExecuteCommand("ArchitectureContextMenus.DirectedGraphContextMenu.Advanced.Select.UnhideChildren"),
        "unhide all":                            VSExecuteCommand("ArchitectureContextMenus.DirectedGraphContextMenu.Advanced.Select.UnhideAll"),
        "toggle grouping":                       VSExecuteCommand("ArchitectureContextMenus.DirectedGraphContextMenu.Advanced.Group.ToggleGrouping"),
        "show cross group links":                VSExecuteCommand("ShowCrossGroupLinks"),
        "hide cross group links":                VSExecuteCommand("HideCrossGroupLinks"),
        "toggle cross group links":              VSExecuteCommand("ToggleCrossGroupLinks"),
        "toggle all links":                      VSExecuteCommand("ToggleAllLinks"),
        "bundle cross group links":              VSExecuteCommand("BundleCrossGroupLinks"),
        "show method containing cursor on code maps":     VSExecuteCommand("ShowMethodContainingCursorOnCodeMaps"),
        #"goto2":                                 VSExecuteCommand("ArchitectureContextMenus.DirectedGraphContextMenu.GoToReference.Goto2"),
        #"goto3":                                 VSExecuteCommand("ArchitectureContextMenus.DirectedGraphContextMenu.GoToReference.Goto3"),
        #"goto4":                                 VSExecuteCommand("ArchitectureContextMenus.DirectedGraphContextMenu.GoToReference.Goto4"),
        #"goto5":                                 VSExecuteCommand("ArchitectureContextMenus.DirectedGraphContextMenu.GoToReference.Goto5"),
        #"goto6":                                 VSExecuteCommand("ArchitectureContextMenus.DirectedGraphContextMenu.GoToReference.Goto6"),
        #"goto7":                                 VSExecuteCommand("ArchitectureContextMenus.DirectedGraphContextMenu.GoToReference.Goto7"),
        #"goto8":                                 VSExecuteCommand("ArchitectureContextMenus.DirectedGraphContextMenu.GoToReference.Goto8"),
        #"goto9":                                 VSExecuteCommand("ArchitectureContextMenus.DirectedGraphContextMenu.GoToReference.Goto9"),
        #"goto10":                                VSExecuteCommand("ArchitectureContextMenus.DirectedGraphContextMenu.GoToReference.Goto10"),
        #"goto1":                                 VSExecuteCommand("ArchitectureContextMenus.DirectedGraphContextMenu.GoToReference.Goto1"),
        "invert selection":                      VSExecuteCommand("ArchitectureContextMenus.DirectedGraphContextMenu.Advanced.Select.InvertSelection"),
        "add parent group":                      VSExecuteCommand("ArchitectureContextMenus.DirectedGraphContextMenu.Advanced.Group.AddParentGroup"),
        "remove group":                          VSExecuteCommand("ArchitectureContextMenus.DirectedGraphContextMenu.Advanced.Group.RemoveGroup"),
        "remove from parent":                    VSExecuteCommand("ArchitectureContextMenus.DirectedGraphContextMenu.Advanced.Group.RemoveFromParent"),
        "convert to leaf":                       VSExecuteCommand("ArchitectureContextMenus.DirectedGraphContextMenu.Advanced.Group.ConvertToLeaf"),
        "convert to group":                      VSExecuteCommand("ArchitectureContextMenus.DirectedGraphContextMenu.Advanced.Group.ConvertToGroup"),
        "circular analyzer":                     VSExecuteCommand("CircularAnalyzer"),
        "find hubs analyzer":                    VSExecuteCommand("FindHubsAnalyzer"),
        "unreferenced nodes analyzer":           VSExecuteCommand("UnreferencedNodesAnalyzer"),
        "copy styles":                           VSExecuteCommand("ArchitectureContextMenus.DirectedGraphLegend.CopyStyles"),
        "save template":                         VSExecuteCommand("ArchitectureContextMenus.DirectedGraphLegend.SaveTemplate"),
        "flag for follow up":                    VSExecuteCommand("ArchitectureContextMenus.DirectedGraphContextMenu.FlagforFollowUp"),
        "new comment":                           VSExecuteCommand("ArchitectureContextMenus.DirectedGraphContextMenu.NewComment"),
        "d g m l":                               VSExecuteCommand("View.DGML"),
        "namespace":                             VSExecuteCommand("ArchitectureContextMenus.DirectedGraphContextMenu.Advanced.Add.Namespace"),
        #"struct":                                VSExecuteCommand("ArchitectureContextMenus.DirectedGraphContextMenu.Advanced.Add.Struct"),
        #"enum":                                  VSExecuteCommand("ArchitectureContextMenus.DirectedGraphContextMenu.Advanced.Add.Enum"),
        #"delegate":                              VSExecuteCommand("ArchitectureContextMenus.DirectedGraphContextMenu.Advanced.Add.Delegate"),
        #"method":                                VSExecuteCommand("ArchitectureContextMenus.DirectedGraphContextMenu.Advanced.Add.Method"),
        #"event":                                 VSExecuteCommand("ArchitectureContextMenus.DirectedGraphContextMenu.Advanced.Add.Event"),
        #"field":                                 VSExecuteCommand("ArchitectureContextMenus.DirectedGraphContextMenu.Advanced.Add.Field"),
        "add node":                              VSExecuteCommand("ArchitectureContextMenus.DirectedGraphContextMenu.Advanced.Add.AddNode"),
        "show containing type namespace":        VSExecuteCommand("EditorContextMenus.CodeWindow.ShowRelatedItemsonCodeMap.ShowContainingTypeNamespace"),
        "show call stackon code map":            VSExecuteCommand("Debug.ShowCallStackonCodeMap"),
        "generate code":                         VSExecuteCommand("OtherContextMenus.ModelExplorerContextMenu.GenerateCode"),
        "configure default code generation settings":     VSExecuteCommand("Architecture.ConfigureDefaultCodeGenerationSettings"),
        "import x m i":                          VSExecuteCommand("Architecture.ImportXMI"),
        "analyze solutionfor code clones":       VSExecuteCommand("Analyze.AnalyzeSolutionforCodeClones"),
        "code clone analysis results":           VSExecuteCommand("Analyze.CodeCloneAnalysisResults"),
        "find matching clonesin solution":       VSExecuteCommand("EditorContextMenus.CodeWindow.FindMatchingClonesinSolution"),
        "startwith current project":             VSExecuteCommand("Analyze.StartwithCurrentProject"),
        "launch new process":                    VSExecuteCommand("Analyze.LaunchNewProcess"),
        "open trace":                            VSExecuteCommand("Analyze.OpenTrace"),
        "add s d kto project":                   VSExecuteCommand("Analyze.AddSDKtoProject"),
        "advanced settings":                     VSExecuteCommand("Analyze.AdvancedSettings"),
        "hide all except selection":             VSExecuteCommand("OtherContextMenus.Channels.HideAllExceptSelection"),
        "add fakes assembly":                    VSExecuteCommand("ProjectandSolutionContextMenus.ReferenceItem.AddFakesAssembly"),
        #"s s d t new schema comparison":         VSExecuteCommand("SQL.SSDTNewSchemaComparison"),
        #"s s d t schema compare write updates":  VSExecuteCommand("SQL.SSDTSchemaCompareWriteUpdates"),
        #"s s d t schema compare stop":           VSExecuteCommand("SQL.SSDTSchemaCompareStop"),
        #"s s d t schema compare options":        VSExecuteCommand("SQL.SSDTSchemaCompareOptions"),
        #"s s d t schema compare next change":    VSExecuteCommand("SQL.SSDTSchemaCompareNextChange"),
        #"s s d t schema compare previous change":     VSExecuteCommand("SQL.SSDTSchemaComparePreviousChange"),
        #"s s d t schema compare select source schema":     VSExecuteCommand("SQL.SSDTSchemaCompareSelectSourceSchema"),
        #"s s d t schema compare select target schema":     VSExecuteCommand("SQL.SSDTSchemaCompareSelectTargetSchema"),
        #"s s d t schema compare filter equal objects":     VSExecuteCommand("SQL.SSDTSchemaCompareFilterEqualObjects"),
        #"s s d t schema compare filter not supported deploy":     VSExecuteCommand("SQL.SSDTSchemaCompareFilterNotSupportedDeploy"),
        #"s s d t schema compare filter":         VSExecuteCommand("SSDTSchemaCompareFilter"),
        #"s s d t schema compare compare":        VSExecuteCommand("SQL.SSDTSchemaCompareCompare"),
        #"s s d t schema compare generate script":     VSExecuteCommand("SQL.SSDTSchemaCompareGenerateScript"),
        #"s s d t schema compare group by action":     VSExecuteCommand("SQL.SSDTSchemaCompareGroupByAction"),
        #"s s d t schema compare group by schema":     VSExecuteCommand("SQL.SSDTSchemaCompareGroupBySchema"),
        #"s s d t schema compare group by type":  VSExecuteCommand("SQL.SSDTSchemaCompareGroupByType"),
        #"s s d t schema compare group by":       VSExecuteCommand("SSDTSchemaCompareGroupBy"),
        #"s s d t schema compare unskip":         VSExecuteCommand("OtherContextMenus.Availablewhenthereisanobjectselected.SSDTSchemaCompareUnskip"),
        #"s s d t schema compare skip":           VSExecuteCommand("OtherContextMenus.Availablewhenthereisanobjectselected.SSDTSchemaCompareSkip"),
        #"s s d t schema compare unskip all":     VSExecuteCommand("OtherContextMenus.Availablewhenthereisatitleselected.SSDTSchemaCompareUnskipAll"),
        #"s s d t schema compare skip all":       VSExecuteCommand("OtherContextMenus.Availablewhenthereisatitleselected.SSDTSchemaCompareSkipAll"),
        #"s s d t clear event monitor":           VSExecuteCommand("SSDTClearEventMonitor"),
        #"s s d t dump r d t":                    VSExecuteCommand("SSDTDumpRDT"),
        #"s e properties":                        VSExecuteCommand("OtherContextMenus.SQLServerObjectExplorerContextMenu.SEProperties"),
        #"s e add new view":                      VSExecuteCommand("OtherContextMenus.SQLServerObjectExplorerContextMenu.SEAddNewView"),
        #"s e add new synonym":                   VSExecuteCommand("OtherContextMenus.SQLServerObjectExplorerContextMenu.SEAddNewSynonym"),
        #"s e add new stored procedure":          VSExecuteCommand("OtherContextMenus.SQLServerObjectExplorerContextMenu.SEAddNewStoredProcedure"),
        #"s e add new database trigger":          VSExecuteCommand("OtherContextMenus.SQLServerObjectExplorerContextMenu.SEAddNewDatabaseTrigger"),
        #"s e add new assembly":                  VSExecuteCommand("OtherContextMenus.SQLServerObjectExplorerContextMenu.SEAddNewAssembly"),
        #"s e add new sql user defined clr type":     VSExecuteCommand("OtherContextMenus.SQLServerObjectExplorerContextMenu.SEAddNewSqlUserDefinedClrType"),
        #"s e add new type":                      VSExecuteCommand("OtherContextMenus.SQLServerObjectExplorerContextMenu.SEAddNewType"),
        #"s e add new user defined table type":   VSExecuteCommand("OtherContextMenus.SQLServerObjectExplorerContextMenu.SEAddNewUserDefinedTableType"),
        #"s e add new x m l schema collection":   VSExecuteCommand("OtherContextMenus.SQLServerObjectExplorerContextMenu.SEAddNewXMLSchemaCollection"),
        #"s e add new aggregate":                 VSExecuteCommand("OtherContextMenus.SQLServerObjectExplorerContextMenu.SEAddNewAggregate"),
        #"s e add new rule":                      VSExecuteCommand("OtherContextMenus.SQLServerObjectExplorerContextMenu.SEAddNewRule"),
        #"s e add new default":                   VSExecuteCommand("OtherContextMenus.SQLServerObjectExplorerContextMenu.SEAddNewDefault"),
        #"s e add new message type":              VSExecuteCommand("OtherContextMenus.SQLServerObjectExplorerContextMenu.SEAddNewMessageType"),
        #"s e add new contract":                  VSExecuteCommand("OtherContextMenus.SQLServerObjectExplorerContextMenu.SEAddNewContract"),
        #"s e add new queue":                     VSExecuteCommand("OtherContextMenus.SQLServerObjectExplorerContextMenu.SEAddNewQueue"),
        #"s e add new service":                   VSExecuteCommand("OtherContextMenus.SQLServerObjectExplorerContextMenu.SEAddNewService"),
        #"s e add new route":                     VSExecuteCommand("OtherContextMenus.SQLServerObjectExplorerContextMenu.SEAddNewRoute"),
        #"s e add new event notification":        VSExecuteCommand("OtherContextMenus.SQLServerObjectExplorerContextMenu.SEAddNewEventNotification"),
        #"s e add new remote service binding":    VSExecuteCommand("OtherContextMenus.SQLServerObjectExplorerContextMenu.SEAddNewRemoteServiceBinding"),
        #"s e add new broker priority":           VSExecuteCommand("OtherContextMenus.SQLServerObjectExplorerContextMenu.SEAddNewBrokerPriority"),
        #"s e add new user":                      VSExecuteCommand("OtherContextMenus.SQLServerObjectExplorerContextMenu.SEAddNewUser"),
        #"s e add new application role":          VSExecuteCommand("OtherContextMenus.SQLServerObjectExplorerContextMenu.SEAddNewApplicationRole"),
        #"s e add new database role":             VSExecuteCommand("OtherContextMenus.SQLServerObjectExplorerContextMenu.SEAddNewDatabaseRole"),
        #"s e add new schema":                    VSExecuteCommand("OtherContextMenus.SQLServerObjectExplorerContextMenu.SEAddNewSchema"),
        #"s e add new asymmetric key":            VSExecuteCommand("OtherContextMenus.SQLServerObjectExplorerContextMenu.SEAddNewAsymmetricKey"),
        #"s e add new certificate":               VSExecuteCommand("OtherContextMenus.SQLServerObjectExplorerContextMenu.SEAddNewCertificate"),
        #"s e add new symmetric key":             VSExecuteCommand("OtherContextMenus.SQLServerObjectExplorerContextMenu.SEAddNewSymmetricKey"),
        #"s e add new master key":                VSExecuteCommand("OtherContextMenus.SQLServerObjectExplorerContextMenu.SEAddNewMasterKey"),
        #"s e add new signature":                 VSExecuteCommand("OtherContextMenus.SQLServerObjectExplorerContextMenu.SEAddNewSignature"),
        #"s e add new filegroup":                 VSExecuteCommand("OtherContextMenus.SQLServerObjectExplorerContextMenu.SEAddNewFilegroup"),
        #"s e add new log file":                  VSExecuteCommand("OtherContextMenus.SQLServerObjectExplorerContextMenu.SEAddNewLogFile"),
        #"s e add new file":                      VSExecuteCommand("OtherContextMenus.SQLServerObjectExplorerContextMenu.SEAddNewFile"),
        #"s e add new partition function":        VSExecuteCommand("OtherContextMenus.SQLServerObjectExplorerContextMenu.SEAddNewPartitionFunction"),
        #"s e add new partition scheme":          VSExecuteCommand("OtherContextMenus.SQLServerObjectExplorerContextMenu.SEAddNewPartitionScheme"),
        #"s e add new table":                     VSExecuteCommand("OtherContextMenus.SQLServerObjectExplorerContextMenu.SEAddNewTable"),
        #"s e add new cryptographic provider":    VSExecuteCommand("OtherContextMenus.SQLServerObjectExplorerContextMenu.SEAddNewCryptographicProvider"),
        #"s e add new server audit":              VSExecuteCommand("OtherContextMenus.SQLServerObjectExplorerContextMenu.SEAddNewServerAudit"),
        #"s e add new server audit specification":     VSExecuteCommand("OtherContextMenus.SQLServerObjectExplorerContextMenu.SEAddNewServerAuditSpecification"),
        #"s e add new event session":             VSExecuteCommand("OtherContextMenus.SQLServerObjectExplorerContextMenu.SEAddNewEventSession"),
        #"s e add new tcp end point":             VSExecuteCommand("OtherContextMenus.SQLServerObjectExplorerContextMenu.SEAddNewTcpEndPoint"),
        #"s e add new http end point":            VSExecuteCommand("OtherContextMenus.SQLServerObjectExplorerContextMenu.SEAddNewHttpEndPoint"),
        #"s e add new linked server":             VSExecuteCommand("OtherContextMenus.SQLServerObjectExplorerContextMenu.SEAddNewLinkedServer"),
        #"s e add new server trigger":            VSExecuteCommand("OtherContextMenus.SQLServerObjectExplorerContextMenu.SEAddNewServerTrigger"),
        #"s e add new custom error message":      VSExecuteCommand("OtherContextMenus.SQLServerObjectExplorerContextMenu.SEAddNewCustomErrorMessage"),
        #"s e schema compare":                    VSExecuteCommand("OtherContextMenus.SQLServerObjectExplorerContextMenu.SESchemaCompare"),
        #"s e sql clr debugging":                 VSExecuteCommand("OtherContextMenus.SQLServerObjectExplorerContextMenu.SESqlClrDebugging"),
        #"s e add new trigger":                   VSExecuteCommand("OtherContextMenus.SQLServerObjectExplorerContextMenu.SEAddNewTrigger"),
        #"s e execute function":                  VSExecuteCommand("OtherContextMenus.SQLServerObjectExplorerContextMenu.SEExecuteFunction"),
        #"s e debug function":                    VSExecuteCommand("OtherContextMenus.SQLServerObjectExplorerContextMenu.SEDebugFunction"),
        #"s s d t static code analysis run code analysis":     VSExecuteCommand("ClassViewContextMenus.ClassViewProject.SSDTStaticCodeAnalysisRunCodeAnalysis"),
        "query results stop":                    VSExecuteCommand("SQL.QueryResultsStop"),
        "query results refresh":                 VSExecuteCommand("SQL.QueryResultsRefresh"),
        "query results new row":                 VSExecuteCommand("SQL.QueryResultsNewRow"),
        "script to file":                        VSExecuteCommand("SQL.ScriptToFile"),
        "script to editor":                      VSExecuteCommand("SQL.ScriptToEditor"),
        "script to project":                     VSExecuteCommand("OtherContextMenus.QueryResultsContextMenu.ScriptToProject"),
        #"s s d t schema compare connect to schemas":     VSExecuteCommand("OtherContextMenus.EmptySchemaCompareContextMenu.SSDTSchemaCompareConnectToSchemas"),
        #"s s d t append extended property":      VSExecuteCommand("SSDTAppendExtendedProperty"),
        #"s s d t append signature":              VSExecuteCommand("SSDTAppendSignature"),
        "rename server database references":     VSExecuteCommand("ProjectandSolutionContextMenus.Project.Refactor.RenameServerDatabaseReferences"),
        #"view in t s q l editor from solution explorer":     VSExecuteCommand("ProjectandSolutionContextMenus.Item.ViewInTSQLEditorFromSolutionExplorer"),
        #"view in table designer from solution explorer":     VSExecuteCommand("ProjectandSolutionContextMenus.Item.ViewInTableDesignerFromSolutionExplorer"),
        #"s s d t launch schema compare for project snapshot":     VSExecuteCommand("ProjectandSolutionContextMenus.Item.SSDTLaunchSchemaCompareForProjectSnapshot"),
        #"set as debug startup script":           VSExecuteCommand("ProjectandSolutionContextMenus.Item.SetAsDebugStartupScript"),
        #"sql server object explorer add sql server":     VSExecuteCommand("SQL.SqlServerObjectExplorerAddSqlServer"),
        #"sql server object explorer new query on toolbar":     VSExecuteCommand("SqlServerObjectExplorerNewQueryOnToolbar"),
        #"s e add sql server on context menu":    VSExecuteCommand("OtherContextMenus.SQLServerObjectExplorerContextMenu.SEAddSqlServerOnContextMenu"),
        #"sql server object explorer detach":     VSExecuteCommand("OtherContextMenus.SQLServerObjectExplorerContextMenu.SqlServerObjectExplorerDetach"),
        #"s s d t static code analysis run":      VSExecuteCommand("SQL.SSDTStaticCodeAnalysisRun"),
        #"s s d t static code analysis configure":     VSExecuteCommand("SQL.SSDTStaticCodeAnalysisConfigure"),
        #"s s d t static code analysis suppress messages":     VSExecuteCommand("OtherContextMenus.ErrorList.SSDTStaticCodeAnalysisSuppressMessages"),
        #"clear completed items":                 VSExecuteCommand("ClearCompletedItems"),
        #"copywith headers":                      VSExecuteCommand("OtherContextMenus.SQLResultsGridTabContext.CopywithHeaders"),
        #"show execution plan x m l":             VSExecuteCommand("OtherContextMenus.ExecutionPlanContext.ShowExecutionPlanXML"),
        #"missing index details":                 VSExecuteCommand("OtherContextMenus.ExecutionPlanContext.MissingIndexDetails"),
        #"save execution plan as":                VSExecuteCommand("OtherContextMenus.ExecutionPlanContext.SaveExecutionPlanAs"),
        #"custom zoom":                           VSExecuteCommand("OtherContextMenus.ExecutionPlanContext.CustomZoom"),
        "zoom to fit":                           VSExecuteCommand("OtherContextMenus.ExecutionPlanContext.ZoomtoFit"),
        "sql object explorer refresh all roots": VSExecuteCommand("SqlObjectExplorerRefreshAllRoots"),
        "show sql server object explorer":       VSExecuteCommand("ShowSqlServerObjectExplorer"),
        #"remove primary key":                    VSExecuteCommand("SQLTableDesigner.RemovePrimaryKey"),
        "add new check constraint":              VSExecuteCommand("OtherContextMenus.SQLTableDesignerContextView.AddNewCheckConstraint"),
        "add new foreign key":                   VSExecuteCommand("OtherContextMenus.SQLTableDesignerContextView.AddNewForeignKey"),
        "add new primary key":                   VSExecuteCommand("OtherContextMenus.SQLTableDesignerContextView.AddNew.AddNewPrimaryKey"),
        "add new unique key":                    VSExecuteCommand("OtherContextMenus.SQLTableDesignerContextView.AddNew.AddNewUniqueKey"),
        "add new index":                         VSExecuteCommand("OtherContextMenus.SQLTableDesignerContextView.AddNew.AddNewIndex"),
        "add new full text index":               VSExecuteCommand("OtherContextMenus.SQLTableDesignerContextView.AddNew.AddNewFullTextIndex"),
        "add new spatial index":                 VSExecuteCommand("OtherContextMenus.SQLTableDesignerContextView.AddNew.AddNewSpatialIndex"),
        "add new x m l index":                   VSExecuteCommand("OtherContextMenus.SQLTableDesignerContextView.AddNew.AddNewXMLIndex"),
        "add new column store index":            VSExecuteCommand("OtherContextMenus.SQLTableDesignerContextView.AddNew.AddNewColumnStoreIndex"),
        "switch to t s q l pane":                VSExecuteCommand("OtherContextMenus.SQLTableDesignerColumns.SwitchToTSQLPane"),
        "switch to design pane":                 VSExecuteCommand("EditorContextMenus.CodeWindow.SwitchToDesignPane"),
        "edit local file":                       VSExecuteCommand("EditorContextMenus.CodeWindow.EditLocalFile"),
        "fit all":                               VSExecuteCommand("Design.FitAll"),
        "fit selection":                         VSExecuteCommand("Design.FitSelection"),
        "actual size":                           VSExecuteCommand("Design.ActualSize"),
        "show handles":                          VSExecuteCommand("Design.ShowHandles"),
        "show selection preview":                VSExecuteCommand("Design.ShowSelectionPreview"),
        "show active container":                 VSExecuteCommand("Design.ShowActiveContainer"),
        "show alignment adorners":               VSExecuteCommand("Design.ShowAlignmentAdorners"),
        "show object boundaries":                VSExecuteCommand("Design.ShowObjectBoundaries"),
        "edit text":                             VSExecuteCommand("Format.EditText"),
        "margin":                                VSExecuteCommand("Format.Margin"),
        "alignments":                            VSExecuteCommand("Format.Alignments"),
        "horizontal":                            VSExecuteCommand("Format.Horizontal"),
        "vertical":                              VSExecuteCommand("Format.Vertical"),
        "lock selection":                        VSExecuteCommand("Design.LockSelection"),
        "lock all":                              VSExecuteCommand("Design.LockAll"),
        "unlock all":                            VSExecuteCommand("Design.UnlockAll"),
        "show selection":                        VSExecuteCommand("Design.ShowSelection"),
        #"hide all":                              VSExecuteCommand("Design.HideAll"),
        #"width":                                 VSExecuteCommand("Format.Width"),
        #"height":                                VSExecuteCommand("Format.Height"),
        #"size":                                  VSExecuteCommand("Format.Size"),
        "side by side view":                     VSExecuteCommand("Diff.SideBySideView"),
        "inline view":                           VSExecuteCommand("Diff.InlineView"),
        "left only view":                        VSExecuteCommand("Diff.LeftOnlyView"),
        "right only view":                       VSExecuteCommand("Diff.RightOnlyView"),
        "previous difference":                   VSExecuteCommand("Diff.PreviousDifference"),
        "next difference":                       VSExecuteCommand("Diff.NextDifference"),
        "ignore trim whitespace":                VSExecuteCommand("Diff.IgnoreTrimWhitespace"),
        "synchronize view toggle":               VSExecuteCommand("Diff.SynchronizeViewToggle"),
        "copy all":                              VSExecuteCommand("OtherContextMenus.GraphicsDiagnosticsContextMenu.CopyAll"),
        "event list":                            VSExecuteCommand("Debug.Graphics.EventList"),
        "pixel history":                         VSExecuteCommand("Debug.Graphics.PixelHistory"),
        "pipeline stages":                       VSExecuteCommand("Debug.Graphics.PipelineStages"),
        "object table":                          VSExecuteCommand("Debug.Graphics.ObjectTable"),
        "event call stack":                      VSExecuteCommand("Debug.Graphics.EventCallStack"),
        "direct x control panel":                VSExecuteCommand("Debug.Graphics.DirectXControlPanel"),
        #"graphics zoom in":                      VSExecuteCommand("Debug.GraphicsZoomIn"),
        #"graphics zoom out":                     VSExecuteCommand("Debug.GraphicsZoomOut"),
        #"graphics reset zoom":                   VSExecuteCommand("Debug.GraphicsResetZoom"),
        #"graphics move pixel selection up":      VSExecuteCommand("Debug.GraphicsMovePixelSelectionUp"),
        #"graphics move pixel selection down":    VSExecuteCommand("Debug.GraphicsMovePixelSelectionDown"),
        #"graphics move pixel selection left":    VSExecuteCommand("Debug.GraphicsMovePixelSelectionLeft"),
        #"graphics move pixel selection right":   VSExecuteCommand("Debug.GraphicsMovePixelSelectionRight"),
        "launch application":                    VSExecuteCommand("Debug.Graphics.LaunchApplication"),
        "start diagnostics":                     VSExecuteCommand("Debug.Graphics.StartDiagnostics"),
        "capture frame":                         VSExecuteCommand("Debug.Graphics.CaptureFrame"),
        "update page inspector":                 VSExecuteCommand("PageInspector.UpdatePageInspector"),
        "minimize":                              VSExecuteCommand("PageInspector.Minimize"),
        "stopnavigating":                        VSExecuteCommand("PageInspector.Stopnavigating"),
        "goto project home":                     VSExecuteCommand("PageInspector.GotoProjectHome"),
        "inspect element":                       VSExecuteCommand("PageInspector.InspectElement"),
        "publish selected files":                VSExecuteCommand("Project.Publishselectedfiles"),
        "preview changes":                       VSExecuteCommand("Project.Previewchanges"),
        "replace selected files from server":    VSExecuteCommand("Project.Replaceselectedfilesfromserver"),
        "analyze selected code coverage":        VSExecuteCommand("TestExplorer.AnalyzeSelectedCodeCoverage"),
        "analyze code coverage":                 VSExecuteCommand("TestExplorer.AnalyzeCodeCoverage"),
        "navigate to event handler":             VSExecuteCommand("EditorContextMenus.XAMLEditor.NavigatetoEventHandler"),
        "device window":                         VSExecuteCommand("Design.DeviceWindow"),
        "import from file":                      VSExecuteCommand("OtherContextMenus.ManagedResourcesEditorContextMenu.ImportFromFile"),
        "export to file":                        VSExecuteCommand("OtherContextMenus.ManagedResourcesEditorContextMenu.ExportToFile"),
        "play":                                  VSExecuteCommand("OtherContextMenus.ManagedResourcesEditorContextMenu.Play"),
        #"add p n g image":                       VSExecuteCommand("Resources.AddPNGImage"),
        #"add b m p image":                       VSExecuteCommand("Resources.AddBMPImage"),
        #"add g i f image":                       VSExecuteCommand("Resources.AddGIFImage"),
        #"add j p e g image":                     VSExecuteCommand("Resources.AddJPEGImage"),
        #"add t i f f image":                     VSExecuteCommand("Resources.AddTIFFImage"),
        #"add":                                   VSExecuteCommand("Resources.Add"),
        #"add existing file":                     VSExecuteCommand("Resources.AddExistingFile"),
        #"add new string":                        VSExecuteCommand("Resources.AddNewString"),
        #"add new icon":                          VSExecuteCommand("Resources.AddNewIcon"),
        #"add new text file":                     VSExecuteCommand("Resources.AddNewTextFile"),
        #"strings":                               VSExecuteCommand("Resources.Strings"),
        #"images":                                VSExecuteCommand("Resources.Images"),
        #"icons":                                 VSExecuteCommand("Resources.Icons"),
        #"audio":                                 VSExecuteCommand("Resources.Audio"),
        #"files":                                 VSExecuteCommand("Resources.Files"),
        #"other":                                 VSExecuteCommand("Resources.Other"),
        #"view in list":                          VSExecuteCommand("Resources.ViewInList"),
        #"view details":                          VSExecuteCommand("Resources.ViewDetails"),
        #"view as thumbnails":                    VSExecuteCommand("Resources.ViewAsThumbnails"),
        "add extension":                         VSExecuteCommand("OtherContextMenus.MyExtensibility.AddExtension"),
        "remove extension":                      VSExecuteCommand("OtherContextMenus.MyExtensibility.RemoveExtension"),
        "servicesin solution":                   VSExecuteCommand("OtherContextMenus.DiscoverServiceReferences.ServicesinSolution"),
        "convertto enum":                        VSExecuteCommand("OtherContextMenus.MicrosoftDataEntityDesignContext.ConverttoEnum"),
        "movetonew diagram":                     VSExecuteCommand("OtherContextMenus.MicrosoftDataEntityDesignContext.MovetonewDiagram"),
        "include related":                       VSExecuteCommand("OtherContextMenus.MicrosoftDataEntityDesignContext.IncludeRelated"),
        "entity":                                VSExecuteCommand("OtherContextMenus.MicrosoftDataEntityDesignContext.AddNew.Entity"),
        "scalar property":                       VSExecuteCommand("OtherContextMenus.MicrosoftDataEntityDesignContext.AddNew.ScalarProperty"),
        "navigation property":                   VSExecuteCommand("OtherContextMenus.MicrosoftDataEntityDesignContext.AddNew.NavigationProperty"),
        "complex property":                      VSExecuteCommand("OtherContextMenus.MicrosoftDataEntityDesignContext.AddNew.ComplexProperty"),
        "function import":                       VSExecuteCommand("OtherContextMenus.MicrosoftDataEntityDesignContext.AddNew.FunctionImport"),
        "exportas image":                        VSExecuteCommand("OtherContextMenus.MicrosoftDataEntityDesignContext.Diagram.ExportasImage"),
        "snapto grid":                           VSExecuteCommand("OtherContextMenus.MicrosoftDataEntityDesignContext.Grid.SnaptoGrid"),
        "mapping details":                       VSExecuteCommand("OtherContextMenus.MicrosoftDataEntityDesignContext.MappingDetails"),
        "table mapping":                         VSExecuteCommand("OtherContextMenus.MicrosoftDataEntityDesignContext.TableMapping"),
        "function import mapping":               VSExecuteCommand("OtherContextMenus.MicrosoftDataEntityDesignContext.FunctionImportMapping"),
        "model browser":                         VSExecuteCommand("OtherContextMenus.MicrosoftDataEntityDesignContext.ModelBrowser"),
        "stored procedure mapping":              VSExecuteCommand("OtherContextMenus.MicrosoftDataEntityDesignContext.StoredProcedureMapping"),
        "showin model browser":                  VSExecuteCommand("OtherContextMenus.MicrosoftDataEntityDesignContext.ShowinModelBrowser"),
        "moveto new complex type":               VSExecuteCommand("OtherContextMenus.MicrosoftDataEntityDesignContext.Refactor.MovetoNewComplexType"),
        "entity key":                            VSExecuteCommand("OtherContextMenus.MicrosoftDataEntityDesignContext.EntityKey"),
        "select association":                    VSExecuteCommand("OtherContextMenus.MicrosoftDataEntityDesignContext.SelectAssociation"),
        "base type":                             VSExecuteCommand("OtherContextMenus.MicrosoftDataEntityDesignContext.Select.BaseType"),
        "subtype":                               VSExecuteCommand("OtherContextMenus.MicrosoftDataEntityDesignContext.Select.Subtype"),
        "update modelfrom database":             VSExecuteCommand("OtherContextMenus.MicrosoftDataEntityDesignContext.UpdateModelfromDatabase"),
        "generate databasefrom model":           VSExecuteCommand("OtherContextMenus.MicrosoftDataEntityDesignContext.GenerateDatabasefromModel"),
        "add code generation item":              VSExecuteCommand("OtherContextMenus.MicrosoftDataEntityDesignContext.AddCodeGenerationItem"),
        "add function import":                   VSExecuteCommand("OtherContextMenus.MicrosoftDataEntityDesignContext.AddFunctionImport"),
        "complex type":                          VSExecuteCommand("OtherContextMenus.MicrosoftDataEntityDesignContext.AddNew.ComplexType"),
        "add enum type":                         VSExecuteCommand("OtherContextMenus.MicrosoftDataEntityDesignContext.AddNew.AddEnumType"),
        "complex types":                         VSExecuteCommand("OtherContextMenus.MicrosoftDataEntityDesignContext.Add.ComplexProperty.ComplexTypes"),
        "showin diagram":                        VSExecuteCommand("OtherContextMenus.MicrosoftDataEntityDesignContext.ShowinDiagram"),
        "addto diagram":                         VSExecuteCommand("OtherContextMenus.MicrosoftDataEntityDesignContext.AddtoDiagram"),
        "move diagramsto separate file":         VSExecuteCommand("OtherContextMenus.MicrosoftDataEntityDesignContext.MoveDiagramstoSeparateFile"),
        "to top":                                VSExecuteCommand("OtherContextMenus.MicrosoftDataEntityDesignContext.MoveProperties.ToTop"),
        "to bottom":                             VSExecuteCommand("OtherContextMenus.MicrosoftDataEntityDesignContext.MoveProperties.ToBottom"),
        "up":                                    VSExecuteCommand("OtherContextMenus.MicrosoftDataEntityDesignContext.MoveProperties.Up"),
        "down":                                  VSExecuteCommand("OtherContextMenus.MicrosoftDataEntityDesignContext.MoveProperties.Down"),
        "up5":                                   VSExecuteCommand("OtherContextMenus.MicrosoftDataEntityDesignContext.MoveProperties.Up5"),
        "down5":                                 VSExecuteCommand("OtherContextMenus.MicrosoftDataEntityDesignContext.MoveProperties.Down5"),
        "return to call site":                   VSExecuteCommand("Debug.ReturnToCallSite"),
        "go to previous callor intelli trace event":     VSExecuteCommand("Debug.GoToPreviousCallorIntelliTraceEvent"),
        "step in":                               VSExecuteCommand("Debug.StepIn"),
        "go to next callor intelli trace event": VSExecuteCommand("Debug.GoToNextCallorIntelliTraceEvent"),
        "go to live mode":                       VSExecuteCommand("Debug.GoToLiveMode"),
        #"switchto siteof call":                  VSExecuteCommand("OtherContextMenus.ContentPaneContextMenu.SwitchtoSiteofCall"),
        #"switchto entryof call":                 VSExecuteCommand("OtherContextMenus.ContentPaneContextMenu.SwitchtoEntryofCall"),
        #"switchto event":                        VSExecuteCommand("OtherContextMenus.ContentPaneContextMenu.SwitchtoEvent"),
        "go to locals window":                   VSExecuteCommand("OtherContextMenus.ContentPaneContextMenu.GoToLocalsWindow"),
        #"search for this line in intelli trace":     VSExecuteCommand("EditorContextMenus.CodeWindow.SearchForThisLineInIntelliTrace"),
        #"search for this method in intelli trace":     VSExecuteCommand("EditorContextMenus.CodeWindow.SearchForThisMethodInIntelliTrace"),
        #"open intelli trace settings":           VSExecuteCommand("Debug.OpenIntelliTraceSettings"),
        "show log summary":                      VSExecuteCommand("Debug.ShowLogSummary"),
        #"save intelli trace session":            VSExecuteCommand("Debug.SaveIntelliTraceSession"),
        #"export intelli trace events":           VSExecuteCommand("Debug.ExportIntelliTraceEvents"),
        #"delete intelli trace events":           VSExecuteCommand("Debug.DeleteIntelliTraceEvents"),
        #"insert intelli trace event":            VSExecuteCommand("EditorContextMenus.CodeWindow.InsertIntelliTraceEvent"),
        #"expression":                            VSExecuteCommand("OtherContextMenus.Selection.Expression"),
        #"page header":                           VSExecuteCommand("Report.PageHeader"),
        #"page footer":                           VSExecuteCommand("Report.PageFooter"),
        "report data":                           VSExecuteCommand("View.ReportData"),
        "add column":                            VSExecuteCommand("OtherContextMenus.Control.AddColumn"),
        "grouping sorting":                      VSExecuteCommand("Report.GroupingSorting"),
        "insert group":                          VSExecuteCommand("OtherContextMenus.RowColumn.InsertGroup"),
        "edit group":                            VSExecuteCommand("OtherContextMenus.RowColumn.EditGroup"),
        "delete groups":                         VSExecuteCommand("OtherContextMenus.RowColumn.DeleteGroups"),
        "insert columntothe left":               VSExecuteCommand("OtherContextMenus.RowColumn.InsertColumntotheLeft"),
        "insert columntothe right":              VSExecuteCommand("OtherContextMenus.RowColumn.InsertColumntotheRight"),
        "insert row above":                      VSExecuteCommand("OtherContextMenus.RowColumn.InsertRowAbove"),
        "insert row below":                      VSExecuteCommand("OtherContextMenus.RowColumn.InsertRowBelow"),
        "table header":                          VSExecuteCommand("OtherContextMenus.RowColumn.TableHeader"),
        "table details":                         VSExecuteCommand("OtherContextMenus.RowColumn.TableDetails"),
        "table footer":                          VSExecuteCommand("OtherContextMenus.RowColumn.TableFooter"),
        "add column group":                      VSExecuteCommand("OtherContextMenus.Control.AddColumnGroup"),
        "add row group":                         VSExecuteCommand("OtherContextMenus.Control.AddRowGroup"),
        "subtotal":                              VSExecuteCommand("OtherContextMenus.Cell.Subtotal"),
        "report properties":                     VSExecuteCommand("Report.ReportProperties"),
        "datasets":                              VSExecuteCommand("Report.Datasets"),
        "actions":                               VSExecuteCommand("Report.Actions"),
        "parameters":                            VSExecuteCommand("Report.Parameters"),
        "chart data":                            VSExecuteCommand("Report.ChartData"),
        "run":                                   VSExecuteCommand("ProjectandSolutionContextMenus.Item.Run"),
        "simple column":                         VSExecuteCommand("OtherContextMenus.Selection.ChartType.Column.SimpleColumn"),
        "stacked column":                        VSExecuteCommand("OtherContextMenus.Selection.ChartType.Column.StackedColumn"),
        #"100 stacked column":                    VSExecuteCommand("OtherContextMenus.Selection.ChartType.Column.100StackedColumn"),
        "simple bar":                            VSExecuteCommand("OtherContextMenus.Selection.ChartType.Bar.SimpleBar"),
        "stacked bar":                           VSExecuteCommand("OtherContextMenus.Selection.ChartType.Bar.StackedBar"),
        #"100 stacked bar":                       VSExecuteCommand("OtherContextMenus.Selection.ChartType.Bar.100StackedBar"),
        "simple area":                           VSExecuteCommand("OtherContextMenus.Selection.ChartType.Area.SimpleArea"),
        "stacked area":                          VSExecuteCommand("OtherContextMenus.Selection.ChartType.Area.StackedArea"),
        #"100 stacked area":                      VSExecuteCommand("OtherContextMenus.Selection.ChartType.Area.100StackedArea"),
        "simple line":                           VSExecuteCommand("OtherContextMenus.Selection.ChartType.Line.SimpleLine"),
        "smooth line":                           VSExecuteCommand("OtherContextMenus.Selection.ChartType.Line.SmoothLine"),
        "simple pie":                            VSExecuteCommand("OtherContextMenus.Selection.ChartType.Pie.SimplePie"),
        "exploded pie":                          VSExecuteCommand("OtherContextMenus.Selection.ChartType.Pie.ExplodedPie"),
        "simple doughnut":                       VSExecuteCommand("OtherContextMenus.Selection.ChartType.Doughnut.SimpleDoughnut"),
        "exploded doughnut":                     VSExecuteCommand("OtherContextMenus.Selection.ChartType.Doughnut.ExplodedDoughnut"),
        "simple scatter":                        VSExecuteCommand("OtherContextMenus.Selection.ChartType.Scatter.SimpleScatter"),
        "scatter lines":                         VSExecuteCommand("OtherContextMenus.Selection.ChartType.Scatter.ScatterLines"),
        "scatter smooth lines":                  VSExecuteCommand("OtherContextMenus.Selection.ChartType.Scatter.ScatterSmoothLines"),
        "bubble":                                VSExecuteCommand("OtherContextMenus.Selection.ChartType.Bubble.Bubble"),
        "high low close":                        VSExecuteCommand("OtherContextMenus.Selection.ChartType.Stock.HighLowClose"),
        "open high low close":                   VSExecuteCommand("OtherContextMenus.Selection.ChartType.Stock.OpenHighLowClose"),
        "candlestick":                           VSExecuteCommand("OtherContextMenus.Selection.ChartType.Stock.Candlestick"),
        "ruler":                                 VSExecuteCommand("Report.Ruler"),
        "grouping":                              VSExecuteCommand("Report.Grouping"),
        "line up icons":                         VSExecuteCommand("OtherContextMenus.ComponentTray.LineUpIcons"),
        "show large icons":                      VSExecuteCommand("OtherContextMenus.ComponentTray.ShowLargeIcons"),
        "open developer account":                VSExecuteCommand("Project.OpenDeveloperAccount"),
        "reserve app name":                      VSExecuteCommand("Project.ReserveAppName"),
        "acquire developer license":             VSExecuteCommand("Project.AcquireDeveloperLicense"),
        "edit app manifest":                     VSExecuteCommand("Project.EditAppManifest"),
        "associate appwiththe store":            VSExecuteCommand("Project.AssociateAppwiththeStore"),
        "capture screenshots":                   VSExecuteCommand("Project.CaptureScreenshots"),
        "create app packages":                   VSExecuteCommand("Project.CreateAppPackages"),
        "upload app packages":                   VSExecuteCommand("Project.UploadAppPackages"),
        #"tfs explorer set workspace":            VSExecuteCommand("TeamFoundationContextMenus.SourceControlExplorerCommandHolder.TfsExplorerSetWorkspace"),
        #"tfs label view":                        VSExecuteCommand("TeamFoundationContextMenus.Label.TfsLabelView"),
        #"tfs label change version":              VSExecuteCommand("TeamFoundationContextMenus.Label.TfsLabelChangeVersion"),
        #"tfs label remove from label":           VSExecuteCommand("TeamFoundationContextMenus.Label.TfsLabelRemoveFromLabel"),
        #"tfs label history":                     VSExecuteCommand("TeamFoundationContextMenus.Label.TfsLabelHistory"),
        #"tfs label compare":                     VSExecuteCommand("TeamFoundationContextMenus.Label.TfsLabelCompare"),
        #"tfs label folder diff":                 VSExecuteCommand("TeamFoundationContextMenus.Label.TfsLabelFolderDiff"),
        #"tfs label annotate":                    VSExecuteCommand("TeamFoundationContextMenus.Label.TfsLabelAnnotate"),
        #"tfs label get this version":            VSExecuteCommand("TeamFoundationContextMenus.Label.TfsLabelGetThisVersion"),
        #"tfs context pending checkins pending checkins view":     VSExecuteCommand("TeamFoundationContextMenus.SourceControlPendingChangesSourceFiles.TfsContextPendingCheckinsPendingCheckinsView"),
        #"tfs context pending checkins pending checkins undo":     VSExecuteCommand("TeamFoundationContextMenus.SourceControlPendingChangesSourceFiles.TfsContextPendingCheckinsPendingCheckinsUndo"),
        #"tfs context pending checkins pending checkins properties":     VSExecuteCommand("TeamFoundationContextMenus.SourceControlPendingChangesSourceFiles.TfsContextPendingCheckinsPendingCheckinsProperties"),
        #"tfs context pending checkins compare with previous version":     VSExecuteCommand("TeamFoundationContextMenus.SourceControlPendingChangesSourceFiles.Compare.TfsContextPendingCheckinsCompareWithPreviousVersion"),
        #"tfs context pending checkins compare with workspace version":     VSExecuteCommand("TeamFoundationContextMenus.SourceControlPendingChangesSourceFiles.Compare.TfsContextPendingCheckinsCompareWithWorkspaceVersion"),
        #"tfs context pending checkins compare with latest version":     VSExecuteCommand("TeamFoundationContextMenus.SourceControlPendingChangesSourceFiles.Compare.TfsContextPendingCheckinsCompareWithLatestVersion"),
        #"tfs context pending checkins open":     VSExecuteCommand("TeamFoundationContextMenus.SourceControlPendingChangesWorkItems.TfsContextPendingCheckinsOpen"),
        #"tfs context pending checkins find next":     VSExecuteCommand("TeamFoundationContextMenus.SourceControlPendingChangesWorkItems.TfsContextPendingCheckinsFindNext"),
        #"tfs context pending checkins find previous":     VSExecuteCommand("TeamFoundationContextMenus.SourceControlPendingChangesWorkItems.TfsContextPendingCheckinsFindPrevious"),
        #"tfs context pending checkins evaluate":     VSExecuteCommand("TeamFoundationContextMenus.SourceControlPendingChangesPolicyWarnings.TfsContextPendingCheckinsEvaluate"),
        #"tfs pending checkins set workspace":    VSExecuteCommand("TeamFoundationContextMenus.PendingChangesCommandHolder.TfsPendingCheckinsSetWorkspace"),
        #"tfs pending checkins set channel index":     VSExecuteCommand("TeamFoundationContextMenus.PendingChangesCommandHolder.TfsPendingCheckinsSetChannelIndex"),
        #"tfs context history compare":           VSExecuteCommand("TeamFoundationContextMenus.SourceControlHistoryChangesets.TfsContextHistoryCompare"),
        #"tfs context history folder diff":       VSExecuteCommand("TeamFoundationContextMenus.SourceControlHistoryChangesets.TfsContextHistoryFolderDiff"),
        #"tfs context history annotate":          VSExecuteCommand("TeamFoundationContextMenus.SourceControlHistoryChangesets.TfsContextHistoryAnnotate"),
        #"tfs context history track changeset":   VSExecuteCommand("TeamFoundationContextMenus.SourceControlHistoryChangesets.TfsContextHistoryTrackChangeset"),
        #"tfs context history view":              VSExecuteCommand("TeamFoundationContextMenus.SourceControlHistoryChangesets.TfsContextHistoryView"),
        #"tfs context history details":           VSExecuteCommand("TeamFoundationContextMenus.SourceControlHistoryChangesets.TfsContextHistoryDetails"),
        #"tfs context history get this version":  VSExecuteCommand("TeamFoundationContextMenus.SourceControlHistoryChangesets.TfsContextHistoryGetThisVersion"),
        #"tfs context history rollback changes in this version":     VSExecuteCommand("TeamFoundationContextMenus.SourceControlHistoryChangesets.TfsContextHistoryRollbackChangesInThisVersion"),
        #"tfs context history request review":    VSExecuteCommand("TeamFoundationContextMenus.SourceControlHistoryChangesets.TfsContextHistoryRequestReview"),
        #"tfs context folder diff compare files":     VSExecuteCommand("TeamFoundationContextMenus.FolderDifference.TfsContextFolderDiffCompareFiles"),
        #"tfs context folder diff view":          VSExecuteCommand("TeamFoundationContextMenus.FolderDifference.TfsContextFolderDiffView"),
        #"tfs context folder diff add files":     VSExecuteCommand("TeamFoundationContextMenus.FolderDifference.TfsContextFolderDiffAddFiles"),
        #"tfs context folder diff delete":        VSExecuteCommand("TeamFoundationContextMenus.FolderDifference.TfsContextFolderDiffDelete"),
        #"tfs context folder diff delete local files":     VSExecuteCommand("TeamFoundationContextMenus.FolderDifference.TfsContextFolderDiffDeleteLocalFiles"),
        #"tfs context folder diff get latest version":     VSExecuteCommand("TeamFoundationContextMenus.FolderDifference.TfsContextFolderDiffGetLatestVersion"),
        #"tfs context folder diff get specific version":     VSExecuteCommand("TeamFoundationContextMenus.FolderDifference.TfsContextFolderDiffGetSpecificVersion"),
        #"tfs context folder diff reconcile":     VSExecuteCommand("TeamFoundationContextMenus.FolderDifference.TfsContextFolderDiffReconcile"),
        #"tfs context folder diff rerun compare":     VSExecuteCommand("TeamFoundationContextMenus.FolderDifference.TfsContextFolderDiffRerunCompare"),
        #"tfs context folder diff history":       VSExecuteCommand("TeamFoundationContextMenus.FolderDifference.TfsContextFolderDiffHistory"),
        #"tfs context folder diff properties":    VSExecuteCommand("TeamFoundationContextMenus.FolderDifference.TfsContextFolderDiffProperties"),
        #"tfs context folder diff check out for edit":     VSExecuteCommand("TeamFoundationContextMenus.FolderDifference.TfsContextFolderDiffCheckOutForEdit"),
        #"tfs context folder diff undo pending changes":     VSExecuteCommand("TeamFoundationContextMenus.FolderDifference.TfsContextFolderDiffUndoPendingChanges"),
        #"tfs annotate view changeset details":   VSExecuteCommand("EditorContextMenus.CodeWindow.SourceControl.TfsAnnotateViewChangesetDetails"),
        #"tfs annotate move previous region":     VSExecuteCommand("TeamFoundationContextMenus.Annotate.TfsAnnotateMovePreviousRegion"),
        #"tfs annotate move next region":         VSExecuteCommand("TeamFoundationContextMenus.Annotate.TfsAnnotateMoveNextRegion"),
        #"tfs annotate fire selection changed":   VSExecuteCommand("TeamFoundationContextMenus.Annotate.TfsAnnotateFireSelectionChanged"),
        #"tfs annotate view history":             VSExecuteCommand("EditorContextMenus.CodeWindow.SourceControl.TfsAnnotateViewHistory"),
        #"tfs annotate compare with previous":    VSExecuteCommand("EditorContextMenus.CodeWindow.SourceControl.TfsAnnotateCompareWithPrevious"),
        #"tfs annotate annotate this version":    VSExecuteCommand("EditorContextMenus.CodeWindow.SourceControl.TfsAnnotateAnnotateThisVersion"),
        #"tfs annotate track changeset":          VSExecuteCommand("EditorContextMenus.CodeWindow.SourceControl.TfsAnnotateTrackChangeset"),
        #"tfs annotate get this version":         VSExecuteCommand("EditorContextMenus.CodeWindow.SourceControl.TfsAnnotateGetThisVersion"),
        #"tfs annotate stop annotation":          VSExecuteCommand("EditorContextMenus.CodeWindow.SourceControl.TfsAnnotateStopAnnotation"),
        #"tfs annotate copy full path":           VSExecuteCommand("OtherContextMenus.EasyMDIToolWindow.TfsAnnotateCopyFullPath"),
        #"tfs annotate annotate this line":       VSExecuteCommand("EditorContextMenus.CodeWindow.SourceControl.TfsAnnotateAnnotateThisLine"),
        #"tfs context online view":               VSExecuteCommand("TeamFoundationContextMenus.Online.TfsContextOnlineView"),
        #"tfs context online properties":         VSExecuteCommand("TeamFoundationContextMenus.Online.TfsContextOnlineProperties"),
        #"tfs context online compare with workspace version":     VSExecuteCommand("TeamFoundationContextMenus.Online.Compare.TfsContextOnlineCompareWithWorkspaceVersion"),
        #"tfs context online compare with latest version":     VSExecuteCommand("TeamFoundationContextMenus.Online.Compare.TfsContextOnlineCompareWithLatestVersion"),
        #"tfs context history labels compare":    VSExecuteCommand("TeamFoundationContextMenus.SourceControlHistoryLabels.TfsContextHistoryLabelsCompare"),
        #"tfs context history labels folder diff":     VSExecuteCommand("TeamFoundationContextMenus.SourceControlHistoryLabels.TfsContextHistoryLabelsFolderDiff"),
        #"tfs context history labels annotate":   VSExecuteCommand("TeamFoundationContextMenus.SourceControlHistoryLabels.TfsContextHistoryLabelsAnnotate"),
        #"tfs context history labels track changeset":     VSExecuteCommand("TeamFoundationContextMenus.SourceControlHistoryLabels.TfsContextHistoryLabelsTrackChangeset"),
        #"tfs context history labels view":       VSExecuteCommand("TeamFoundationContextMenus.SourceControlHistoryLabels.TfsContextHistoryLabelsView"),
        #"tfs context history labels details":    VSExecuteCommand("TeamFoundationContextMenus.SourceControlHistoryLabels.TfsContextHistoryLabelsDetails"),
        #"tfs context history labels delete label":     VSExecuteCommand("TeamFoundationContextMenus.SourceControlHistoryLabels.TfsContextHistoryLabelsDeleteLabel"),
        #"tfs context history labels get this version":     VSExecuteCommand("TeamFoundationContextMenus.SourceControlHistoryLabels.TfsContextHistoryLabelsGetThisVersion"),
        #"tfs context pending checkins conflict compare local to server":     VSExecuteCommand("TeamFoundationContextMenus.SourceControlPendingChangesConflicts.Compare.TfsContextPendingCheckinsConflictCompareLocalToServer"),
        #"tfs context pending checkins conflict compare target to source":     VSExecuteCommand("TeamFoundationContextMenus.SourceControlPendingChangesConflicts.Compare.TfsContextPendingCheckinsConflictCompareTargetToSource"),
        #"tfs context pending checkins conflict compare local to shelveset":     VSExecuteCommand("TeamFoundationContextMenus.SourceControlPendingChangesConflicts.Compare.TfsContextPendingCheckinsConflictCompareLocalToShelveset"),
        #"tfs context pending checkins conflict compare shelveset to deleted":     VSExecuteCommand("TeamFoundationContextMenus.SourceControlPendingChangesConflicts.Compare.TfsContextPendingCheckinsConflictCompareShelvesetToDeleted"),
        #"tfs context pending checkins conflict compare unshelved to original workspace":     VSExecuteCommand("TeamFoundationContextMenus.SourceControlPendingChangesConflicts.Compare.TfsContextPendingCheckinsConflictCompareUnshelvedToOriginalWorkspace"),
        #"tfs context pending checkins conflict compare unshelved to deleted":     VSExecuteCommand("TeamFoundationContextMenus.SourceControlPendingChangesConflicts.Compare.TfsContextPendingCheckinsConflictCompareUnshelvedToDeleted"),
        #"tfs context pending checkins conflict compare local to original":     VSExecuteCommand("TeamFoundationContextMenus.SourceControlPendingChangesConflicts.Compare.TfsContextPendingCheckinsConflictCompareLocalToOriginal"),
        #"tfs context pending checkins conflict compare source to base":     VSExecuteCommand("TeamFoundationContextMenus.SourceControlPendingChangesConflicts.Compare.TfsContextPendingCheckinsConflictCompareSourceToBase"),
        #"tfs context pending checkins conflict compare shelveset to base":     VSExecuteCommand("TeamFoundationContextMenus.SourceControlPendingChangesConflicts.Compare.TfsContextPendingCheckinsConflictCompareShelvesetToBase"),
        #"tfs context pending checkins conflict compare unshelved to base":     VSExecuteCommand("TeamFoundationContextMenus.SourceControlPendingChangesConflicts.Compare.TfsContextPendingCheckinsConflictCompareUnshelvedToBase"),
        #"tfs context pending checkins conflict compare server to original":     VSExecuteCommand("TeamFoundationContextMenus.SourceControlPendingChangesConflicts.Compare.TfsContextPendingCheckinsConflictCompareServerToOriginal"),
        #"tfs context pending checkins conflict compare target to base":     VSExecuteCommand("TeamFoundationContextMenus.SourceControlPendingChangesConflicts.Compare.TfsContextPendingCheckinsConflictCompareTargetToBase"),
        #"tfs context pending checkins conflict compare local to base":     VSExecuteCommand("TeamFoundationContextMenus.SourceControlPendingChangesConflicts.Compare.TfsContextPendingCheckinsConflictCompareLocalToBase"),
        #"tfs context pending checkins conflict compare original workspace to base":     VSExecuteCommand("TeamFoundationContextMenus.SourceControlPendingChangesConflicts.Compare.TfsContextPendingCheckinsConflictCompareOriginalWorkspaceToBase"),
        #"tfs context pending checkins conflict compare local to deleted":     VSExecuteCommand("TeamFoundationContextMenus.SourceControlPendingChangesConflicts.Compare.TfsContextPendingCheckinsConflictCompareLocalToDeleted"),
        #"tfs context pending checkins conflict compare source to deleted":     VSExecuteCommand("TeamFoundationContextMenus.SourceControlPendingChangesConflicts.Compare.TfsContextPendingCheckinsConflictCompareSourceToDeleted"),
        #"tfs context pending checkins conflict compare deleted to original":     VSExecuteCommand("TeamFoundationContextMenus.SourceControlPendingChangesConflicts.Compare.TfsContextPendingCheckinsConflictCompareDeletedToOriginal"),
        #"tfs context pending checkins conflict compare deleted to base":     VSExecuteCommand("TeamFoundationContextMenus.SourceControlPendingChangesConflicts.Compare.TfsContextPendingCheckinsConflictCompareDeletedToBase"),
        #"tfs context pending checkins conflict compare original to server":     VSExecuteCommand("TeamFoundationContextMenus.SourceControlPendingChangesConflicts.Compare.TfsContextPendingCheckinsConflictCompareOriginalToServer"),
        #"tfs context pending checkins conflict compare deleted to target":     VSExecuteCommand("TeamFoundationContextMenus.SourceControlPendingChangesConflicts.Compare.TfsContextPendingCheckinsConflictCompareDeletedToTarget"),
        #"tfs context pending checkins conflict history":     VSExecuteCommand("TeamFoundationContextMenus.SourceControlPendingChangesConflicts.TfsContextPendingCheckinsConflictHistory"),
        #"tfs context pending checkins conflict source history":     VSExecuteCommand("TeamFoundationContextMenus.SourceControlPendingChangesConflicts.TfsContextPendingCheckinsConflictSourceHistory"),
        #"tfs context pending checkins conflict target history":     VSExecuteCommand("TeamFoundationContextMenus.SourceControlPendingChangesConflicts.TfsContextPendingCheckinsConflictTargetHistory"),
        #"tfs context pending checkins conflict annotate":     VSExecuteCommand("TeamFoundationContextMenus.SourceControlPendingChangesConflicts.TfsContextPendingCheckinsConflictAnnotate"),
        #"tfs context pending checkins conflict source annotate":     VSExecuteCommand("TeamFoundationContextMenus.SourceControlPendingChangesConflicts.TfsContextPendingCheckinsConflictSourceAnnotate"),
        #"tfs context pending checkins conflict target annotate":     VSExecuteCommand("TeamFoundationContextMenus.SourceControlPendingChangesConflicts.TfsContextPendingCheckinsConflictTargetAnnotate"),
        #"tfs context branch visualizer changeset details":     VSExecuteCommand("TeamFoundationContextMenus.BranchVisualizer.TfsContextBranchVisualizerChangesetDetails"),
        #"tfs context branch visualizer open in s c e":     VSExecuteCommand("TeamFoundationContextMenus.BranchVisualizer.TfsContextBranchVisualizerOpenInSCE"),
        #"tfs context branch visualizer properties":     VSExecuteCommand("TeamFoundationContextMenus.BranchVisualizer.TfsContextBranchVisualizerProperties"),
        #"tfs context branch visualizer branch":  VSExecuteCommand("TeamFoundationContextMenus.BranchVisualizer.TfsContextBranchVisualizerBranch"),
        #"tfs context branch visualizer merge":   VSExecuteCommand("TeamFoundationContextMenus.BranchVisualizer.TfsContextBranchVisualizerMerge"),
        #"tfs context branch visualizer compare":     VSExecuteCommand("TeamFoundationContextMenus.BranchVisualizer.TfsContextBranchVisualizerCompare"),
        #"tfs branch visualizer track work item":     VSExecuteCommand("TeamFoundationContextMenus.BranchVisualizerCommandHolder.TfsBranchVisualizerTrackWorkItem"),
        #"tfs context mappings copy":             VSExecuteCommand("TeamFoundationContextMenus.Mappings.TfsContextMappingsCopy"),
        #"tfs context mappings cut":              VSExecuteCommand("TeamFoundationContextMenus.Mappings.TfsContextMappingsCut"),
        #"tfs context mappings paste":            VSExecuteCommand("TeamFoundationContextMenus.Mappings.TfsContextMappingsPaste"),
        #"tfs context mappings delete":           VSExecuteCommand("TeamFoundationContextMenus.Mappings.TfsContextMappingsDelete"),
        #"tfs context mappings select all":       VSExecuteCommand("TeamFoundationContextMenus.Mappings.TfsContextMappingsSelectAll"),
        #"tfs context configure user tools original file":     VSExecuteCommand("TeamFoundationContextMenus.ConfigureUserTools.TfsContextConfigureUserToolsOriginalFile"),
        #"tfs context configure user tools modified file":     VSExecuteCommand("TeamFoundationContextMenus.ConfigureUserTools.TfsContextConfigureUserToolsModifiedFile"),
        #"tfs context configure user tools base file":     VSExecuteCommand("TeamFoundationContextMenus.ConfigureUserTools.TfsContextConfigureUserToolsBaseFile"),
        #"tfs context configure user tools merged file":     VSExecuteCommand("TeamFoundationContextMenus.ConfigureUserTools.TfsContextConfigureUserToolsMergedFile"),
        #"tfs context configure user tools command line option":     VSExecuteCommand("TeamFoundationContextMenus.ConfigureUserTools.TfsContextConfigureUserToolsCommandLineOption"),
        #"tfs context configure user tools original file label":     VSExecuteCommand("TeamFoundationContextMenus.ConfigureUserTools.TfsContextConfigureUserToolsOriginalFileLabel"),
        #"tfs context configure user tools modified file label":     VSExecuteCommand("TeamFoundationContextMenus.ConfigureUserTools.TfsContextConfigureUserToolsModifiedFileLabel"),
        #"tfs context configure user tools base file label":     VSExecuteCommand("TeamFoundationContextMenus.ConfigureUserTools.TfsContextConfigureUserToolsBaseFileLabel"),
        #"tfs context configure user tools merged file label":     VSExecuteCommand("TeamFoundationContextMenus.ConfigureUserTools.TfsContextConfigureUserToolsMergedFileLabel"),
        #"set focuson left window":               VSExecuteCommand("TeamFoundationContextMenus.MergeContextMenu.SetFocusonLeftWindow"),
        #"set focuson result window":             VSExecuteCommand("TeamFoundationContextMenus.MergeContextMenu.SetFocusonResultWindow"),
        #"set focuson right window":              VSExecuteCommand("TeamFoundationContextMenus.MergeContextMenu.SetFocusonRightWindow"),
        #"tfs context promote copy":              VSExecuteCommand("TeamFoundationContextMenus.PromoteChanges.TfsContextPromoteCopy"),
        #"tfs context promote select all":        VSExecuteCommand("TeamFoundationContextMenus.PromoteChanges.TfsContextPromoteSelectAll"),
        #"tfs context promote adds view in explorer":     VSExecuteCommand("TeamFoundationContextMenus.PromoteChanges.TfsContextPromoteAddsViewInExplorer"),
        #"tfs context promote adds ignore this item":     VSExecuteCommand("TeamFoundationContextMenus.PromoteChanges.TfsContextPromoteAddsIgnoreThisItem"),
        #"tfs context promote adds ignore by extension":     VSExecuteCommand("TeamFoundationContextMenus.PromoteChanges.TfsContextPromoteAddsIgnoreByExtension"),
        #"tfs context promote adds ignore by file name":     VSExecuteCommand("TeamFoundationContextMenus.PromoteChanges.TfsContextPromoteAddsIgnoreByFileName"),
        #"tfs context promote adds ignore by folder":     VSExecuteCommand("TeamFoundationContextMenus.PromoteChanges.TfsContextPromoteAddsIgnoreByFolder"),
        #"tfs context promote rename":            VSExecuteCommand("TeamFoundationContextMenus.PromoteChanges.TfsContextPromoteRename"),
        #"tfs context promote deletes restore this item":     VSExecuteCommand("TeamFoundationContextMenus.PromoteChanges.TfsContextPromoteDeletesRestoreThisItem"),
        #"tfs context promote adds delete":       VSExecuteCommand("TeamFoundationContextMenus.PromoteChanges.TfsContextPromoteAddsDelete"),
        #"accept merge":                          VSExecuteCommand("TeamFoundationContextMenus.MergeContextMenu.AcceptMerge"),
        #"tfs context pending changes page include changes":     VSExecuteCommand("TeamFoundationContextMenus.PendingChangesPageChangestoExclude.TfsContextPendingChangesPageIncludeChanges"),
        #"tfs context pending changes page exclude changes":     VSExecuteCommand("TeamFoundationContextMenus.PendingChangesPageChangestoInclude.TfsContextPendingChangesPageExcludeChanges"),
        #"tfs context pending changes page annotate":     VSExecuteCommand("TeamFoundationContextMenus.PendingChangesPageChangestoInclude.TfsContextPendingChangesPageAnnotate"),
        #"tfs context pending changes page folder diff":     VSExecuteCommand("TeamFoundationContextMenus.PendingChangesPageChangestoInclude.TfsContextPendingChangesPageFolderDiff"),
        #"tfs context pending changes page undo":     VSExecuteCommand("TeamFoundationContextMenus.PendingChangesPageChangestoInclude.TfsContextPendingChangesPageUndo"),
        #"tfs context pending changes page view":     VSExecuteCommand("TeamFoundationContextMenus.PendingChangesPageChangestoInclude.TfsContextPendingChangesPageView"),
        #"tfs context pending changes page compare with workspace version":     VSExecuteCommand("TeamFoundationContextMenus.PendingChangesPageChangestoInclude.TfsContextPendingChangesPageCompareWithWorkspaceVersion"),
        #"tfs context pending changes page compare with latest version":     VSExecuteCommand("TeamFoundationContextMenus.PendingChangesPageChangestoInclude.TfsContextPendingChangesPageCompareWithLatestVersion"),
        #"tfs context pending changes page compare with previous version":     VSExecuteCommand("TeamFoundationContextMenus.PendingChangesPageChangestoInclude.TfsContextPendingChangesPageCompareWithPreviousVersion"),
        #"tfs context pending changes page history":     VSExecuteCommand("TeamFoundationContextMenus.PendingChangesPageChangestoInclude.TfsContextPendingChangesPageHistory"),
        #"tfs context pending changes page remove work item":     VSExecuteCommand("TeamFoundationContextMenus.PendingChangesPageWorkItems.TfsContextPendingChangesPageRemoveWorkItem"),
        #"tfs context pending changes page open work item":     VSExecuteCommand("TeamFoundationContextMenus.PendingChangesPageWorkItems.TfsContextPendingChangesPageOpenWorkItem"),
        #"tfs context pending changes page new linked work item":     VSExecuteCommand("TeamFoundationContextMenus.PendingChangesPageWorkItems.TfsContextPendingChangesPageNewLinkedWorkItem"),
        #"tfs context pending changes page create copy work item":     VSExecuteCommand("TeamFoundationContextMenus.PendingChangesPageWorkItems.TfsContextPendingChangesPageCreateCopyWorkItem"),
        #"tfs context pending changes page existing link work item":     VSExecuteCommand("TeamFoundationContextMenus.PendingChangesPageWorkItems.TfsContextPendingChangesPageExistingLinkWorkItem"),
        #"tfs context my work page open work item":     VSExecuteCommand("TeamFoundationContextMenus.MyWorkPageInProgress.TfsContextMyWorkPageOpenWorkItem"),
        #"tfs context my work page add work item":     VSExecuteCommand("TeamFoundationContextMenus.MyWorkPageInProgress.TfsContextMyWorkPageAddWorkItem"),
        #"tfs context my work page remove work item":     VSExecuteCommand("TeamFoundationContextMenus.MyWorkPageInProgress.TfsContextMyWorkPageRemoveWorkItem"),
        #"tfs context my work page activate work item":     VSExecuteCommand("TeamFoundationContextMenus.MyWorkPageMyWorkItems.TfsContextMyWorkPageActivateWorkItem"),
        #"tfs context my work page shelve task":  VSExecuteCommand("TeamFoundationContextMenus.MyWorkPageInProgress.TfsContextMyWorkPageShelveTask"),
        #"tfs context my work page unshelve task":     VSExecuteCommand("TeamFoundationContextMenus.MyWorkPageUnfinishedWork.TfsContextMyWorkPageUnshelveTask"),
        #"tfs context my work page unshelve":     VSExecuteCommand("TeamFoundationContextMenus.MyWorkPageUnfinishedWork.TfsContextMyWorkPageUnshelve"),
        #"tfs context my work page view shelveset details":     VSExecuteCommand("TeamFoundationContextMenus.MyWorkPageUnfinishedWork.TfsContextMyWorkPageViewShelvesetDetails"),
        #"tfs context my work page request review":     VSExecuteCommand("TeamFoundationContextMenus.MyWorkPageUnfinishedWork.TfsContextMyWorkPageRequestReview"),
        #"tfs context my work page open code review":     VSExecuteCommand("TeamFoundationContextMenus.MyWorkPageCodeReviews.TfsContextMyWorkPageOpenCodeReview"),
        #"tfs context find shelvesets page view shelveset details":     VSExecuteCommand("TeamFoundationContextMenus.FindShelvesetsPageResults.TfsContextFindShelvesetsPageViewShelvesetDetails"),
        #"tfs context find shelvesets page delete shelveset":     VSExecuteCommand("TeamFoundationContextMenus.FindShelvesetsPageResults.TfsContextFindShelvesetsPageDeleteShelveset"),
        #"tfs context find shelvesets page unshelve":     VSExecuteCommand("TeamFoundationContextMenus.FindShelvesetsPageResults.TfsContextFindShelvesetsPageUnshelve"),
        #"tfs context find shelvesets request review":     VSExecuteCommand("TeamFoundationContextMenus.FindShelvesetsPageResults.TfsContextFindShelvesetsRequestReview"),
        #"tfs context pending changes find shelvesets":     VSExecuteCommand("TeamFoundationContextMenus.PendingChangesPageMoreLink.TfsContextPendingChangesFindShelvesets"),
        #"tfs context pending changes resolve conflicts":     VSExecuteCommand("TeamFoundationContextMenus.PendingChangesPageMoreLink.TfsContextPendingChangesResolveConflicts"),
        #"tfs context pending changes undo all":  VSExecuteCommand("TeamFoundationContextMenus.PendingChangesPageMoreLink.TfsContextPendingChangesUndoAll"),
        #"tfs context pending changes request review":     VSExecuteCommand("TeamFoundationContextMenus.PendingChangesPageMoreLink.TfsContextPendingChangesRequestReview"),
        #"tfs context pending changes filter none":     VSExecuteCommand("TeamFoundationContextMenus.PendingChangesFilterChangesLink.TfsContextPendingChangesFilterNone"),
        #"tfs context pending changes filter by solution":     VSExecuteCommand("TeamFoundationContextMenus.PendingChangesFilterChangesLink.TfsContextPendingChangesFilterBySolution"),
        #"tfs context pending changes filter by text":     VSExecuteCommand("TeamFoundationContextMenus.PendingChangesFilterChangesLink.TfsContextPendingChangesFilterByText"),
        #"tfs context pending changes page work item action link associate":     VSExecuteCommand("TeamFoundationContextMenus.WorkItemActionLink.TfsContextPendingChangesPageWorkItemActionLinkAssociate"),
        #"tfs context pending changes page work item action link resolve":     VSExecuteCommand("TeamFoundationContextMenus.WorkItemActionLink.TfsContextPendingChangesPageWorkItemActionLinkResolve"),
        #"tfs context pending changes page include unselected changes":     VSExecuteCommand("TeamFoundationContextMenus.PendingChangesPageChangestoExclude.TfsContextPendingChangesPageIncludeUnselectedChanges"),
        #"tfs context pending changes page exclude unselected changes":     VSExecuteCommand("TeamFoundationContextMenus.PendingChangesPageChangestoInclude.TfsContextPendingChangesPageExcludeUnselectedChanges"),
        #"tfs context pending changes page open in s c e":     VSExecuteCommand("TeamFoundationContextMenus.PendingChangesPageChangestoInclude.TfsContextPendingChangesPageOpenInSCE"),
        #"tfs context pending changes open s c e":     VSExecuteCommand("TeamFoundationContextMenus.PendingChangesPageMoreLink.TfsContextPendingChangesOpenSCE"),
        #"tfs context changeset details request review":     VSExecuteCommand("TeamFoundationContextMenus.ChangesetDetailsPageMoreLink.TfsContextChangesetDetailsRequestReview"),
        #"tfs context changeset details open in browser":     VSExecuteCommand("TeamFoundationContextMenus.ChangesetDetailsPageMoreLink.TfsContextChangesetDetailsOpenInBrowser"),
        #"tfs context shelveset details open in browser":     VSExecuteCommand("TeamFoundationContextMenus.ShelvesetDetailsPageMoreLink.TfsContextShelvesetDetailsOpenInBrowser"),
        #"go to pending changes":                 VSExecuteCommand("TeamFoundationContextMenus.Commands.GoToPendingChanges"),
        #"go to my work":                         VSExecuteCommand("TeamFoundationContextMenus.Commands.GoToMyWork"),
        #"tfs context my work page create copy w i":     VSExecuteCommand("TeamFoundationContextMenus.MyWorkPageInProgress.TfsContextMyWorkPageCreateCopyWI"),
        #"tfs context my work page new linked w i":     VSExecuteCommand("TeamFoundationContextMenus.MyWorkPageInProgress.TfsContextMyWorkPageNewLinkedWI"),
        #"tfs context my work page existing link w i":     VSExecuteCommand("TeamFoundationContextMenus.MyWorkPageInProgress.TfsContextMyWorkPageExistingLinkWI"),
        #"tfs context my work page view details":     VSExecuteCommand("TeamFoundationContextMenus.MyWorkPageInProgress.TfsContextMyWorkPageViewDetails"),
        #"tfs context my work page print selection details":     VSExecuteCommand("TeamFoundationContextMenus.MyWorkPageInProgress.TfsContextMyWorkPagePrintSelectionDetails"),
        "open in browser":                       VSExecuteCommand("TeamFoundationContextMenus.MyWorkPageInProgress.OpeninBrowser"),
        #"add to in progress":                    VSExecuteCommand("TeamFoundationContextMenus.MyWorkPageInProgress.AddtoInProgress"),
        "removefrom in progress":                VSExecuteCommand("TeamFoundationContextMenus.MyWorkPageInProgress.RemovefromInProgress"),
        "send work item to microsoft outlook":   VSExecuteCommand("TeamFoundationContextMenus.MyWorkPageInProgress.SendWorkItemtoMicrosoftOutlook"),
        #"tfs unshelve pending changes":          VSExecuteCommand("File.TfsUnshelvePendingChanges"),
        #"tfs resume conflict resolution":        VSExecuteCommand("File.TfsResumeConflictResolution"),
        #"tfs shelve pending changes":            VSExecuteCommand("File.TfsShelvePendingChanges"),
        #"tfs move":                              VSExecuteCommand("File.TfsMove"),
        #"tfs view":                              VSExecuteCommand("File.TfsView"),
        #"tfs lock":                              VSExecuteCommand("File.TfsLock"),
        #"tfs add to source control":             VSExecuteCommand("File.TfsAddToSourceControl"),
        #"tfs undelete":                          VSExecuteCommand("File.TfsUndelete"),
        #"tfs new folder":                        VSExecuteCommand("File.TfsNewFolder"),
        #"tfs unlock":                            VSExecuteCommand("File.TfsUnlock"),
        #"tfs annotate":                          VSExecuteCommand("File.TfsAnnotate"),
        #"tfs folder diff":                       VSExecuteCommand("File.TfsFolderDiff"),
        #"tfs online":                            VSExecuteCommand("File.TfsOnline"),
        #"tfs set local folder":                  VSExecuteCommand("File.TfsSetLocalFolder"),
        #"tfs cloak":                             VSExecuteCommand("File.TfsCloak"),
        #"tfs uncloak":                           VSExecuteCommand("File.TfsUncloak"),
        #"tfs unmap":                             VSExecuteCommand("File.TfsUnmap"),
        #"tfs find changesets":                   VSExecuteCommand("File.TfsFindChangesets"),
        #"tfs context explorer view":             VSExecuteCommand("TeamFoundationContextMenus.SourceControlExplorer.TfsContextExplorerView"),
        #"tfs context explorer lock":             VSExecuteCommand("TeamFoundationContextMenus.SourceControlExplorer.Advanced.TfsContextExplorerLock"),
        #"tfs context explorer unlock":           VSExecuteCommand("TeamFoundationContextMenus.SourceControlExplorer.Advanced.TfsContextExplorerUnlock"),
        #"tfs context explorer delete":           VSExecuteCommand("TeamFoundationContextMenus.SourceControlExplorer.TfsContextExplorerDelete"),
        #"tfs context explorer undelete":         VSExecuteCommand("TeamFoundationContextMenus.SourceControlExplorer.TfsContextExplorerUndelete"),
        #"tfs context explorer rename":           VSExecuteCommand("TeamFoundationContextMenus.SourceControlExplorer.TfsContextExplorerRename"),
        #"tfs context explorer add":              VSExecuteCommand("TeamFoundationContextMenus.SourceControlExplorer.TfsContextExplorerAdd"),
        #"tfs context explorer shelve pending changes":     VSExecuteCommand("TeamFoundationContextMenus.SourceControlExplorer.TfsContextExplorerShelvePendingChanges"),
        #"tfs context explorer branch":           VSExecuteCommand("File.TfsContextExplorerBranch"),
        #"tfs context explorer merge":            VSExecuteCommand("File.TfsContextExplorerMerge"),
        #"tfs context explorer move":             VSExecuteCommand("TeamFoundationContextMenus.SourceControlExplorer.TfsContextExplorerMove"),
        #"tfs context explorer apply label":      VSExecuteCommand("TeamFoundationContextMenus.SourceControlExplorer.Advanced.TfsContextExplorerApplyLabel"),
        #"tfs context explorer new folder":       VSExecuteCommand("TeamFoundationContextMenus.SourceControlExplorer.TfsContextExplorerNewFolder"),
        #"tfs context explorer properties":       VSExecuteCommand("TeamFoundationContextMenus.SourceControlExplorer.Advanced.TfsContextExplorerProperties"),
        #"tfs context explorer annotate":         VSExecuteCommand("TeamFoundationContextMenus.SourceControlExplorer.TfsContextExplorerAnnotate"),
        #"tfs context explorer folder diff":      VSExecuteCommand("TeamFoundationContextMenus.SourceControlExplorer.TfsContextExplorerFolderDiff"),
        #"tfs context explorer set local folder":     VSExecuteCommand("TeamFoundationContextMenus.SourceControlExplorer.Advanced.TfsContextExplorerSetLocalFolder"),
        #"tfs context explorer cloak":            VSExecuteCommand("TeamFoundationContextMenus.SourceControlExplorer.Advanced.TfsContextExplorerCloak"),
        #"tfs context explorer uncloak":          VSExecuteCommand("TeamFoundationContextMenus.SourceControlExplorer.Advanced.TfsContextExplorerUncloak"),
        #"tfs context explorer unmap":            VSExecuteCommand("TeamFoundationContextMenus.SourceControlExplorer.Advanced.TfsContextExplorerUnmap"),
        #"tfs view branch hierarchy":             VSExecuteCommand("File.TfsViewBranchHierarchy"),
        #"tfs convert folder to branch":          VSExecuteCommand("File.TfsConvertFolderToBranch"),
        #"tfs convert branch to folder":          VSExecuteCommand("File.TfsConvertBranchToFolder"),
        #"tfs reparent branch":                   VSExecuteCommand("File.TfsReparentBranch"),
        #"tfs context explorer security":         VSExecuteCommand("TeamFoundationContextMenus.SourceControlExplorer.Advanced.TfsContextExplorerSecurity"),
        #"tfs context explorer rollback":         VSExecuteCommand("TeamFoundationContextMenus.SourceControlExplorer.TfsContextExplorerRollback"),
        #"tfs manage workspaces":                 VSExecuteCommand("TeamFoundationContextMenus.PendingChangesPageMoreLink.TfsManageWorkspaces"),
        #"tfc":                                   VSExecuteCommand("Tfs.tfc"),
        #"connectto team foundation server with dialog":     VSExecuteCommand("Team.ConnecttoTeamFoundationServerWithDialog"),
        #"connect":                               VSExecuteCommand("Team.Connect"),
        #"connectto team foundation server":      VSExecuteCommand("Team.ConnecttoTeamFoundationServer"),
        #"disconnectfrom team foundation server":     VSExecuteCommand("Team.DisconnectfromTeamFoundationServer"),
        #"team project process guidance":         VSExecuteCommand("Help.TeamProjectProcessGuidance"),
        #"tfs exclude from source control":       VSExecuteCommand("File.TfsExcludeFromSourceControl"),
        #"tfs check out":                         VSExecuteCommand("File.TfsCheckOut"),
        #"tfs context check out for edit":        VSExecuteCommand("TfsContextCheckOutForEdit"),
        #"tfs get latest version":                VSExecuteCommand("File.TfsGetLatestVersion"),
        #"tfs check in":                          VSExecuteCommand("File.TfsCheckIn"),
        #"tfs context add selected projects to source control":     VSExecuteCommand("ClassViewContextMenus.ClassViewProject.TfsContextAddSelectedProjectsToSourceControl"),
        #"tfs workspaces":                        VSExecuteCommand("File.TfsWorkspaces"),
        #"tfs find label":                        VSExecuteCommand("File.TfsFindLabel"),
        #"tfs apply label":                       VSExecuteCommand("File.TfsApplyLabel"),
        #"tfs refresh status":                    VSExecuteCommand("File.TfsRefreshStatus"),
        #"tfs check out silent":                  VSExecuteCommand("File.TfsCheckOutSilent"),
        #"tfs get specific version":              VSExecuteCommand("File.TfsGetSpecificVersion"),
        #"tfs compare":                           VSExecuteCommand("File.TfsCompare"),
        #"tfs open from source control":          VSExecuteCommand("File.TfsOpenFromSourceControl"),
        #"tfs add project from source control":   VSExecuteCommand("File.TfsAddProjectFromSourceControl"),
        #"tfs undo checkout":                     VSExecuteCommand("File.TfsUndoCheckout"),
        #"tfs context undo checkout":             VSExecuteCommand("ClassViewContextMenus.ClassViewProject.SourceControl.TfsContextUndoCheckout"),
        #"tfs context compare":                   VSExecuteCommand("ClassViewContextMenus.ClassViewItem.TfsContextCompare"),
        #"tfs context get latest version":        VSExecuteCommand("ClassViewContextMenus.ClassViewProject.TfsContextGetLatestVersion"),
        #"tfs context get specific version":      VSExecuteCommand("ClassViewContextMenus.ClassViewProject.SourceControl.TfsContextGetSpecificVersion"),
        #"tfs context view pending changes":      VSExecuteCommand("ClassViewContextMenus.ClassViewProject.TfsContextViewPendingChanges"),
        #"tfs context check in":                  VSExecuteCommand("TfsContextCheckIn"),
        #"tfs options":                           VSExecuteCommand("TfsOptions"),
        #"tfs advanced":                          VSExecuteCommand("TfsAdvanced"),
        #"tfs get all files in solution":         VSExecuteCommand("File.TfsGetAllFilesInSolution"),
        #"tfs add solution to source control":    VSExecuteCommand("File.TfsAddSolutionToSourceControl"),
        #"tfs add selected projects to source control":     VSExecuteCommand("File.TfsAddSelectedProjectsToSourceControl"),
        #"tfs add files to source control":       VSExecuteCommand("File.TfsAddFilesToSourceControl"),
        #"tfs change source control":             VSExecuteCommand("File.TfsChangeSourceControl"),
        #"tfs get latest version dynamic silent":     VSExecuteCommand("TfsGetLatestVersionDynamicSilent"),
        #"tfs checkout dynamic silent":           VSExecuteCommand("TfsCheckoutDynamicSilent"),
        #"tfs check in dynamic silent":           VSExecuteCommand("TfsCheckInDynamicSilent"),
        #"build style":                           VSExecuteCommand("OtherContextMenus.CSSSource.BuildStyle"),
        #"goto definition":                       VSExecuteCommand("OtherContextMenus.CSSDocOutline.GotoDefinition"),
        "queue new build":                       VSExecuteCommand("Build.QueueNewBuild"),
        "new build definition":                  VSExecuteCommand("Build.NewBuildDefinition"),
        "edit build quality":                    VSExecuteCommand("TeamFoundationContextMenus.BuildExplorer.EditBuildQuality"),
        #"manage build qualities":                VSExecuteCommand("Build.ManageBuildQualities"),
        #"manage build controllers":              VSExecuteCommand("Build.ManageBuildControllers"),
        #"retain indefinitely":                   VSExecuteCommand("TeamFoundationContextMenus.BuildExplorer.RetainIndefinitely"),
        "view builds":                           VSExecuteCommand("Build.ViewBuilds"),
        "edit build definition":                 VSExecuteCommand("TeamFoundationContextMenus.TeamExplorerBuildDefinition.EditBuildDefinition"),
        #"postpone":                              VSExecuteCommand("TeamFoundationContextMenus.BuildQueueExplorer.Postpone"),
        "open drop folder":                      VSExecuteCommand("TeamFoundationContextMenus.BuildExplorer.OpenDropFolder"),
        #"reconcile workspace":                   VSExecuteCommand("TeamFoundationContextMenus.BuildExplorer.ReconcileWorkspace"),
        #"security":                              VSExecuteCommand("TeamFoundationContextMenus.TeamExplorerBuilds.Security"),
        #"open process file location":            VSExecuteCommand("TeamFoundationContextMenus.TeamExplorerBuildDefinition.OpenProcessFileLocation"),
        #"unshelve changes":                      VSExecuteCommand("TeamFoundationContextMenus.BuildExplorer.UnshelveChanges"),
        #"view changeset":                        VSExecuteCommand("TeamFoundationContextMenus.BuildExplorer.ViewChangeset"),
        #"view shelveset":                        VSExecuteCommand("TeamFoundationContextMenus.BuildQueueExplorer.ViewShelveset"),
        #"start now":                             VSExecuteCommand("TeamFoundationContextMenus.BuildQueueExplorer.StartNow"),
        #"add to favorites":                      VSExecuteCommand("TeamFoundationContextMenus.TeamExplorerBuildsPageBuildDefinition.AddToFavorites"),
        #"retry build":                           VSExecuteCommand("TeamFoundationContextMenus.BuildExplorer.RetryBuild"),
        #"view controller queue":                 VSExecuteCommand("Build.ViewControllerQueue"),
        #"go to builds":                          VSExecuteCommand("TeamFoundationContextMenus.Commands.GoToBuilds"),
        #"go to documents":                       VSExecuteCommand("TeamFoundationContextMenus.Commands.GoToDocuments"),
        #"new document library":                  VSExecuteCommand("Team.NewDocumentLibrary"),
        #"upload document":                       VSExecuteCommand("Team.UploadDocument"),
        #"go to reports":                         VSExecuteCommand("TeamFoundationContextMenus.Commands.GoToReports"),
        #"tfs team explorer":                     VSExecuteCommand("View.TfsTeamExplorer"),
        #"go to home":                            VSExecuteCommand("TeamFoundationContextMenus.Commands.GoToHome"),
        #"go to settings":                        VSExecuteCommand("TeamFoundationContextMenus.Commands.GoToSettings"),
        #"go to web access":                      VSExecuteCommand("TeamFoundationContextMenus.Commands.GoToWebAccess"),
        #"go to connect":                         VSExecuteCommand("TeamFoundationContextMenus.Commands.GoToConnect"),
        #"team explorer navigate backward":       VSExecuteCommand("TeamFoundationContextMenus.Commands.TeamExplorerNavigateBackward"),
        #"team explorer navigate forward":        VSExecuteCommand("TeamFoundationContextMenus.Commands.TeamExplorerNavigateForward"),
        #"go to team explorer navigation":        VSExecuteCommand("TeamFoundationContextMenus.Commands.GoToTeamExplorerNavigation"),
        #"go to team explorer page content":      VSExecuteCommand("TeamFoundationContextMenus.Commands.GoToTeamExplorerPageContent"),
        #"go to team explorer previous section content":     VSExecuteCommand("TeamFoundationContextMenus.Commands.GoToTeamExplorerPreviousSectionContent"),
        #"go to team explorer next section content":     VSExecuteCommand("TeamFoundationContextMenus.Commands.GoToTeamExplorerNextSectionContent"),
        #"go to team explorer section1 content":  VSExecuteCommand("TeamFoundationContextMenus.Commands.GoToTeamExplorerSection1Content"),
        #"go to team explorer section2 content":  VSExecuteCommand("TeamFoundationContextMenus.Commands.GoToTeamExplorerSection2Content"),
        #"go to team explorer section3 content":  VSExecuteCommand("TeamFoundationContextMenus.Commands.GoToTeamExplorerSection3Content"),
        #"go to team explorer section4 content":  VSExecuteCommand("TeamFoundationContextMenus.Commands.GoToTeamExplorerSection4Content"),
        #"go to team explorer section5 content":  VSExecuteCommand("TeamFoundationContextMenus.Commands.GoToTeamExplorerSection5Content"),
        #"go to team explorer section6 content":  VSExecuteCommand("TeamFoundationContextMenus.Commands.GoToTeamExplorerSection6Content"),
        #"go to team explorer section7 content":  VSExecuteCommand("TeamFoundationContextMenus.Commands.GoToTeamExplorerSection7Content"),
        #"go to team explorer section8 content":  VSExecuteCommand("TeamFoundationContextMenus.Commands.GoToTeamExplorerSection8Content"),
        #"go to team explorer section9 content":  VSExecuteCommand("TeamFoundationContextMenus.Commands.GoToTeamExplorerSection9Content"),
        "new work item bug":                     VSExecuteCommand("Team.NewWorkItemBug"),
        "new work item task":                    VSExecuteCommand("Team.NewWorkItemTask"),
        "new work item requirement":             VSExecuteCommand("Team.NewWorkItemRequirement"),
        "refresh work item":                     VSExecuteCommand("Edit.RefreshWorkItem"),
        #"goto previous work item":               VSExecuteCommand("Team.GotoPreviousWorkItem"),
        #"goto next work item":                   VSExecuteCommand("Team.GotoNextWorkItem"),
        #"goto previous modified work item":      VSExecuteCommand("Team.GotoPreviousModifiedWorkItem"),
        #"goto next modified work item":          VSExecuteCommand("Team.GotoNextModifiedWorkItem"),
        #"stop refresh":                          VSExecuteCommand("Team.StopRefresh"),
        #"addto my favorites":                    VSExecuteCommand("TeamFoundationContextMenus.QueriesSection.AddtoMyFavorites"),
        #"addto team favorites":                  VSExecuteCommand("TeamFoundationContextMenus.QueriesSection.AddtoTeamFavorites"),
        #"removefrom favorites":                  VSExecuteCommand("TeamFoundationContextMenus.QueriesSection.RemovefromFavorites"),
        #"edit query":                            VSExecuteCommand("Edit.EditQuery"),
        #"openin microsoft excel":                VSExecuteCommand("View.OpeninMicrosoftExcel"),
        #"openin microsoft excel flat":           VSExecuteCommand("View.OpeninMicrosoftExcelFlat"),
        #"openin microsoft excel tree":           VSExecuteCommand("View.OpeninMicrosoftExcelTree"),
        #"openin microsoft project":              VSExecuteCommand("View.OpeninMicrosoftProject"),
        "send to microsoft outlook":             VSExecuteCommand("View.SendtoMicrosoftOutlook"),
        #"create reportin microsoft excel":       VSExecuteCommand("View.CreateReportinMicrosoftExcel"),
        #"open selectionin microsoft project":    VSExecuteCommand("View.OpenSelectioninMicrosoftProject"),
        #"send selectionto microsoft outlook":    VSExecuteCommand("View.SendSelectiontoMicrosoftOutlook"),
        #"open work itemin microsoft excel":      VSExecuteCommand("View.OpenWorkIteminMicrosoftExcel"),
        #"open work itemin microsoft project":    VSExecuteCommand("View.OpenWorkIteminMicrosoftProject"),
        #"column options":                        VSExecuteCommand("Team.ColumnOptions"),
        #"goto work item":                        VSExecuteCommand("Team.GotoWorkItem"),
        #"create copyof work item":               VSExecuteCommand("Edit.CreateCopyofWorkItem"),
        #"new linked work item":                  VSExecuteCommand("Team.NewLinkedWorkItem"),
        #"linkto an existing item":               VSExecuteCommand("TeamFoundationContextMenus.ResultsList.LinktoAnExistingItem"),
        #"go to work items":                      VSExecuteCommand("TeamFoundationContextMenus.Commands.GoToWorkItems"),
        #"print selection details":               VSExecuteCommand("File.PrintSelectionDetails"),
        #"print selectionas list":                VSExecuteCommand("TeamFoundationContextMenus.ResultsList.PrintSelectionasList"),
        #"collapse a l l":                        VSExecuteCommand("View.CollapseALL"),
        #"outdent":                               VSExecuteCommand("Edit.Outdent"),
        #"indent":                                VSExecuteCommand("Edit.Indent"),
        #"view as query":                         VSExecuteCommand("Team.ViewAsQuery"),
        #"add attachment":                        VSExecuteCommand("Team.AddAttachment"),
        #"save as local copy":                    VSExecuteCommand("Team.SaveAsLocalCopy"),
        #"open linked item":                      VSExecuteCommand("Team.OpenLinkedItem"),
        #"linkto":                                VSExecuteCommand("Team.Linkto"),
        #"edit link":                             VSExecuteCommand("Team.EditLink"),
        #"delete link":                           VSExecuteCommand("Team.DeleteLink"),
        #"restore panes":                         VSExecuteCommand("Window.RestorePanes"),
        #"maximize results pane":                 VSExecuteCommand("Window.MaximizeResultsPane"),
        #"maximize work item preview pane":       VSExecuteCommand("Window.MaximizeWorkItemPreviewPane"),
        #"maximize query builder pane":           VSExecuteCommand("Window.MaximizeQueryBuilderPane"),
        #"split window horizontally":             VSExecuteCommand("Window.SplitWindowHorizontally"),
        #"split window vertically":               VSExecuteCommand("Window.SplitWindowVertically"),
        #"toggle":                                VSExecuteCommand("Window.Toggle"),
        #"track work item":                       VSExecuteCommand("TeamFoundationContextMenus.WorkItem.TrackWorkItem"),
        #"new work itemswith microsoft excel":    VSExecuteCommand("Team.NewWorkItemswithMicrosoftExcel"),
        #"new work itemswith microsoft project":  VSExecuteCommand("Team.NewWorkItemswithMicrosoftProject"),
        #"launch project":                        VSExecuteCommand("Debug.DiagnosticsHub.JavaScriptMemory.LaunchProject"),
        #"launch app":                            VSExecuteCommand("Debug.DiagnosticsHub.JavaScriptMemory.LaunchApp"),
        #"attach app":                            VSExecuteCommand("Debug.DiagnosticsHub.JavaScriptMemory.AttachApp"),
        #"pause collection":                      VSExecuteCommand("DiagnosticsHub.Session.PauseCollection"),
        #"resume collection":                     VSExecuteCommand("DiagnosticsHub.Session.ResumeCollection"),
        #"showinrootsview":                       VSExecuteCommand("OtherContextMenus.GridContextMenu.Showinrootsview"),
        #"java script console":                   VSExecuteCommand("Debug.JavaScriptConsole"),
        #"d o m explorer":                        VSExecuteCommand("Debug.DOMExplorer"),
        #"console toggle filter":                 VSExecuteCommand("Debug.ConsoleToggleFilter"),
        #"dom explorer switch tab":               VSExecuteCommand("Debug.DomExplorerSwitchTab"),
        #"refresh project toolbox items":         VSExecuteCommand("Project.RefreshProjectToolboxItems"),
        #"g p u threads":                         VSExecuteCommand("Debug.GPUThreads"),
        #"none":                                  VSExecuteCommand("DebuggerContextMenus.GPUThreadsWindowShortcutMenu.GroupBy.None"),
        #"parallel tasks":                        VSExecuteCommand("Debug.ParallelTasks"),
        #"parallel stacks":                       VSExecuteCommand("Debug.ParallelStacks"),
        #"parent child view":                     VSExecuteCommand("OtherContextMenus.ParallelTasksWindowShortcutMenu.ParentChildView"),
        #"freeze all threads but this one":       VSExecuteCommand("OtherContextMenus.ParallelTasksWindowShortcutMenu.FreezeAllThreadsButThisOne"),
        #"unflag all assigned threads":           VSExecuteCommand("OtherContextMenus.ParallelTasksWindowShortcutMenu.UnflagAllAssignedThreads"),
        #"switch view to frame":                  VSExecuteCommand("DebuggerContextMenus.StacksWindowShortcutMenu.SwitchViewToFrame"),
        #"edit watch":                            VSExecuteCommand("OtherContextMenus.ParallelWatchWindowShortcutMenu.EditWatch"),
        #"copy watch column":                     VSExecuteCommand("OtherContextMenus.ParallelWatchWindowShortcutMenu.CopyWatchColumn"),
        #"clear all watches":                     VSExecuteCommand("OtherContextMenus.ParallelWatchWindowShortcutMenu.ClearAllWatches"),
        #"copy row":                              VSExecuteCommand("OtherContextMenus.ParallelWatchWindowShortcutMenu.CopyRow"),
        #"auto":                                  VSExecuteCommand("OtherContextMenus.ParallelWatchWindowShortcutMenu.ConfigureColumn.Auto"),
        #"[ machine]":                            VSExecuteCommand("OtherContextMenus.ParallelWatchWindowShortcutMenu.ConfigureColumn.[Machine]"),
        #"[ process]":                            VSExecuteCommand("OtherContextMenus.ParallelWatchWindowShortcutMenu.ConfigureColumn.[Process]"),
        #"[ m p i rank]":                         VSExecuteCommand("OtherContextMenus.ParallelWatchWindowShortcutMenu.ConfigureColumn.[MPIRank]"),
        #"[ tile]":                               VSExecuteCommand("OtherContextMenus.ParallelWatchWindowShortcutMenu.ConfigureColumn.[Tile]"),
        #"[ thread]":                             VSExecuteCommand("OtherContextMenus.ParallelWatchWindowShortcutMenu.ConfigureColumn.[Thread]"),
        #"[ task]":                               VSExecuteCommand("OtherContextMenus.ParallelWatchWindowShortcutMenu.ConfigureColumn.[Task]"),
        #"[ recursion depth]":                    VSExecuteCommand("OtherContextMenus.ParallelWatchWindowShortcutMenu.ConfigureColumn.[RecursionDepth]"),
        #"reset":                                 VSExecuteCommand("OtherContextMenus.PropertyBrowser.Reset"),
        #"commands":                              VSExecuteCommand("OtherContextMenus.PropertyBrowser.Commands"),
        #"description":                           VSExecuteCommand("OtherContextMenus.PropertyBrowser.Description"),
        #"start x s l t debugging":               VSExecuteCommand("XML.StartXSLTDebugging"),
        #"start x s l t without debugging":       VSExecuteCommand("XML.StartXSLTWithoutDebugging"),
        #"stop x s l t":                          VSExecuteCommand("XML.StopXSLT"),
        #"profile x s l t":                       VSExecuteCommand("XML.ProfileXSLT"),
        "create schema":                         VSExecuteCommand("XML.CreateSchema"),
        "schemas":                               VSExecuteCommand("XML.Schemas"),
        #"show start view":                       VSExecuteCommand("XsdDesigner.ShowStartView"),
        #"show content model view":               VSExecuteCommand("XsdDesigner.ShowContentModelView"),
        #"show graph view":                       VSExecuteCommand("XsdDesigner.ShowGraphView"),
        #"leftto right":                          VSExecuteCommand("GraphView.LefttoRight"),
        #"rightto left":                          VSExecuteCommand("GraphView.RighttoLeft"),
        #"topto bottom":                          VSExecuteCommand("GraphView.ToptoBottom"),
        #"bottomto top":                          VSExecuteCommand("GraphView.BottomtoTop"),
        #"show documentation":                    VSExecuteCommand("OtherContextMenus.ContentModelView.ShowDocumentation"),
        #"add type definition":                   VSExecuteCommand("OtherContextMenus.GraphView.AddTypeDefinition"),
        #"add base type definition":              VSExecuteCommand("OtherContextMenus.GraphView.AddBaseTypeDefinition"),
        #"add all references":                    VSExecuteCommand("OtherContextMenus.GraphView.AddAllReferences"),
        #"add all derived types":                 VSExecuteCommand("OtherContextMenus.GraphView.AddAllDerivedTypes"),
        #"add all ancestors":                     VSExecuteCommand("OtherContextMenus.GraphView.AddAllAncestors"),
        #"add substitution group members":        VSExecuteCommand("OtherContextMenus.GraphView.AddSubstitutionGroupMembers"),
        #"add all members":                       VSExecuteCommand("OtherContextMenus.GraphView.AddAllMembers"),
        #"go to base type":                       VSExecuteCommand("OtherContextMenus.SchemaExplorer.GoToBaseType"),
        #"show all references":                   VSExecuteCommand("OtherContextMenus.SchemaExplorer.ShowAllReferences"),
        #"go to referenced element":              VSExecuteCommand("OtherContextMenus.SchemaExplorer.GoToReferencedElement"),
        #"go to referenced attribute":            VSExecuteCommand("OtherContextMenus.SchemaExplorer.GoToReferencedAttribute"),
        #"go to referenced group":                VSExecuteCommand("OtherContextMenus.SchemaExplorer.GoToReferencedGroup"),
        #"go to referenced attribute group":      VSExecuteCommand("OtherContextMenus.SchemaExplorer.GoToReferencedAttributeGroup"),
        #"show most likely root elements":        VSExecuteCommand("OtherContextMenus.SchemaExplorer.ShowMostLikelyRootElements"),
        #"show all inbound references":           VSExecuteCommand("OtherContextMenus.SchemaExplorer.ShowAllInboundReferences"),
        #"show all outbound references":          VSExecuteCommand("OtherContextMenus.SchemaExplorer.ShowAllOutboundReferences"),
        #"show substitution group members":       VSExecuteCommand("OtherContextMenus.SchemaExplorer.ShowSubstitutionGroupMembers"),
        #"show all derived types":                VSExecuteCommand("OtherContextMenus.SchemaExplorer.ShowAllDerivedTypes"),
        #"show all ancestors":                    VSExecuteCommand("OtherContextMenus.SchemaExplorer.ShowAllAncestors"),
        #"show global types":                     VSExecuteCommand("OtherContextMenus.SchemaExplorer.ShowGlobalTypes"),
        #"show global elements":                  VSExecuteCommand("OtherContextMenus.SchemaExplorer.ShowGlobalElements"),
        #"showin content model view":             VSExecuteCommand("OtherContextMenus.SchemaExplorer.ShowinContentModelView"),
        #"showin graph view":                     VSExecuteCommand("OtherContextMenus.SchemaExplorer.ShowinGraphView"),
        #"generate sample x m l":                 VSExecuteCommand("OtherContextMenus.SchemaExplorer.GenerateSampleXML"),
        #"clear workspace":                       VSExecuteCommand("OtherContextMenus.GraphView.ClearWorkspace"),
        #"removefrom workspace":                  VSExecuteCommand("OtherContextMenus.GraphView.RemovefromWorkspace"),
        #"removeallbutselectionfrom workspace":   VSExecuteCommand("OtherContextMenus.GraphView.RemoveallbutselectionfromWorkspace"),
        "to upper case":                         VSExecuteCommand("EditorContextMenus.CodeWindow.WebEssentials.TransformSelection.ToUpperCase"),
        "to lower case":                         VSExecuteCommand("EditorContextMenus.CodeWindow.WebEssentials.TransformSelection.ToLowerCase"),
        "to title case":                         VSExecuteCommand("EditorContextMenus.CodeWindow.WebEssentials.TransformSelection.ToTitleCase"),
        "reverse":                               VSExecuteCommand("EditorContextMenus.CodeWindow.WebEssentials.TransformSelection.Reverse"),
        "remove diacritics":                     VSExecuteCommand("EditorContextMenus.CodeWindow.WebEssentials.TransformSelection.RemoveDiacritics"),
        "md5":                                   VSExecuteCommand("EditorContextMenus.CodeWindow.WebEssentials.TransformSelection.MD5"),
        #"sh a1":                                 VSExecuteCommand("EditorContextMenus.CodeWindow.WebEssentials.TransformSelection.SHA1"),
        #"s h a256":                              VSExecuteCommand("EditorContextMenus.CodeWindow.WebEssentials.TransformSelection.SHA256"),
        #"s h a384":                              VSExecuteCommand("EditorContextMenus.CodeWindow.WebEssentials.TransformSelection.SHA384"),
        #"s h a512":                              VSExecuteCommand("EditorContextMenus.CodeWindow.WebEssentials.TransformSelection.SHA512"),
        "h t m l encode":                        VSExecuteCommand("EditorContextMenus.CodeWindow.WebEssentials.EncodeSelection.HTMLEncode"),
        "h t m l attribute encode":              VSExecuteCommand("EditorContextMenus.CodeWindow.WebEssentials.EncodeSelection.HTMLAttributeEncode"),
        "h t m l decode":                        VSExecuteCommand("EditorContextMenus.CodeWindow.WebEssentials.EncodeSelection.HTMLDecode"),
        "java script string encode":             VSExecuteCommand("EditorContextMenus.CodeWindow.WebEssentials.EncodeSelection.JavaScriptStringEncode"),
        "u r l encode":                          VSExecuteCommand("EditorContextMenus.CodeWindow.WebEssentials.EncodeSelection.URLEncode"),
        "u r l path encode":                     VSExecuteCommand("EditorContextMenus.CodeWindow.WebEssentials.EncodeSelection.URLPathEncode"),
        "u r l decode":                          VSExecuteCommand("EditorContextMenus.CodeWindow.WebEssentials.EncodeSelection.URLDecode"),
        "minify selection":                      VSExecuteCommand("EditorContextMenus.CodeWindow.WebEssentials.Minifyselection"),
        "select browsers":                       VSExecuteCommand("EditorContextMenus.CodeWindow.WebEssentials.Selectbrowsers"),
        "remove duplicate properties":           VSExecuteCommand("EditorContextMenus.CodeWindow.WebEssentials.RemoveDuplicateProperties"),
        "add missing standard properties":       VSExecuteCommand("EditorContextMenus.CodeWindow.WebEssentials.AddMissingStandardProperties"),
        "add missing vendor specifics":          VSExecuteCommand("EditorContextMenus.CodeWindow.WebEssentials.AddMissingVendorSpecifics"),
        "sort all properties":                   VSExecuteCommand("EditorContextMenus.CodeWindow.WebEssentials.SortAllProperties"),
        "minify css files":                      VSExecuteCommand("ProjectandSolutionContextMenus.Project.WebEssentials.MinifyCSSfiles"),
        "minify java scriptfiles":               VSExecuteCommand("ProjectandSolutionContextMenus.Project.WebEssentials.MinifyJavaScriptfiles"),
        "create css bundlefile":                 VSExecuteCommand("ProjectandSolutionContextMenus.Project.WebEssentials.CreateCSSbundlefile"),
        "create java scriptbundlefile":          VSExecuteCommand("ProjectandSolutionContextMenus.Project.WebEssentials.CreateJavaScriptbundlefile"),
        "update all bundles":                    VSExecuteCommand("Build.Updateallbundles"),
        "reminify files":                        VSExecuteCommand("Build.ReminifyallCSSJSfiles"),
        "recompile all less files":              VSExecuteCommand("Build.RecompileallLESSfiles"),
        "recompile all types script files":      VSExecuteCommand("Build.RecompileallTypesScriptfiles"),
        "recompile all coffee script files":     VSExecuteCommand("Build.RecompileallCoffeeScriptfiles"),
        "create solution settings":              VSExecuteCommand("ProjectandSolutionContextMenus.Project.WebEssentials.Createsolutionsettings"),
        "create color palette":                  VSExecuteCommand("ProjectandSolutionContextMenus.Project.WebEssentials.Createcolorpalette"),
        "create markdown stylesheet":            VSExecuteCommand("ProjectandSolutionContextMenus.Project.WebEssentials.CreateMarkdownstylesheet"),
        "diff selected files":                   VSExecuteCommand("ProjectandSolutionContextMenus.Project.WebEssentials.Diffselectedfiles"),
        "run j s hint":                          VSExecuteCommand("ProjectandSolutionContextMenus.Project.WebEssentials.RunJSHint"),
        "extract to file":                       VSExecuteCommand("EditorContextMenus.CodeWindow.WebEssentials.Extracttofile"),
        "extract to variable":                   VSExecuteCommand("EditorContextMenus.CodeWindow.WebEssentials.Extracttovariable"),
        "extract to mixin":                      VSExecuteCommand("EditorContextMenus.CodeWindow.WebEssentials.Extracttomixin"),
        #"start listening":                       VSExecuteCommand("Tools.StartListening"),
        #"go to find combo":                      VSExecuteCommand("Edit.GoToFindCombo"),
        #"solution configurations":               VSExecuteCommand("Build.SolutionConfigurations"),
        #"object browsing scope":                 VSExecuteCommand("View.ObjectBrowsingScope"),
        #"solution platforms":                    VSExecuteCommand("Build.SolutionPlatforms"),
        #"u r l":                                 VSExecuteCommand("View.URL"),
        #"step by":                               VSExecuteCommand("Debug.StepBy"),
        #"process combo":                         VSExecuteCommand("Debug.LocationToolbar.ProcessCombo"),
        #"thread combo":                          VSExecuteCommand("Debug.LocationToolbar.ThreadCombo"),
        #"stack frame combo":                     VSExecuteCommand("Debug.LocationToolbar.StackFrameCombo"),
        #"t sql editor database combo":           VSExecuteCommand("TSqlEditorDatabaseCombo"),
        #"view file in script panel":             VSExecuteCommand("ViewFileInScriptPanel"),
        #"debug type":                            VSExecuteCommand("Debug.DebugType"),
        #"current view":                          VSExecuteCommand("Analyze.CurrentView"),
        #"query results max rows":                VSExecuteCommand("QueryResultsMaxRows"),
    }

vsBootstrap = Grammar("Visual Studio Shortcuts Bootstrap")                
vsBootstrap.add_rule(VSShortcutEnabler())
vsBootstrap.load()

vsGrammar = Grammar("Visual Studio Shortcuts grammar")
vsGrammar.add_rule(VSShortcutMap())
vsGrammar.add_rule(VSShortcutDisabler())
vsGrammar.load()

# default state for csGrammar is disabled.
vsGrammar.disable()

# Unload function which will be called by natlink at unload time.
def unload():
    global vsGrammar
    if vsGrammar: vsGrammar.unload()
    vsGrammar = None